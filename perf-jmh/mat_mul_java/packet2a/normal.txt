# JMH version: 1.19
# VM version: JDK 1.8.0_141, VM 25.141-b16
# VM invoker: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.141-2.b16.el7_4.aarch64/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: mat_mul.MyBenchmark.loop
# Parameters: (N_str = 64)

# Run progress: 0.00% complete, ETA 00:02:40
# Fork: 1 of 2
# Warmup Iteration   1: 0.002 s/op
# Warmup Iteration   2: 0.002 s/op
# Warmup Iteration   3: 0.002 s/op
Iteration   1: 0.002 s/op
Iteration   2: 0.002 s/op
Iteration   3: 0.002 s/op
Iteration   4: 0.002 s/op
Iteration   5: 0.002 s/op

# Run progress: 5.00% complete, ETA 00:02:51
# Fork: 2 of 2
# Warmup Iteration   1: 0.002 s/op
# Warmup Iteration   2: 0.002 s/op
# Warmup Iteration   3: 0.002 s/op
Iteration   1: 0.002 s/op
Iteration   2: 0.002 s/op
Iteration   3: 0.002 s/op
Iteration   4: 0.002 s/op
Iteration   5: 0.002 s/op


Result "mat_mul.MyBenchmark.loop":
  0.002 ?(99.9%) 0.001 s/op [Average]
  (min, avg, max) = (0.002, 0.002, 0.002), stdev = 0.001
  CI (99.9%): [0.002, 0.002] (assumes normal distribution)


# JMH version: 1.19
# VM version: JDK 1.8.0_141, VM 25.141-b16
# VM invoker: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.141-2.b16.el7_4.aarch64/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: mat_mul.MyBenchmark.loop
# Parameters: (N_str = 128)

# Run progress: 10.00% complete, ETA 00:02:40
# Fork: 1 of 2
# Warmup Iteration   1: 0.038 s/op
# Warmup Iteration   2: 0.036 s/op
# Warmup Iteration   3: 0.037 s/op
Iteration   1: 0.037 s/op
Iteration   2: 0.036 s/op
Iteration   3: 0.036 s/op
Iteration   4: 0.036 s/op
Iteration   5: 0.037 s/op

# Run progress: 15.00% complete, ETA 00:02:31
# Fork: 2 of 2
# Warmup Iteration   1: 0.038 s/op
# Warmup Iteration   2: 0.036 s/op
# Warmup Iteration   3: 0.036 s/op
Iteration   1: 0.036 s/op
Iteration   2: 0.036 s/op
Iteration   3: 0.036 s/op
Iteration   4: 0.036 s/op
Iteration   5: 0.036 s/op


Result "mat_mul.MyBenchmark.loop":
  0.037 ?(99.9%) 0.001 s/op [Average]
  (min, avg, max) = (0.036, 0.037, 0.037), stdev = 0.001
  CI (99.9%): [0.036, 0.037] (assumes normal distribution)


# JMH version: 1.19
# VM version: JDK 1.8.0_141, VM 25.141-b16
# VM invoker: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.141-2.b16.el7_4.aarch64/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: mat_mul.MyBenchmark.loop
# Parameters: (N_str = 256)

# Run progress: 20.00% complete, ETA 00:02:23
# Fork: 1 of 2
# Warmup Iteration   1: 0.778 s/op
# Warmup Iteration   2: 0.760 s/op
# Warmup Iteration   3: 0.759 s/op
Iteration   1: 0.758 s/op
Iteration   2: 0.758 s/op
Iteration   3: 0.759 s/op
Iteration   4: 0.759 s/op
Iteration   5: 0.758 s/op

# Run progress: 25.00% complete, ETA 00:02:26
# Fork: 2 of 2
# Warmup Iteration   1: 0.778 s/op
# Warmup Iteration   2: 0.759 s/op
# Warmup Iteration   3: 0.759 s/op
Iteration   1: 0.759 s/op
Iteration   2: 0.760 s/op
Iteration   3: 0.760 s/op
Iteration   4: 0.759 s/op
Iteration   5: 0.759 s/op


Result "mat_mul.MyBenchmark.loop":
  0.759 ?(99.9%) 0.001 s/op [Average]
  (min, avg, max) = (0.758, 0.759, 0.760), stdev = 0.001
  CI (99.9%): [0.758, 0.760] (assumes normal distribution)


# JMH version: 1.19
# VM version: JDK 1.8.0_141, VM 25.141-b16
# VM invoker: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.141-2.b16.el7_4.aarch64/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: mat_mul.MyBenchmark.loop
# Parameters: (N_str = 512)

# Run progress: 30.00% complete, ETA 00:02:23
# Fork: 1 of 2
# Warmup Iteration   1: 6.349 s/op
# Warmup Iteration   2: 6.312 s/op
# Warmup Iteration   3: 6.281 s/op
Iteration   1: 6.282 s/op
Iteration   2: 6.281 s/op
Iteration   3: 6.281 s/op
Iteration   4: 6.279 s/op
Iteration   5: 6.279 s/op

# Run progress: 35.00% complete, ETA 00:03:29
# Fork: 2 of 2
# Warmup Iteration   1: 6.355 s/op
# Warmup Iteration   2: 6.333 s/op
# Warmup Iteration   3: 6.302 s/op
Iteration   1: 6.302 s/op
Iteration   2: 6.302 s/op
Iteration   3: 6.302 s/op
Iteration   4: 6.302 s/op
Iteration   5: 6.302 s/op


Result "mat_mul.MyBenchmark.loop":
  6.291 ?(99.9%) 0.017 s/op [Average]
  (min, avg, max) = (6.279, 6.291, 6.302), stdev = 0.011
  CI (99.9%): [6.274, 6.308] (assumes normal distribution)


# JMH version: 1.19
# VM version: JDK 1.8.0_141, VM 25.141-b16
# VM invoker: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.141-2.b16.el7_4.aarch64/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: mat_mul.MyBenchmark.loop
# Parameters: (N_str = 1024)

# Run progress: 40.00% complete, ETA 00:04:06
# Fork: 1 of 2
# Warmup Iteration   1: 51.572 s/op
# Warmup Iteration   2: 51.543 s/op
# Warmup Iteration   3: 51.540 s/op
Iteration   1: 51.538 s/op
Iteration   2: 51.538 s/op
Iteration   3: 51.537 s/op
Iteration   4: 51.538 s/op
Iteration   5: 51.537 s/op

# Run progress: 45.00% complete, ETA 00:11:45
# Fork: 2 of 2
# Warmup Iteration   1: 51.716 s/op
# Warmup Iteration   2: 51.675 s/op
# Warmup Iteration   3: 51.598 s/op
Iteration   1: 51.537 s/op
Iteration   2: 51.544 s/op
Iteration   3: 51.562 s/op
Iteration   4: 51.689 s/op
Iteration   5: 51.559 s/op


Result "mat_mul.MyBenchmark.loop":
  51.558 ?(99.9%) 0.071 s/op [Average]
  (min, avg, max) = (51.537, 51.558, 51.689), stdev = 0.047
  CI (99.9%): [51.487, 51.629] (assumes normal distribution)


# JMH version: 1.19
# VM version: JDK 1.8.0_141, VM 25.141-b16
# VM invoker: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.141-2.b16.el7_4.aarch64/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: mat_mul.MyBenchmark.loop_ikj
# Parameters: (N_str = 64)

# Run progress: 50.00% complete, ETA 00:16:31
# Fork: 1 of 2
# Warmup Iteration   1: 0.001 s/op
# Warmup Iteration   2: 0.001 s/op
# Warmup Iteration   3: 0.001 s/op
Iteration   1: 0.001 s/op
Iteration   2: 0.001 s/op
Iteration   3: 0.001 s/op
Iteration   4: 0.001 s/op
Iteration   5: 0.001 s/op

# Run progress: 55.00% complete, ETA 00:13:38
# Fork: 2 of 2
# Warmup Iteration   1: 0.001 s/op
# Warmup Iteration   2: 0.001 s/op
# Warmup Iteration   3: 0.001 s/op
Iteration   1: 0.001 s/op
Iteration   2: 0.001 s/op
Iteration   3: 0.001 s/op
Iteration   4: 0.001 s/op
Iteration   5: 0.001 s/op


Result "mat_mul.MyBenchmark.loop_ikj":
  0.001 ?(99.9%) 0.001 s/op [Average]
  (min, avg, max) = (0.001, 0.001, 0.001), stdev = 0.001
  CI (99.9%): [0.001, 0.001] (assumes normal distribution)


# JMH version: 1.19
# VM version: JDK 1.8.0_141, VM 25.141-b16
# VM invoker: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.141-2.b16.el7_4.aarch64/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: mat_mul.MyBenchmark.loop_ikj
# Parameters: (N_str = 128)

# Run progress: 60.00% complete, ETA 00:11:12
# Fork: 1 of 2
# Warmup Iteration   1: 0.007 s/op
# Warmup Iteration   2: 0.007 s/op
# Warmup Iteration   3: 0.007 s/op
Iteration   1: 0.007 s/op
Iteration   2: 0.007 s/op
Iteration   3: 0.007 s/op
Iteration   4: 0.007 s/op
Iteration   5: 0.007 s/op

# Run progress: 65.00% complete, ETA 00:09:07
# Fork: 2 of 2
# Warmup Iteration   1: 0.007 s/op
# Warmup Iteration   2: 0.007 s/op
# Warmup Iteration   3: 0.007 s/op
Iteration   1: 0.007 s/op
Iteration   2: 0.007 s/op
Iteration   3: 0.007 s/op
Iteration   4: 0.007 s/op
Iteration   5: 0.007 s/op


Result "mat_mul.MyBenchmark.loop_ikj":
  0.007 ?(99.9%) 0.001 s/op [Average]
  (min, avg, max) = (0.007, 0.007, 0.007), stdev = 0.001
  CI (99.9%): [0.007, 0.007] (assumes normal distribution)


# JMH version: 1.19
# VM version: JDK 1.8.0_141, VM 25.141-b16
# VM invoker: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.141-2.b16.el7_4.aarch64/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: mat_mul.MyBenchmark.loop_ikj
# Parameters: (N_str = 256)

# Run progress: 70.00% complete, ETA 00:07:19
# Fork: 1 of 2
# Warmup Iteration   1: 0.054 s/op
# Warmup Iteration   2: 0.053 s/op
# Warmup Iteration   3: 0.053 s/op
Iteration   1: 0.054 s/op
Iteration   2: 0.053 s/op
Iteration   3: 0.053 s/op
Iteration   4: 0.053 s/op
Iteration   5: 0.053 s/op

# Run progress: 75.00% complete, ETA 00:05:45
# Fork: 2 of 2
# Warmup Iteration   1: 0.054 s/op
# Warmup Iteration   2: 0.053 s/op
# Warmup Iteration   3: 0.053 s/op
Iteration   1: 0.054 s/op
Iteration   2: 0.053 s/op
Iteration   3: 0.053 s/op
Iteration   4: 0.053 s/op
Iteration   5: 0.053 s/op


Result "mat_mul.MyBenchmark.loop_ikj":
  0.053 ?(99.9%) 0.001 s/op [Average]
  (min, avg, max) = (0.053, 0.053, 0.054), stdev = 0.001
  CI (99.9%): [0.053, 0.054] (assumes normal distribution)


# JMH version: 1.19
# VM version: JDK 1.8.0_141, VM 25.141-b16
# VM invoker: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.141-2.b16.el7_4.aarch64/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: mat_mul.MyBenchmark.loop_ikj
# Parameters: (N_str = 512)

# Run progress: 80.00% complete, ETA 00:04:21
# Fork: 1 of 2
# Warmup Iteration   1: 0.368 s/op
# Warmup Iteration   2: 0.419 s/op
# Warmup Iteration   3: 0.420 s/op
Iteration   1: 0.415 s/op
Iteration   2: 0.415 s/op
Iteration   3: 0.424 s/op
Iteration   4: 0.420 s/op
Iteration   5: 0.419 s/op

# Run progress: 85.00% complete, ETA 00:03:06
# Fork: 2 of 2
# Warmup Iteration   1: 0.368 s/op
# Warmup Iteration   2: 0.415 s/op
# Warmup Iteration   3: 0.423 s/op
Iteration   1: 0.429 s/op
Iteration   2: 0.419 s/op
Iteration   3: 0.424 s/op
Iteration   4: 0.419 s/op
Iteration   5: 0.429 s/op


Result "mat_mul.MyBenchmark.loop_ikj":
  0.421 ?(99.9%) 0.007 s/op [Average]
  (min, avg, max) = (0.415, 0.421, 0.429), stdev = 0.005
  CI (99.9%): [0.414, 0.429] (assumes normal distribution)


# JMH version: 1.19
# VM version: JDK 1.8.0_141, VM 25.141-b16
# VM invoker: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.141-2.b16.el7_4.aarch64/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: mat_mul.MyBenchmark.loop_ikj
# Parameters: (N_str = 1024)

# Run progress: 90.00% complete, ETA 00:01:58
# Fork: 1 of 2
# Warmup Iteration   1: 2.445 s/op
# Warmup Iteration   2: 2.419 s/op
# Warmup Iteration   3: 2.409 s/op
Iteration   1: 2.404 s/op
Iteration   2: 2.407 s/op
Iteration   3: 2.407 s/op
Iteration   4: 2.406 s/op
Iteration   5: 2.406 s/op

# Run progress: 95.00% complete, ETA 00:00:57
# Fork: 2 of 2
# Warmup Iteration   1: 2.447 s/op
# Warmup Iteration   2: 2.419 s/op
# Warmup Iteration   3: 2.410 s/op
Iteration   1: 2.409 s/op
Iteration   2: 2.410 s/op
Iteration   3: 2.405 s/op
Iteration   4: 2.405 s/op
Iteration   5: 2.411 s/op


Result "mat_mul.MyBenchmark.loop_ikj":
  2.407 ?(99.9%) 0.004 s/op [Average]
  (min, avg, max) = (2.404, 2.407, 2.411), stdev = 0.002
  CI (99.9%): [2.403, 2.411] (assumes normal distribution)


# Run complete. Total time: 00:18:26

Benchmark             (N_str)  Mode  Cnt   Score    Error  Units
MyBenchmark.loop           64  avgt   10   0.002 ?  0.001   s/op
MyBenchmark.loop          128  avgt   10   0.037 ?  0.001   s/op
MyBenchmark.loop          256  avgt   10   0.759 ?  0.001   s/op
MyBenchmark.loop          512  avgt   10   6.291 ?  0.017   s/op
MyBenchmark.loop         1024  avgt   10  51.558 ?  0.071   s/op
MyBenchmark.loop_ikj       64  avgt   10   0.001 ?  0.001   s/op
MyBenchmark.loop_ikj      128  avgt   10   0.007 ?  0.001   s/op
MyBenchmark.loop_ikj      256  avgt   10   0.053 ?  0.001   s/op
MyBenchmark.loop_ikj      512  avgt   10   0.421 ?  0.007   s/op
MyBenchmark.loop_ikj     1024  avgt   10   2.407 ?  0.004   s/op
