CompilerOracle: unrecognized line
  "print MyBenchmark"
  Unrecognized text  MyBenchmark after command 
# JMH version: 1.19
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.151-1.b12.el7_4.aarch64/jre/bin/java
# VM options: -XX:+UnlockDiagnosticVMOptions -XX:CompileCommand=print,MyBenchmark
# Warmup: 3 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: mat_mul.MyBenchmark.loop
# Parameters: (N_str = 64)

# Run progress: 0.00% complete, ETA 00:02:40
# Fork: 1 of 2
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 0.002 s/op
# Warmup Iteration   2: 0.002 s/op
# Warmup Iteration   3: 0.002 s/op
Iteration   1: 0.002 s/op
Iteration   2: 0.002 s/op
Iteration   3: 0.002 s/op
Iteration   4: 0.002 s/op
Iteration   5: 0.002 s/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 5.00% complete, ETA 00:11:38
# Fork: 2 of 2
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 0.002 s/op
# Warmup Iteration   2: 0.002 s/op
# Warmup Iteration   3: 0.002 s/op
Iteration   1: 0.002 s/op
Iteration   2: 0.002 s/op
Iteration   3: 0.002 s/op
Iteration   4: 0.002 s/op
Iteration   5: 0.002 s/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "mat_mul.MyBenchmark.loop":
  0.002 ?(99.9%) 0.001 s/op [Average]
  (min, avg, max) = (0.002, 0.002, 0.002), stdev = 0.001
  CI (99.9%): [0.002, 0.002] (assumes normal distribution)

Secondary result "mat_mul.MyBenchmark.loop:?asm":
PrintAssembly processed: 194797 total address lines.
Perf output processed (skipped 21.865 seconds):
 Column 1: cycles (5429 events)
 Column 2: instructions (5410 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
C2, level 4, mat_mul.MyBenchmark::loop, version 577 (288 bytes) 

                    0x000003ffa856f40c: cbz	w0, 0x000003ffa856f5d0
                    0x000003ffa856f410: cmp	x19, x11
                    0x000003ffa856f414: b.cs	0x000003ffa856f5d0  ;*aload_0
                                                                  ; - mat_mul.MyBenchmark::loop@32 (line 41)
                    0x000003ffa856f418: cmp	w16, w10
                    0x000003ffa856f41c: csel	w0, w18, w10, lt
                    0x000003ffa856f420: mov	w5, wzr
                    0x000003ffa856f424: b	0x000003ffa856f440
                    0x000003ffa856f428: add	w5, w5, #0x1    ;*iadd
                                                                  ; - mat_mul.MyBenchmark::loop@128 (line 40)
  0.06%    0.04%    0x000003ffa856f42c: add	x10, x6, x20
  0.04%    0.07%    0x000003ffa856f430: str	w4, [x10,#16]   ;*iastore
                                                                  ; - mat_mul.MyBenchmark::loop@121 (line 45)
  0.06%    0.06%    0x000003ffa856f434: str	w5, [x1,#20]    ;*putfield j
                                                                  ; - mat_mul.MyBenchmark::loop@129 (line 40)
                    0x000003ffa856f438: cmp	w5, w16
                    0x000003ffa856f43c: b.ge	0x000003ffa856f358  ;*aload_0
                                                                  ; - mat_mul.MyBenchmark::loop@32 (line 41)
  0.13%    0.13%    0x000003ffa856f440: str	wzr, [x1,#28]   ;*putfield s
                                                                  ; - mat_mul.MyBenchmark::loop@34 (line 41)
  0.07%    0.11%    0x000003ffa856f444: str	wzr, [x1,#24]   ;*putfield k
                                                                  ; - mat_mul.MyBenchmark::loop@39 (line 42)
           0.11%    0x000003ffa856f448: ldr	w10, [x7,#12]   ; implicit exception: dispatches to 0x000003ffa856f5f0
  0.09%    0.07%    0x000003ffa856f44c: ldr	w19, [x14,#16]  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop@71 (line 43)
                    0x000003ffa856f450: cmp	w5, w10
                    0x000003ffa856f454: b.cs	0x000003ffa856f5ac
  0.07%    0.07%    0x000003ffa856f458: sbfiz	x20, x5, #2, #32  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop@85 (line 43)
  0.07%    0.13%    0x000003ffa856f45c: add	x10, x7, x20
  0.09%    0.07%    0x000003ffa856f460: ldr	w11, [x10,#16]
  0.35%    0.18%    0x000003ffa856f464: mul	w4, w11, w19    ;*imul
                                                                  ; - mat_mul.MyBenchmark::loop@86 (line 43)
  0.18%    0.11%    0x000003ffa856f468: str	w15, [x1,#24]   ;*putfield k
                                                                  ; - mat_mul.MyBenchmark::loop@98 (line 42)
  0.07%    0.15%    0x000003ffa856f46c: str	w4, [x1,#28]    ;*putfield s
                                                                  ; - mat_mul.MyBenchmark::loop@88 (line 43)
                    0x000003ffa856f470: cmp	w0, #0x1
                    0x000003ffa856f474: b.le	0x000003ffa856f5b8
  0.11%    0.09%    0x000003ffa856f478: orr	w3, wzr, #0x1
                    0x000003ffa856f47c: nop                       ;*aload_0
                                                                  ; - mat_mul.MyBenchmark::loop@53 (line 43)
  2.60%    4.10%    0x000003ffa856f480: sbfiz	x19, x3, #2, #32
  3.22%    4.44%    0x000003ffa856f484: add	x10, x13, x19
                    0x000003ffa856f488: sbfiz	x22, x3, #2, #32
  2.97%    3.57%    0x000003ffa856f48c: ldr	w10, [x10,#16]
                    0x000003ffa856f490: add	x11, x13, x22
  2.98%    2.48%    0x000003ffa856f494: lsl	x25, x10, #3
                    0x000003ffa856f498: ldr	w11, [x11,#20]
  6.52%    6.28%    0x000003ffa856f49c: ldr	w10, [x25,#12]  ; implicit exception: dispatches to 0x000003ffa856f5f0
  0.02%             0x000003ffa856f4a0: add	x19, x14, x19
  2.82%    2.61%    0x000003ffa856f4a4: add	x26, x25, x20
                    0x000003ffa856f4a8: lsl	x24, x11, #3    ;*aaload
                                                                  ; - mat_mul.MyBenchmark::loop@80 (line 43)
  6.54%    5.38%    0x000003ffa856f4ac: ldr	w19, [x19,#16]  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop@71 (line 43)
                    0x000003ffa856f4b0: cmp	w5, w10
                    0x000003ffa856f4b4: b.cs	0x000003ffa856f588  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop@85 (line 43)
  2.95%    3.51%    0x000003ffa856f4b8: ldr	w10, [x26,#16]
           0.06%    0x000003ffa856f4bc: add	w11, w3, #0x1
  9.41%    9.89%    0x000003ffa856f4c0: madd	w4, w10, w19, w4  ;*iadd
                                                                  ; - mat_mul.MyBenchmark::loop@87 (line 43)
  3.04%    3.94%    0x000003ffa856f4c4: str	w11, [x1,#24]   ;*putfield k
                                                                  ; - mat_mul.MyBenchmark::loop@98 (line 42)
  6.24%    7.86%    0x000003ffa856f4c8: str	w4, [x1,#28]    ;*putfield s
                                                                  ; - mat_mul.MyBenchmark::loop@88 (line 43)
  5.95%    6.38%    0x000003ffa856f4cc: ldr	w10, [x24,#12]  ; implicit exception: dispatches to 0x000003ffa856f5f0
           0.02%    0x000003ffa856f4d0: add	x19, x14, x22
  2.80%    2.83%    0x000003ffa856f4d4: add	x11, x24, x20
                    0x000003ffa856f4d8: ldr	w19, [x19,#20]  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop@71 (line 43)
  2.89%    3.07%    0x000003ffa856f4dc: cmp	w5, w10
                    0x000003ffa856f4e0: b.cs	0x000003ffa856f58c  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop@85 (line 43)
                    0x000003ffa856f4e4: ldr	w10, [x11,#16]
  9.62%    7.21%    0x000003ffa856f4e8: madd	w4, w10, w19, w4  ;*iadd
                                                                  ; - mat_mul.MyBenchmark::loop@87 (line 43)
  3.50%    2.57%    0x000003ffa856f4ec: add	w3, w3, #0x2    ;*iadd
                                                                  ; - mat_mul.MyBenchmark::loop@97 (line 42)
  6.47%    4.73%    0x000003ffa856f4f0: str	w4, [x1,#28]    ;*putfield s
                                                                  ; - mat_mul.MyBenchmark::loop@88 (line 43)
  5.99%    5.49%    0x000003ffa856f4f4: str	w3, [x1,#24]    ;*putfield k
                                                                  ; - mat_mul.MyBenchmark::loop@98 (line 42)
                    0x000003ffa856f4f8: cmp	w3, w0
                    0x000003ffa856f4fc: b.lt	0x000003ffa856f480  ;*if_icmpge
                                                                  ; - mat_mul.MyBenchmark::loop@50 (line 42)
  0.74%    0.91%    0x000003ffa856f500: cmp	w3, w16
                    0x000003ffa856f504: b.ge	0x000003ffa856f428  ;*aload_0
                                                                  ; - mat_mul.MyBenchmark::loop@53 (line 43)
                    0x000003ffa856f508: sbfiz	x11, x3, #2, #32
  0.09%    0.11%    0x000003ffa856f50c: add	x10, x13, x11
  0.07%    0.06%    0x000003ffa856f510: ldr	w10, [x10,#16]
                    0x000003ffa856f514: lsl	x22, x10, #3    ;*aaload
                                                                  ; - mat_mul.MyBenchmark::loop@80 (line 43)
  0.26%    0.35%    0x000003ffa856f518: ldr	w19, [x22,#12]  ; implicit exception: dispatches to 0x000003ffa856f5f0
                    0x000003ffa856f51c: add	x10, x14, x11
  0.09%    0.13%    0x000003ffa856f520: add	x24, x22, x20
  0.11%    0.18%    0x000003ffa856f524: ldr	w10, [x10,#16]  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop@71 (line 43)
                    0x000003ffa856f528: cmp	w5, w19
                    0x000003ffa856f52c: b.cs	0x000003ffa856f5c0  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop@85 (line 43)
  0.17%    0.20%    0x000003ffa856f530: ldr	w19, [x24,#16]
  0.35%    0.43%    0x000003ffa856f534: madd	w4, w19, w10, w4  ;*iadd
                                                                  ; - mat_mul.MyBenchmark::loop@87 (line 43)
  0.04%    0.06%    0x000003ffa856f538: add	w3, w3, #0x1    ;*iadd
                                                                  ; - mat_mul.MyBenchmark::loop@97 (line 42)
  0.11%    0.24%    0x000003ffa856f53c: str	w4, [x1,#28]    ;*putfield s
                                                                  ; - mat_mul.MyBenchmark::loop@88 (line 43)
  0.24%    0.07%    0x000003ffa856f540: str	w3, [x1,#24]    ;*putfield k
                                                                  ; - mat_mul.MyBenchmark::loop@98 (line 42)
                    0x000003ffa856f544: cmp	w3, w16
                    0x000003ffa856f548: b.lt	0x000003ffa856f508  ;*if_icmpge
                                                                  ; - mat_mul.MyBenchmark::loop@50 (line 42)
  0.15%    0.06%    0x000003ffa856f54c: b	0x000003ffa856f428
                    0x000003ffa856f550: mov	w10, w23
                    0x000003ffa856f554: mov	w23, w2
                    0x000003ffa856f558: mov	w2, w16
                    0x000003ffa856f55c: b	0x000003ffa856f35c      ;*if_icmpge
                                                                  ; - mat_mul.MyBenchmark::loop@13 (line 39)
                    0x000003ffa856f560: ldr	w11, [x1,#44]
                    0x000003ffa856f564: ldr	x1, [sp,#40]
                    0x000003ffa856f568: lsl	x2, x11, #3     ;*getfield res
                                                                  ; - mat_mul.MyBenchmark::loop@150 (line 48)
....................................................................................................
 90.33%   90.59%  <total for region 1>

....[Hottest Regions]...............................................................................
 90.33%   90.59%         C2, level 4  mat_mul.MyBenchmark::loop, version 577 (288 bytes) 
  2.86%    2.87%   [kernel.kallsyms]  finish_task_switch (12 bytes) 
  0.29%    0.15%   [kernel.kallsyms]  _raw_spin_unlock_irqrestore (4 bytes) 
  0.18%    0.30%   [kernel.kallsyms]  __ll_sc_atomic_sub_return_acquire (52 bytes) 
  0.15%    0.15%   [kernel.kallsyms]  __ll_sc_atomic_add_return_release (28 bytes) 
  0.13%    0.22%   [kernel.kallsyms]  __ll_sc_atomic64_sub_return (8 bytes) 
  0.11%    0.11%         C1, level 3  java.util.zip.ZipCoder::getBytes, version 607 (40 bytes) 
  0.11%    0.17%         C1, level 3  java.util.zip.ZipCoder::getBytes, version 607 (12 bytes) 
  0.11%    0.09%         C1, level 3  java.util.zip.ZipCoder::getBytes, version 607 (48 bytes) 
  0.09%            [kernel.kallsyms]  __ll_sc_atomic_add (24 bytes) 
  0.09%    0.09%         C1, level 3  java.util.zip.ZipCoder::getBytes, version 607 (20 bytes) 
  0.09%    0.06%         C1, level 3  java.util.zip.ZipCoder::getBytes, version 607 (32 bytes) 
  0.07%    0.07%   [kernel.kallsyms]  el0_svc_naked (0 bytes) 
  0.07%    0.02%   [kernel.kallsyms]  syscall_trace_enter (60 bytes) 
  0.07%    0.02%   [kernel.kallsyms]  __ll_sc___cmpxchg_double (4 bytes) 
  0.07%    0.13%   [kernel.kallsyms]  clear_bit (0 bytes) 
  0.07%    0.15%         C2, level 4  mat_mul.MyBenchmark::loop, version 577 (12 bytes) 
  0.07%    0.04%         C1, level 3  java.util.zip.ZipCoder::getBytes, version 607 (96 bytes) 
  0.06%            [kernel.kallsyms]  __audit_syscall_entry (24 bytes) 
  0.06%    0.04%   [kernel.kallsyms]  vfs_write (52 bytes) 
  4.88%    4.75%  <...other 348 warm regions...>
....................................................................................................
 99.98%  100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 90.42%   90.74%         C2, level 4  mat_mul.MyBenchmark::loop, version 577 
  3.13%    3.46%         C1, level 3  java.util.zip.ZipCoder::getBytes, version 607 
  2.86%    2.87%   [kernel.kallsyms]  finish_task_switch 
  0.29%    0.15%   [kernel.kallsyms]  _raw_spin_unlock_irqrestore 
  0.18%    0.30%   [kernel.kallsyms]  __ll_sc_atomic_sub_return_acquire 
  0.15%    0.15%   [kernel.kallsyms]  __ll_sc_atomic_add_return_release 
  0.13%    0.06%   [kernel.kallsyms]  ext4_do_update_inode 
  0.13%    0.22%   [kernel.kallsyms]  __ll_sc_atomic64_sub_return 
  0.09%    0.02%   [kernel.kallsyms]  syscall_trace_enter 
  0.09%    0.17%   [kernel.kallsyms]  vfs_write 
  0.09%            [kernel.kallsyms]  __ll_sc_atomic_add 
  0.09%    0.02%   [kernel.kallsyms]  copy_page_from_iter 
  0.07%    0.04%   [kernel.kallsyms]  ext4_da_write_end 
  0.07%    0.07%   [kernel.kallsyms]  el0_svc_naked 
  0.07%    0.06%   [kernel.kallsyms]  __block_write_begin 
  0.07%    0.13%   [kernel.kallsyms]  clear_bit 
  0.07%    0.02%   [kernel.kallsyms]  __block_commit_write.isra.25 
  0.07%    0.02%   [kernel.kallsyms]  __ll_sc___cmpxchg_double 
  0.06%    0.02%   [kernel.kallsyms]  __sys_trace 
  0.06%    0.02%   [kernel.kallsyms]  fput 
  1.77%    0.94%  <...other 68 warm methods...>
....................................................................................................
 99.98%   99.45%  <totals>

....[Distribution by Source]........................................................................
 90.42%   90.76%         C2, level 4
  6.37%    5.77%   [kernel.kallsyms]
  3.13%    3.46%         C1, level 3
  0.06%    0.02%         interpreter
....................................................................................................
 99.98%  100.00%  <totals>

PrintAssembly processed: 195484 total address lines.
Perf output processed (skipped 22.439 seconds):
 Column 1: cycles (5343 events)
 Column 2: instructions (5333 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
C2, level 4, mat_mul.MyBenchmark::loop, version 578 (400 bytes) 

                    0x000003ff6c576b40: sxtw	x0, w4
                    0x000003ff6c576b44: sxtw	x5, w3
                    0x000003ff6c576b48: cbz	w4, 0x000003ff6c576d50
                    0x000003ff6c576b4c: cmp	x19, x0
                    0x000003ff6c576b50: b.cs	0x000003ff6c576d50
                    0x000003ff6c576b54: cbz	w3, 0x000003ff6c576d50
                    0x000003ff6c576b58: cmp	x19, x5
                    0x000003ff6c576b5c: b.cs	0x000003ff6c576d50
                    0x000003ff6c576b60: ldr	w3, [x11,#12]   ; implicit exception: dispatches to 0x000003ff6c576d50
                    0x000003ff6c576b64: add	x10, x11, x10
           0.02%    0x000003ff6c576b68: cmp	w17, w3
                    0x000003ff6c576b6c: b.cs	0x000003ff6c576d50  ;*aload_0
                                                                  ; - mat_mul.MyBenchmark::loop@32 (line 41)
                    0x000003ff6c576b70: ldr	w11, [x10,#16]
                    0x000003ff6c576b74: lsl	x6, x11, #3     ;*aaload
                                                                  ; - mat_mul.MyBenchmark::loop@112 (line 45)
  0.02%             0x000003ff6c576b78: ldr	w0, [x6,#12]    ;*iastore
                                                                  ; - mat_mul.MyBenchmark::loop@121 (line 45)
                                                                  ; implicit exception: dispatches to 0x000003ff6c576d50
  0.19%    0.08%    0x000003ff6c576b7c: ldr	w10, [x13,#16]
                    0x000003ff6c576b80: lsl	x7, x10, #3     ;*aaload
                                                                  ; - mat_mul.MyBenchmark::loop@80 (line 43)
                    0x000003ff6c576b84: sxtw	x11, w0
                    0x000003ff6c576b88: sub	w10, w16, #0x1
                    0x000003ff6c576b8c: cbz	w0, 0x000003ff6c576d50
                    0x000003ff6c576b90: cmp	x19, x11
                    0x000003ff6c576b94: b.cs	0x000003ff6c576d50  ;*aload_0
                                                                  ; - mat_mul.MyBenchmark::loop@32 (line 41)
                    0x000003ff6c576b98: cmp	w16, w10
           0.02%    0x000003ff6c576b9c: csel	w0, w18, w10, lt
                    0x000003ff6c576ba0: mov	w5, wzr
                    0x000003ff6c576ba4: b	0x000003ff6c576bc0
                    0x000003ff6c576ba8: add	w5, w5, #0x1    ;*iadd
                                                                  ; - mat_mul.MyBenchmark::loop@128 (line 40)
  0.22%    0.02%    0x000003ff6c576bac: add	x10, x6, x20
  0.17%    0.06%    0x000003ff6c576bb0: str	w4, [x10,#16]   ;*iastore
                                                                  ; - mat_mul.MyBenchmark::loop@121 (line 45)
  0.09%    0.09%    0x000003ff6c576bb4: str	w5, [x1,#20]    ;*putfield j
                                                                  ; - mat_mul.MyBenchmark::loop@129 (line 40)
                    0x000003ff6c576bb8: cmp	w5, w16
                    0x000003ff6c576bbc: b.ge	0x000003ff6c576ad8  ;*aload_0
                                                                  ; - mat_mul.MyBenchmark::loop@32 (line 41)
  0.13%    0.30%    0x000003ff6c576bc0: str	wzr, [x1,#28]   ;*putfield s
                                                                  ; - mat_mul.MyBenchmark::loop@34 (line 41)
  0.09%    0.26%    0x000003ff6c576bc4: str	wzr, [x1,#24]   ;*putfield k
                                                                  ; - mat_mul.MyBenchmark::loop@39 (line 42)
  0.07%    0.08%    0x000003ff6c576bc8: ldr	w10, [x7,#12]   ; implicit exception: dispatches to 0x000003ff6c576d70
  0.15%    0.06%    0x000003ff6c576bcc: ldr	w19, [x14,#16]  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop@71 (line 43)
                    0x000003ff6c576bd0: cmp	w5, w10
                    0x000003ff6c576bd4: b.cs	0x000003ff6c576d2c
  0.07%    0.04%    0x000003ff6c576bd8: sbfiz	x20, x5, #2, #32  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop@85 (line 43)
  0.04%    0.09%    0x000003ff6c576bdc: add	x10, x7, x20
  0.11%    0.08%    0x000003ff6c576be0: ldr	w11, [x10,#16]
  0.26%    0.28%    0x000003ff6c576be4: mul	w4, w11, w19    ;*imul
                                                                  ; - mat_mul.MyBenchmark::loop@86 (line 43)
  0.26%    0.08%    0x000003ff6c576be8: str	w15, [x1,#24]   ;*putfield k
                                                                  ; - mat_mul.MyBenchmark::loop@98 (line 42)
  0.21%    0.38%    0x000003ff6c576bec: str	w4, [x1,#28]    ;*putfield s
                                                                  ; - mat_mul.MyBenchmark::loop@88 (line 43)
                    0x000003ff6c576bf0: cmp	w0, #0x1
                    0x000003ff6c576bf4: b.le	0x000003ff6c576d38
  0.11%    0.23%    0x000003ff6c576bf8: orr	w3, wzr, #0x1
                    0x000003ff6c576bfc: nop                       ;*aload_0
                                                                  ; - mat_mul.MyBenchmark::loop@53 (line 43)
  2.86%    5.16%    0x000003ff6c576c00: sbfiz	x19, x3, #2, #32
  3.03%    4.88%    0x000003ff6c576c04: add	x10, x13, x19
                    0x000003ff6c576c08: sbfiz	x22, x3, #2, #32
  2.99%    3.54%    0x000003ff6c576c0c: ldr	w10, [x10,#16]
                    0x000003ff6c576c10: add	x11, x13, x22
  2.99%    1.99%    0x000003ff6c576c14: lsl	x25, x10, #3
                    0x000003ff6c576c18: ldr	w11, [x11,#20]
  6.66%    4.95%    0x000003ff6c576c1c: ldr	w10, [x25,#12]  ; implicit exception: dispatches to 0x000003ff6c576d70
           0.04%    0x000003ff6c576c20: add	x19, x14, x19
  3.07%    1.97%    0x000003ff6c576c24: add	x26, x25, x20
                    0x000003ff6c576c28: lsl	x24, x11, #3    ;*aaload
                                                                  ; - mat_mul.MyBenchmark::loop@80 (line 43)
  6.27%    3.75%    0x000003ff6c576c2c: ldr	w19, [x19,#16]  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop@71 (line 43)
                    0x000003ff6c576c30: cmp	w5, w10
                    0x000003ff6c576c34: b.cs	0x000003ff6c576d08  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop@85 (line 43)
  3.14%    2.91%    0x000003ff6c576c38: ldr	w10, [x26,#16]
           0.04%    0x000003ff6c576c3c: add	w11, w3, #0x1
  9.47%   12.39%    0x000003ff6c576c40: madd	w4, w10, w19, w4  ;*iadd
                                                                  ; - mat_mul.MyBenchmark::loop@87 (line 43)
  3.03%    4.39%    0x000003ff6c576c44: str	w11, [x1,#24]   ;*putfield k
                                                                  ; - mat_mul.MyBenchmark::loop@98 (line 42)
  6.10%    8.36%    0x000003ff6c576c48: str	w4, [x1,#28]    ;*putfield s
                                                                  ; - mat_mul.MyBenchmark::loop@88 (line 43)
  5.78%    8.29%    0x000003ff6c576c4c: ldr	w10, [x24,#12]  ; implicit exception: dispatches to 0x000003ff6c576d70
                    0x000003ff6c576c50: add	x19, x14, x22
  3.24%    3.21%    0x000003ff6c576c54: add	x11, x24, x20
                    0x000003ff6c576c58: ldr	w19, [x19,#20]  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop@71 (line 43)
  3.01%    2.51%    0x000003ff6c576c5c: cmp	w5, w10
                    0x000003ff6c576c60: b.cs	0x000003ff6c576d0c  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop@85 (line 43)
                    0x000003ff6c576c64: ldr	w10, [x11,#16]
  9.58%    3.68%    0x000003ff6c576c68: madd	w4, w10, w19, w4  ;*iadd
                                                                  ; - mat_mul.MyBenchmark::loop@87 (line 43)
  2.71%    2.68%    0x000003ff6c576c6c: add	w3, w3, #0x2    ;*iadd
                                                                  ; - mat_mul.MyBenchmark::loop@97 (line 42)
  6.16%    4.95%    0x000003ff6c576c70: str	w4, [x1,#28]    ;*putfield s
                                                                  ; - mat_mul.MyBenchmark::loop@88 (line 43)
  6.79%    7.22%    0x000003ff6c576c74: str	w3, [x1,#24]    ;*putfield k
                                                                  ; - mat_mul.MyBenchmark::loop@98 (line 42)
                    0x000003ff6c576c78: cmp	w3, w0
                    0x000003ff6c576c7c: b.lt	0x000003ff6c576c00  ;*if_icmpge
                                                                  ; - mat_mul.MyBenchmark::loop@50 (line 42)
  0.79%    0.73%    0x000003ff6c576c80: cmp	w3, w16
                    0x000003ff6c576c84: b.ge	0x000003ff6c576ba8  ;*aload_0
                                                                  ; - mat_mul.MyBenchmark::loop@53 (line 43)
                    0x000003ff6c576c88: sbfiz	x11, x3, #2, #32
  0.07%    0.06%    0x000003ff6c576c8c: add	x10, x13, x11
  0.13%    0.11%    0x000003ff6c576c90: ldr	w10, [x10,#16]
                    0x000003ff6c576c94: lsl	x22, x10, #3    ;*aaload
                                                                  ; - mat_mul.MyBenchmark::loop@80 (line 43)
  0.37%    0.62%    0x000003ff6c576c98: ldr	w19, [x22,#12]  ; implicit exception: dispatches to 0x000003ff6c576d70
                    0x000003ff6c576c9c: add	x10, x14, x11
  0.06%    0.21%    0x000003ff6c576ca0: add	x24, x22, x20
  0.09%    0.19%    0x000003ff6c576ca4: ldr	w10, [x10,#16]  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop@71 (line 43)
                    0x000003ff6c576ca8: cmp	w5, w19
                    0x000003ff6c576cac: b.cs	0x000003ff6c576d40  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop@85 (line 43)
  0.15%    0.09%    0x000003ff6c576cb0: ldr	w19, [x24,#16]
  0.36%    0.34%    0x000003ff6c576cb4: madd	w4, w19, w10, w4  ;*iadd
                                                                  ; - mat_mul.MyBenchmark::loop@87 (line 43)
  0.13%    0.17%    0x000003ff6c576cb8: add	w3, w3, #0x1    ;*iadd
                                                                  ; - mat_mul.MyBenchmark::loop@97 (line 42)
  0.22%    0.06%    0x000003ff6c576cbc: str	w4, [x1,#28]    ;*putfield s
                                                                  ; - mat_mul.MyBenchmark::loop@88 (line 43)
  0.22%    0.13%    0x000003ff6c576cc0: str	w3, [x1,#24]    ;*putfield k
                                                                  ; - mat_mul.MyBenchmark::loop@98 (line 42)
                    0x000003ff6c576cc4: cmp	w3, w16
                    0x000003ff6c576cc8: b.lt	0x000003ff6c576c88  ;*if_icmpge
                                                                  ; - mat_mul.MyBenchmark::loop@50 (line 42)
  0.09%    0.11%    0x000003ff6c576ccc: b	0x000003ff6c576ba8
                    0x000003ff6c576cd0: mov	w10, w23
                    0x000003ff6c576cd4: mov	w23, w2
                    0x000003ff6c576cd8: mov	w2, w16
                    0x000003ff6c576cdc: b	0x000003ff6c576adc      ;*if_icmpge
                                                                  ; - mat_mul.MyBenchmark::loop@13 (line 39)
                    0x000003ff6c576ce0: ldr	w11, [x1,#44]
                    0x000003ff6c576ce4: ldr	x1, [sp,#40]
  0.02%             0x000003ff6c576ce8: lsl	x2, x11, #3     ;*getfield res
                                                                  ; - mat_mul.MyBenchmark::loop@150 (line 48)
                    0x000003ff6c576cec: cbz	x1, 0x000003ff6c576d60
                    0x000003ff6c576cf0: bl	0x000003ff6c0b2140  ; OopMap{off=628}
                                                                  ;*invokevirtual consume
                                                                  ; - mat_mul.MyBenchmark::loop@153 (line 48)
                                                                  ;   {optimized virtual_call}
                    0x000003ff6c576cf4: ldp	x29, x30, [sp,#64]
  0.02%             0x000003ff6c576cf8: add	sp, sp, #0x50
                    0x000003ff6c576cfc: adrp	x8, 0x000003ff7af80000
                                                                  ;   {poll_return}
                    0x000003ff6c576d00: ldr	wzr, [x8]       ;   {poll_return}
                    0x000003ff6c576d04: ret
                    0x000003ff6c576d08: mov	x24, x25
                    0x000003ff6c576d0c: str	x24, [sp,#8]
                    0x000003ff6c576d10: str	w19, [sp,#4]
                    0x000003ff6c576d14: str	w4, [sp]
                    0x000003ff6c576d18: str	x1, [sp,#24]
                    0x000003ff6c576d1c: str	w5, [sp,#32]
....................................................................................................
 91.86%   91.84%  <total for region 1>

....[Hottest Regions]...............................................................................
 91.86%   91.84%         C2, level 4  mat_mul.MyBenchmark::loop, version 578 (400 bytes) 
  0.37%    0.38%   [kernel.kallsyms]  finish_task_switch (0 bytes) 
  0.22%    0.21%   [kernel.kallsyms]  _raw_spin_unlock_irqrestore (0 bytes) 
  0.17%    0.08%   [kernel.kallsyms]  clear_bit (36 bytes) 
  0.15%    0.24%   [kernel.kallsyms]  __ll_sc___cmpxchg_case_mb_8 (24 bytes) 
  0.13%    0.23%   [kernel.kallsyms]  __ll_sc_atomic_add_return_release (20 bytes) 
  0.11%    0.11%   [kernel.kallsyms]  __ll_sc_atomic64_sub_return (20 bytes) 
  0.11%    0.15%  libpthread-2.17.so  __pthread_enable_asynccancel (32 bytes) 
  0.09%    0.04%        libc-2.17.so  _IO_fwrite (0 bytes) 
  0.09%    0.06%        libc-2.17.so  _IO_default_xsputn (44 bytes) 
  0.09%    0.13%  libpthread-2.17.so  __pthread_disable_asynccancel (48 bytes) 
  0.07%    0.19%   [kernel.kallsyms]  el0_svc_naked (0 bytes) 
  0.07%    0.08%   [kernel.kallsyms]  pipe_write (80 bytes) 
  0.07%            [kernel.kallsyms]  copy_page_from_iter (28 bytes) 
  0.07%                    libjvm.so  [unknown] (24 bytes) 
  0.07%    0.21%           libjvm.so  [unknown] (68 bytes) 
  0.07%    0.08%        libc-2.17.so  vfprintf (112 bytes) 
  0.07%    0.09%        libc-2.17.so  vfprintf (116 bytes) 
  0.07%    0.02%        libc-2.17.so  vfprintf (20 bytes) 
  0.07%    0.04%        libc-2.17.so  _IO_fflush (0 bytes) 
  5.91%    5.83%  <...other 394 warm regions...>
....................................................................................................
100.00%   99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 91.86%   91.86%         C2, level 4  mat_mul.MyBenchmark::loop, version 578 
  1.33%    1.65%           libjvm.so  [unknown] 
  0.37%    0.38%   [kernel.kallsyms]  finish_task_switch 
  0.36%    0.47%        libc-2.17.so  vfprintf 
  0.22%    0.21%   [kernel.kallsyms]  _raw_spin_unlock_irqrestore 
  0.17%    0.08%   [kernel.kallsyms]  clear_bit 
  0.15%    0.21%        libc-2.17.so  _IO_fwrite 
  0.15%    0.06%        libc-2.17.so  _IO_fflush 
  0.15%    0.24%   [kernel.kallsyms]  __ll_sc___cmpxchg_case_mb_8 
  0.13%    0.23%   [kernel.kallsyms]  __ll_sc_atomic_add_return_release 
  0.13%    0.04%   [kernel.kallsyms]  copy_page_from_iter 
  0.13%    0.09%        libc-2.17.so  _IO_default_xsputn 
  0.11%    0.15%  libpthread-2.17.so  __pthread_enable_asynccancel 
  0.11%    0.13%        libc-2.17.so  strlen 
  0.11%    0.13%   [kernel.kallsyms]  __ll_sc_atomic64_sub_return 
  0.11%    0.21%   [kernel.kallsyms]  pipe_write 
  0.09%    0.13%  libpthread-2.17.so  __pthread_disable_asynccancel 
  0.09%    0.09%   [kernel.kallsyms]  __block_write_begin 
  0.09%    0.02%    hsdis-aarch64.so  operand_general_constraint_met_p 
  0.09%    0.13%   [kernel.kallsyms]  __audit_syscall_exit 
  4.02%    2.68%  <...other 125 warm methods...>
....................................................................................................
100.00%   99.17%  <totals>

....[Distribution by Source]........................................................................
 91.86%   91.88%         C2, level 4
  4.19%    3.99%   [kernel.kallsyms]
  1.50%    1.52%        libc-2.17.so
  1.37%    1.71%           libjvm.so
  0.69%    0.41%    hsdis-aarch64.so
  0.24%    0.39%  libpthread-2.17.so
  0.11%    0.08%         interpreter
  0.04%                  C1, level 3
....................................................................................................
100.00%   99.98%  <totals>



# JMH version: 1.19
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.151-1.b12.el7_4.aarch64/jre/bin/java
# VM options: -XX:+UnlockDiagnosticVMOptions -XX:CompileCommand=print,MyBenchmark
# Warmup: 3 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: mat_mul.MyBenchmark.loop
# Parameters: (N_str = 128)

# Run progress: 10.00% complete, ETA 00:10:56
# Fork: 1 of 2
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 0.046 s/op
# Warmup Iteration   2: 0.037 s/op
# Warmup Iteration   3: 0.037 s/op
Iteration   1: 0.036 s/op
Iteration   2: 0.037 s/op
Iteration   3: 0.037 s/op
Iteration   4: 0.037 s/op
Iteration   5: 0.036 s/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 15.00% complete, ETA 00:10:13
# Fork: 2 of 2
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 0.044 s/op
# Warmup Iteration   2: 0.037 s/op
# Warmup Iteration   3: 0.037 s/op
Iteration   1: 0.037 s/op
Iteration   2: 0.037 s/op
Iteration   3: 0.037 s/op
Iteration   4: 0.037 s/op
Iteration   5: 0.037 s/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "mat_mul.MyBenchmark.loop":
  0.037 ?(99.9%) 0.001 s/op [Average]
  (min, avg, max) = (0.036, 0.037, 0.037), stdev = 0.001
  CI (99.9%): [0.036, 0.037] (assumes normal distribution)

Secondary result "mat_mul.MyBenchmark.loop:?asm":
PrintAssembly processed: 193470 total address lines.
Perf output processed (skipped 22.141 seconds):
 Column 1: cycles (5503 events)
 Column 2: instructions (5432 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
C2, level 4, mat_mul.MyBenchmark::loop, version 582 (288 bytes) 

                    0x000003ff6c571fcc: cbz	w0, 0x000003ff6c572190
                    0x000003ff6c571fd0: cmp	x19, x11
                    0x000003ff6c571fd4: b.cs	0x000003ff6c572190  ;*aload_0
                                                                  ; - mat_mul.MyBenchmark::loop@32 (line 41)
                    0x000003ff6c571fd8: cmp	w16, w10
                    0x000003ff6c571fdc: csel	w0, w18, w10, lt
                    0x000003ff6c571fe0: mov	w5, wzr
                    0x000003ff6c571fe4: b	0x000003ff6c572000
                    0x000003ff6c571fe8: add	w5, w5, #0x1    ;*iadd
                                                                  ; - mat_mul.MyBenchmark::loop@128 (line 40)
  0.02%    0.02%    0x000003ff6c571fec: add	x10, x6, x20
  0.04%    0.04%    0x000003ff6c571ff0: str	w4, [x10,#16]   ;*iastore
                                                                  ; - mat_mul.MyBenchmark::loop@121 (line 45)
  0.04%    0.06%    0x000003ff6c571ff4: str	w5, [x1,#20]    ;*putfield j
                                                                  ; - mat_mul.MyBenchmark::loop@129 (line 40)
                    0x000003ff6c571ff8: cmp	w5, w16
                    0x000003ff6c571ffc: b.ge	0x000003ff6c571f18  ;*aload_0
                                                                  ; - mat_mul.MyBenchmark::loop@32 (line 41)
  0.02%    0.06%    0x000003ff6c572000: str	wzr, [x1,#28]   ;*putfield s
                                                                  ; - mat_mul.MyBenchmark::loop@34 (line 41)
  0.02%    0.07%    0x000003ff6c572004: str	wzr, [x1,#24]   ;*putfield k
                                                                  ; - mat_mul.MyBenchmark::loop@39 (line 42)
  0.02%    0.06%    0x000003ff6c572008: ldr	w10, [x7,#12]   ; implicit exception: dispatches to 0x000003ff6c5721b0
  0.02%    0.07%    0x000003ff6c57200c: ldr	w19, [x14,#16]  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop@71 (line 43)
  0.02%             0x000003ff6c572010: cmp	w5, w10
                    0x000003ff6c572014: b.cs	0x000003ff6c57216c
  0.04%    0.02%    0x000003ff6c572018: sbfiz	x20, x5, #2, #32  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop@85 (line 43)
  0.05%    0.04%    0x000003ff6c57201c: add	x10, x7, x20
  0.02%             0x000003ff6c572020: ldr	w11, [x10,#16]
  0.15%    0.26%    0x000003ff6c572024: mul	w4, w11, w19    ;*imul
                                                                  ; - mat_mul.MyBenchmark::loop@86 (line 43)
  0.02%             0x000003ff6c572028: str	w15, [x1,#24]   ;*putfield k
                                                                  ; - mat_mul.MyBenchmark::loop@98 (line 42)
  0.05%    0.04%    0x000003ff6c57202c: str	w4, [x1,#28]    ;*putfield s
                                                                  ; - mat_mul.MyBenchmark::loop@88 (line 43)
                    0x000003ff6c572030: cmp	w0, #0x1
                    0x000003ff6c572034: b.le	0x000003ff6c572178
  0.04%    0.07%    0x000003ff6c572038: orr	w3, wzr, #0x1
                    0x000003ff6c57203c: nop                       ;*aload_0
                                                                  ; - mat_mul.MyBenchmark::loop@53 (line 43)
  1.24%    2.49%    0x000003ff6c572040: sbfiz	x19, x3, #2, #32
  1.53%    2.49%    0x000003ff6c572044: add	x10, x13, x19
                    0x000003ff6c572048: sbfiz	x22, x3, #2, #32
  1.20%    1.88%    0x000003ff6c57204c: ldr	w10, [x10,#16]
           0.02%    0x000003ff6c572050: add	x11, x13, x22
  1.20%    1.55%    0x000003ff6c572054: lsl	x25, x10, #3
  0.02%             0x000003ff6c572058: ldr	w11, [x11,#20]
  2.42%    2.96%    0x000003ff6c57205c: ldr	w10, [x25,#12]  ; implicit exception: dispatches to 0x000003ff6c5721b0
 11.32%    7.51%    0x000003ff6c572060: add	x19, x14, x19
  1.29%    1.25%    0x000003ff6c572064: add	x26, x25, x20
                    0x000003ff6c572068: lsl	x24, x11, #3    ;*aaload
                                                                  ; - mat_mul.MyBenchmark::loop@80 (line 43)
  2.83%    2.82%    0x000003ff6c57206c: ldr	w19, [x19,#16]  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop@71 (line 43)
                    0x000003ff6c572070: cmp	w5, w10
                    0x000003ff6c572074: b.cs	0x000003ff6c572110  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop@85 (line 43)
  1.64%    1.69%    0x000003ff6c572078: ldr	w10, [x26,#16]
 13.65%   10.77%    0x000003ff6c57207c: add	w11, w3, #0x1
  4.63%    7.23%    0x000003ff6c572080: madd	w4, w10, w19, w4  ;*iadd
                                                                  ; - mat_mul.MyBenchmark::loop@87 (line 43)
  1.31%    2.78%    0x000003ff6c572084: str	w11, [x1,#24]   ;*putfield k
                                                                  ; - mat_mul.MyBenchmark::loop@98 (line 42)
  2.83%    4.25%    0x000003ff6c572088: str	w4, [x1,#28]    ;*putfield s
                                                                  ; - mat_mul.MyBenchmark::loop@88 (line 43)
  2.78%    4.33%    0x000003ff6c57208c: ldr	w10, [x24,#12]  ; implicit exception: dispatches to 0x000003ff6c5721b0
 10.85%    8.17%    0x000003ff6c572090: add	x19, x14, x22
  1.22%    1.55%    0x000003ff6c572094: add	x11, x24, x20
  0.98%    0.50%    0x000003ff6c572098: ldr	w19, [x19,#20]  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop@71 (line 43)
  1.24%    1.42%    0x000003ff6c57209c: cmp	w5, w10
                    0x000003ff6c5720a0: b.cs	0x000003ff6c572114  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop@85 (line 43)
  0.62%    0.42%    0x000003ff6c5720a4: ldr	w10, [x11,#16]
 17.92%   15.24%    0x000003ff6c5720a8: madd	w4, w10, w19, w4  ;*iadd
                                                                  ; - mat_mul.MyBenchmark::loop@87 (line 43)
  1.29%    1.49%    0x000003ff6c5720ac: add	w3, w3, #0x2    ;*iadd
                                                                  ; - mat_mul.MyBenchmark::loop@97 (line 42)
  3.05%    2.95%    0x000003ff6c5720b0: str	w4, [x1,#28]    ;*putfield s
                                                                  ; - mat_mul.MyBenchmark::loop@88 (line 43)
  2.58%    3.98%    0x000003ff6c5720b4: str	w3, [x1,#24]    ;*putfield k
                                                                  ; - mat_mul.MyBenchmark::loop@98 (line 42)
                    0x000003ff6c5720b8: cmp	w3, w0
                    0x000003ff6c5720bc: b.lt	0x000003ff6c572040  ;*if_icmpge
                                                                  ; - mat_mul.MyBenchmark::loop@50 (line 42)
  0.29%    0.33%    0x000003ff6c5720c0: cmp	w3, w16
                    0x000003ff6c5720c4: b.ge	0x000003ff6c571fe8  ;*aload_0
                                                                  ; - mat_mul.MyBenchmark::loop@53 (line 43)
                    0x000003ff6c5720c8: sbfiz	x11, x3, #2, #32
           0.06%    0x000003ff6c5720cc: add	x10, x13, x11
  0.02%    0.02%    0x000003ff6c5720d0: ldr	w10, [x10,#16]
                    0x000003ff6c5720d4: lsl	x22, x10, #3    ;*aaload
                                                                  ; - mat_mul.MyBenchmark::loop@80 (line 43)
  0.05%    0.17%    0x000003ff6c5720d8: ldr	w19, [x22,#12]  ; implicit exception: dispatches to 0x000003ff6c5721b0
  0.33%    0.09%    0x000003ff6c5720dc: add	x10, x14, x11
           0.06%    0x000003ff6c5720e0: add	x24, x22, x20
  0.02%    0.02%    0x000003ff6c5720e4: ldr	w10, [x10,#16]  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop@71 (line 43)
                    0x000003ff6c5720e8: cmp	w5, w19
                    0x000003ff6c5720ec: b.cs	0x000003ff6c572180  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop@85 (line 43)
           0.02%    0x000003ff6c5720f0: ldr	w19, [x24,#16]
  0.36%    0.22%    0x000003ff6c5720f4: madd	w4, w19, w10, w4  ;*iadd
                                                                  ; - mat_mul.MyBenchmark::loop@87 (line 43)
  0.02%    0.02%    0x000003ff6c5720f8: add	w3, w3, #0x1    ;*iadd
                                                                  ; - mat_mul.MyBenchmark::loop@97 (line 42)
  0.02%             0x000003ff6c5720fc: str	w4, [x1,#28]    ;*putfield s
                                                                  ; - mat_mul.MyBenchmark::loop@88 (line 43)
  0.07%    0.06%    0x000003ff6c572100: str	w3, [x1,#24]    ;*putfield k
                                                                  ; - mat_mul.MyBenchmark::loop@98 (line 42)
                    0x000003ff6c572104: cmp	w3, w16
                    0x000003ff6c572108: b.lt	0x000003ff6c5720c8  ;*if_icmpge
                                                                  ; - mat_mul.MyBenchmark::loop@50 (line 42)
  0.07%    0.02%    0x000003ff6c57210c: b	0x000003ff6c571fe8
                    0x000003ff6c572110: mov	x24, x25
                    0x000003ff6c572114: str	x24, [sp,#8]
                    0x000003ff6c572118: str	w19, [sp,#4]
                    0x000003ff6c57211c: str	w4, [sp]
                    0x000003ff6c572120: str	x1, [sp,#24]
                    0x000003ff6c572124: str	w5, [sp,#32]
                    0x000003ff6c572128: mov	w1, #0xffffffe4            	// #-28
                    0x000003ff6c57212c: bl	0x000003ff6c0b15c0  ; OopMap{[8]=Oop [24]=Oop [40]=Oop off=624}
                                                                  ;*iaload
....................................................................................................
 91.42%   91.59%  <total for region 1>

....[Hottest Regions]...............................................................................
 91.42%   91.59%         C2, level 4  mat_mul.MyBenchmark::loop, version 582 (288 bytes) 
  1.18%    1.20%   [kernel.kallsyms]  finish_task_switch (0 bytes) 
  0.44%    0.13%   [kernel.kallsyms]  _raw_spin_unlock_irqrestore (0 bytes) 
  0.18%    0.06%        libc-2.17.so  _IO_fwrite (0 bytes) 
  0.16%    0.17%   [kernel.kallsyms]  clear_bit (20 bytes) 
  0.11%    0.20%   [kernel.kallsyms]  __ll_sc___cmpxchg_case_mb_8 (12 bytes) 
  0.11%    0.07%        libc-2.17.so  _IO_fwrite (56 bytes) 
  0.09%    0.15%   [kernel.kallsyms]  __ll_sc_atomic_add_return_release (24 bytes) 
  0.09%    0.09%   [kernel.kallsyms]  __ll_sc_atomic64_sub_return (0 bytes) 
  0.09%    0.13%  libpthread-2.17.so  __pthread_disable_asynccancel (48 bytes) 
  0.07%    0.02%   [kernel.kallsyms]  ext4_do_update_inode (52 bytes) 
  0.07%    0.17%   [kernel.kallsyms]  __ll_sc_atomic_sub_return_acquire (8 bytes) 
  0.07%            [kernel.kallsyms]  copy_page_from_iter (20 bytes) 
  0.07%    0.04%           libjvm.so  [unknown] (12 bytes) 
  0.07%    0.06%           libjvm.so  [unknown] (16 bytes) 
  0.07%    0.06%           libjvm.so  [unknown] (20 bytes) 
  0.07%    0.07%        libc-2.17.so  mempcpy (104 bytes) 
  0.07%    0.07%  libpthread-2.17.so  __libc_write (0 bytes) 
  0.05%            [kernel.kallsyms]  mark_page_accessed (32 bytes) 
  0.05%    0.06%   [kernel.kallsyms]  __vfs_write (28 bytes) 
  5.42%    5.69%  <...other 367 warm regions...>
....................................................................................................
 99.98%  100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 91.44%   91.68%         C2, level 4  mat_mul.MyBenchmark::loop, version 582 
  1.18%    1.20%   [kernel.kallsyms]  finish_task_switch 
  1.14%    1.47%           libjvm.so  [unknown] 
  0.44%    0.13%   [kernel.kallsyms]  _raw_spin_unlock_irqrestore 
  0.36%    0.15%        libc-2.17.so  _IO_fwrite 
  0.33%    0.35%        libc-2.17.so  vfprintf 
  0.16%    0.17%   [kernel.kallsyms]  clear_bit 
  0.13%    0.20%   [kernel.kallsyms]  __ll_sc___cmpxchg_case_mb_8 
  0.13%    0.09%   [kernel.kallsyms]  ext4_do_update_inode 
  0.11%    0.09%   [kernel.kallsyms]  __ll_sc_atomic64_sub_return 
  0.11%    0.15%   [kernel.kallsyms]  vfs_write 
  0.11%    0.17%   [kernel.kallsyms]  pipe_write 
  0.09%    0.13%  libpthread-2.17.so  __pthread_disable_asynccancel 
  0.09%    0.02%   [kernel.kallsyms]  __ext4_get_inode_loc 
  0.09%    0.07%        libc-2.17.so  _IO_vsnprintf 
  0.09%    0.07%   [kernel.kallsyms]  __fget 
  0.09%    0.11%        libc-2.17.so  strlen 
  0.09%    0.15%   [kernel.kallsyms]  __ll_sc_atomic_add_return_release 
  0.09%    0.04%   [kernel.kallsyms]  copy_page_from_iter 
  0.07%    0.07%  libpthread-2.17.so  __libc_write 
  3.63%    2.52%  <...other 132 warm methods...>
....................................................................................................
 99.98%   99.02%  <totals>

....[Distribution by Source]........................................................................
 91.44%   91.68%         C2, level 4
  5.03%    4.53%   [kernel.kallsyms]
  1.38%    1.51%        libc-2.17.so
  1.22%    1.51%           libjvm.so
  0.55%    0.37%    hsdis-aarch64.so
  0.25%    0.35%  libpthread-2.17.so
  0.07%    0.04%         interpreter
  0.02%                 runtime stub
  0.02%    0.02%      perf-15179.map
....................................................................................................
 99.98%  100.00%  <totals>

PrintAssembly processed: 195070 total address lines.
Perf output processed (skipped 22.214 seconds):
 Column 1: cycles (5451 events)
 Column 2: instructions (5423 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
C2, level 4, mat_mul.MyBenchmark::loop, version 584 (288 bytes) 

                    0x000003ffa0573e0c: cbz	w0, 0x000003ffa0573fd0
                    0x000003ffa0573e10: cmp	x19, x11
                    0x000003ffa0573e14: b.cs	0x000003ffa0573fd0  ;*aload_0
                                                                  ; - mat_mul.MyBenchmark::loop@32 (line 41)
                    0x000003ffa0573e18: cmp	w16, w10
                    0x000003ffa0573e1c: csel	w0, w18, w10, lt
                    0x000003ffa0573e20: mov	w5, wzr
                    0x000003ffa0573e24: b	0x000003ffa0573e40
                    0x000003ffa0573e28: add	w5, w5, #0x1    ;*iadd
                                                                  ; - mat_mul.MyBenchmark::loop@128 (line 40)
           0.02%    0x000003ffa0573e2c: add	x10, x6, x20
  0.02%    0.06%    0x000003ffa0573e30: str	w4, [x10,#16]   ;*iastore
                                                                  ; - mat_mul.MyBenchmark::loop@121 (line 45)
           0.04%    0x000003ffa0573e34: str	w5, [x1,#20]    ;*putfield j
                                                                  ; - mat_mul.MyBenchmark::loop@129 (line 40)
                    0x000003ffa0573e38: cmp	w5, w16
                    0x000003ffa0573e3c: b.ge	0x000003ffa0573d58  ;*aload_0
                                                                  ; - mat_mul.MyBenchmark::loop@32 (line 41)
           0.04%    0x000003ffa0573e40: str	wzr, [x1,#28]   ;*putfield s
                                                                  ; - mat_mul.MyBenchmark::loop@34 (line 41)
           0.02%    0x000003ffa0573e44: str	wzr, [x1,#24]   ;*putfield k
                                                                  ; - mat_mul.MyBenchmark::loop@39 (line 42)
  0.06%    0.04%    0x000003ffa0573e48: ldr	w10, [x7,#12]   ; implicit exception: dispatches to 0x000003ffa0573ff0
  0.04%    0.02%    0x000003ffa0573e4c: ldr	w19, [x14,#16]  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop@71 (line 43)
                    0x000003ffa0573e50: cmp	w5, w10
                    0x000003ffa0573e54: b.cs	0x000003ffa0573fac
  0.04%             0x000003ffa0573e58: sbfiz	x20, x5, #2, #32  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop@85 (line 43)
  0.07%    0.02%    0x000003ffa0573e5c: add	x10, x7, x20
  0.04%    0.02%    0x000003ffa0573e60: ldr	w11, [x10,#16]
  0.22%    0.18%    0x000003ffa0573e64: mul	w4, w11, w19    ;*imul
                                                                  ; - mat_mul.MyBenchmark::loop@86 (line 43)
  0.04%    0.02%    0x000003ffa0573e68: str	w15, [x1,#24]   ;*putfield k
                                                                  ; - mat_mul.MyBenchmark::loop@98 (line 42)
  0.04%    0.11%    0x000003ffa0573e6c: str	w4, [x1,#28]    ;*putfield s
                                                                  ; - mat_mul.MyBenchmark::loop@88 (line 43)
                    0x000003ffa0573e70: cmp	w0, #0x1
                    0x000003ffa0573e74: b.le	0x000003ffa0573fb8
  0.06%             0x000003ffa0573e78: orr	w3, wzr, #0x1
                    0x000003ffa0573e7c: nop                       ;*aload_0
                                                                  ; - mat_mul.MyBenchmark::loop@53 (line 43)
  1.30%    1.90%    0x000003ffa0573e80: sbfiz	x19, x3, #2, #32
  1.36%    1.29%    0x000003ffa0573e84: add	x10, x13, x19
                    0x000003ffa0573e88: sbfiz	x22, x3, #2, #32
  1.25%    1.92%    0x000003ffa0573e8c: ldr	w10, [x10,#16]
  0.02%    0.02%    0x000003ffa0573e90: add	x11, x13, x22
  1.23%    2.14%    0x000003ffa0573e94: lsl	x25, x10, #3
                    0x000003ffa0573e98: ldr	w11, [x11,#20]
  2.79%    3.06%    0x000003ffa0573e9c: ldr	w10, [x25,#12]  ; implicit exception: dispatches to 0x000003ffa0573ff0
 10.66%    8.39%    0x000003ffa0573ea0: add	x19, x14, x19
  1.10%    2.14%    0x000003ffa0573ea4: add	x26, x25, x20
                    0x000003ffa0573ea8: lsl	x24, x11, #3    ;*aaload
                                                                  ; - mat_mul.MyBenchmark::loop@80 (line 43)
  3.10%    3.96%    0x000003ffa0573eac: ldr	w19, [x19,#16]  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop@71 (line 43)
                    0x000003ffa0573eb0: cmp	w5, w10
                    0x000003ffa0573eb4: b.cs	0x000003ffa0573f50  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop@85 (line 43)
  1.67%    2.03%    0x000003ffa0573eb8: ldr	w10, [x26,#16]
 13.54%   10.18%    0x000003ffa0573ebc: add	w11, w3, #0x1
  4.38%    6.47%    0x000003ffa0573ec0: madd	w4, w10, w19, w4  ;*iadd
                                                                  ; - mat_mul.MyBenchmark::loop@87 (line 43)
  1.21%    1.62%    0x000003ffa0573ec4: str	w11, [x1,#24]   ;*putfield k
                                                                  ; - mat_mul.MyBenchmark::loop@98 (line 42)
  3.28%    3.54%    0x000003ffa0573ec8: str	w4, [x1,#28]    ;*putfield s
                                                                  ; - mat_mul.MyBenchmark::loop@88 (line 43)
  2.72%    3.76%    0x000003ffa0573ecc: ldr	w10, [x24,#12]  ; implicit exception: dispatches to 0x000003ffa0573ff0
 10.75%    8.52%    0x000003ffa0573ed0: add	x19, x14, x22
  1.34%    1.38%    0x000003ffa0573ed4: add	x11, x24, x20
  0.79%    0.66%    0x000003ffa0573ed8: ldr	w19, [x19,#20]  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop@71 (line 43)
  0.94%    1.36%    0x000003ffa0573edc: cmp	w5, w10
                    0x000003ffa0573ee0: b.cs	0x000003ffa0573f54  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop@85 (line 43)
  0.70%    0.39%    0x000003ffa0573ee4: ldr	w10, [x11,#16]
 19.02%   16.13%    0x000003ffa0573ee8: madd	w4, w10, w19, w4  ;*iadd
                                                                  ; - mat_mul.MyBenchmark::loop@87 (line 43)
  1.50%    1.29%    0x000003ffa0573eec: add	w3, w3, #0x2    ;*iadd
                                                                  ; - mat_mul.MyBenchmark::loop@97 (line 42)
  2.72%    3.13%    0x000003ffa0573ef0: str	w4, [x1,#28]    ;*putfield s
                                                                  ; - mat_mul.MyBenchmark::loop@88 (line 43)
  2.72%    4.11%    0x000003ffa0573ef4: str	w3, [x1,#24]    ;*putfield k
                                                                  ; - mat_mul.MyBenchmark::loop@98 (line 42)
                    0x000003ffa0573ef8: cmp	w3, w0
                    0x000003ffa0573efc: b.lt	0x000003ffa0573e80  ;*if_icmpge
                                                                  ; - mat_mul.MyBenchmark::loop@50 (line 42)
  0.24%    0.30%    0x000003ffa0573f00: cmp	w3, w16
                    0x000003ffa0573f04: b.ge	0x000003ffa0573e28  ;*aload_0
                                                                  ; - mat_mul.MyBenchmark::loop@53 (line 43)
                    0x000003ffa0573f08: sbfiz	x11, x3, #2, #32
  0.02%    0.02%    0x000003ffa0573f0c: add	x10, x13, x11
           0.02%    0x000003ffa0573f10: ldr	w10, [x10,#16]
                    0x000003ffa0573f14: lsl	x22, x10, #3    ;*aaload
                                                                  ; - mat_mul.MyBenchmark::loop@80 (line 43)
           0.11%    0x000003ffa0573f18: ldr	w19, [x22,#12]  ; implicit exception: dispatches to 0x000003ffa0573ff0
  0.39%    0.22%    0x000003ffa0573f1c: add	x10, x14, x11
           0.04%    0x000003ffa0573f20: add	x24, x22, x20
  0.02%    0.07%    0x000003ffa0573f24: ldr	w10, [x10,#16]  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop@71 (line 43)
                    0x000003ffa0573f28: cmp	w5, w19
                    0x000003ffa0573f2c: b.cs	0x000003ffa0573fc0  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop@85 (line 43)
  0.04%    0.02%    0x000003ffa0573f30: ldr	w19, [x24,#16]
  0.31%    0.55%    0x000003ffa0573f34: madd	w4, w19, w10, w4  ;*iadd
                                                                  ; - mat_mul.MyBenchmark::loop@87 (line 43)
  0.04%    0.04%    0x000003ffa0573f38: add	w3, w3, #0x1    ;*iadd
                                                                  ; - mat_mul.MyBenchmark::loop@97 (line 42)
  0.04%    0.09%    0x000003ffa0573f3c: str	w4, [x1,#28]    ;*putfield s
                                                                  ; - mat_mul.MyBenchmark::loop@88 (line 43)
  0.07%    0.04%    0x000003ffa0573f40: str	w3, [x1,#24]    ;*putfield k
                                                                  ; - mat_mul.MyBenchmark::loop@98 (line 42)
                    0x000003ffa0573f44: cmp	w3, w16
                    0x000003ffa0573f48: b.lt	0x000003ffa0573f08  ;*if_icmpge
                                                                  ; - mat_mul.MyBenchmark::loop@50 (line 42)
           0.02%    0x000003ffa0573f4c: b	0x000003ffa0573e28
                    0x000003ffa0573f50: mov	x24, x25
                    0x000003ffa0573f54: str	x24, [sp,#8]
                    0x000003ffa0573f58: str	w19, [sp,#4]
                    0x000003ffa0573f5c: str	w4, [sp]
                    0x000003ffa0573f60: str	x1, [sp,#24]
                    0x000003ffa0573f64: str	w5, [sp,#32]
                    0x000003ffa0573f68: mov	w1, #0xffffffe4            	// #-28
                    0x000003ffa0573f6c: bl	0x000003ffa00b15c0  ; OopMap{[8]=Oop [24]=Oop [40]=Oop off=624}
                                                                  ;*iaload
....................................................................................................
 91.84%   91.52%  <total for region 1>

....[Hottest Regions]...............................................................................
 91.84%   91.52%         C2, level 4  mat_mul.MyBenchmark::loop, version 584 (288 bytes) 
  1.10%    1.11%   [kernel.kallsyms]  finish_task_switch (12 bytes) 
  0.44%    0.20%   [kernel.kallsyms]  _raw_spin_unlock_irqrestore (0 bytes) 
  0.20%    0.28%  libpthread-2.17.so  __pthread_disable_asynccancel (72 bytes) 
  0.15%    0.02%   [kernel.kallsyms]  syscall_trace_enter (96 bytes) 
  0.13%    0.15%   [kernel.kallsyms]  __ll_sc_atomic_add_return_release (28 bytes) 
  0.13%    0.06%   [kernel.kallsyms]  __ll_sc_atomic64_sub_return (0 bytes) 
  0.11%    0.37%   [kernel.kallsyms]  __ll_sc_atomic_sub_return_acquire (28 bytes) 
  0.11%    0.22%   [kernel.kallsyms]  __ll_sc___cmpxchg_case_mb_8 (0 bytes) 
  0.11%    0.18%   [kernel.kallsyms]  clear_bit (68 bytes) 
  0.11%    0.11%  libpthread-2.17.so  __pthread_enable_asynccancel (12 bytes) 
  0.09%    0.09%           libjvm.so  [unknown] (12 bytes) 
  0.09%    0.04%           libjvm.so  [unknown] (52 bytes) 
  0.09%    0.17%        libc-2.17.so  _IO_default_xsputn (32 bytes) 
  0.07%    0.04%   [kernel.kallsyms]  el0_svc_naked (0 bytes) 
  0.07%            [kernel.kallsyms]  current_kernel_time64 (44 bytes) 
  0.07%    0.02%   [kernel.kallsyms]  __ll_sc_atomic_sub (0 bytes) 
  0.07%    0.04%           libjvm.so  [unknown] (20 bytes) 
  0.06%    0.02%   [kernel.kallsyms]  syscall_trace_exit (44 bytes) 
  0.06%    0.04%   [kernel.kallsyms]  __audit_syscall_exit (68 bytes) 
  4.86%    5.35%  <...other 343 warm regions...>
....................................................................................................
 99.96%  100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 91.84%   91.63%         C2, level 4  mat_mul.MyBenchmark::loop, version 584 
  1.10%    1.11%   [kernel.kallsyms]  finish_task_switch 
  1.10%    1.75%           libjvm.so  [unknown] 
  0.44%    0.20%   [kernel.kallsyms]  _raw_spin_unlock_irqrestore 
  0.20%    0.28%  libpthread-2.17.so  __pthread_disable_asynccancel 
  0.18%    0.37%        libc-2.17.so  vfprintf 
  0.15%    0.02%   [kernel.kallsyms]  syscall_trace_enter 
  0.15%    0.13%        libc-2.17.so  _IO_fwrite 
  0.13%    0.11%  libpthread-2.17.so  __pthread_enable_asynccancel 
  0.13%    0.07%   [kernel.kallsyms]  __ll_sc_atomic64_sub_return 
  0.13%    0.15%   [kernel.kallsyms]  __ll_sc_atomic_add_return_release 
  0.13%    0.24%        libc-2.17.so  _IO_default_xsputn 
  0.11%    0.37%   [kernel.kallsyms]  __ll_sc_atomic_sub_return_acquire 
  0.11%    0.04%        libc-2.17.so  _IO_fflush 
  0.11%    0.22%   [kernel.kallsyms]  __ll_sc___cmpxchg_case_mb_8 
  0.11%    0.18%   [kernel.kallsyms]  clear_bit 
  0.11%    0.07%   [kernel.kallsyms]  __audit_syscall_exit 
  0.11%    0.17%   [kernel.kallsyms]  pipe_write 
  0.09%    0.02%   [kernel.kallsyms]  syscall_trace_exit 
  0.09%    0.07%   [kernel.kallsyms]  __block_write_begin 
  3.45%    1.84%  <...other 105 warm methods...>
....................................................................................................
 99.96%   99.04%  <totals>

....[Distribution by Source]........................................................................
 91.84%   91.63%         C2, level 4
  4.95%    4.17%   [kernel.kallsyms]
  1.12%    1.75%           libjvm.so
  1.10%    1.48%        libc-2.17.so
  0.48%    0.42%    hsdis-aarch64.so
  0.39%    0.46%  libpthread-2.17.so
  0.09%    0.06%         interpreter
....................................................................................................
 99.96%  100.00%  <totals>



# JMH version: 1.19
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.151-1.b12.el7_4.aarch64/jre/bin/java
# VM options: -XX:+UnlockDiagnosticVMOptions -XX:CompileCommand=print,MyBenchmark
# Warmup: 3 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: mat_mul.MyBenchmark.loop
# Parameters: (N_str = 256)

# Run progress: 20.00% complete, ETA 00:09:34
# Fork: 1 of 2
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 0.847 s/op
# Warmup Iteration   2: 0.768 s/op
# Warmup Iteration   3: 0.769 s/op
Iteration   1: 0.769 s/op
Iteration   2: 0.769 s/op
Iteration   3: 0.768 s/op
Iteration   4: 0.769 s/op
Iteration   5: 0.769 s/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 25.00% complete, ETA 00:09:10
# Fork: 2 of 2
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 0.851 s/op
# Warmup Iteration   2: 0.769 s/op
# Warmup Iteration   3: 0.769 s/op
Iteration   1: 0.768 s/op
Iteration   2: 0.768 s/op
Iteration   3: 0.768 s/op
Iteration   4: 0.769 s/op
Iteration   5: 0.768 s/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "mat_mul.MyBenchmark.loop":
  0.768 ?(99.9%) 0.001 s/op [Average]
  (min, avg, max) = (0.768, 0.768, 0.769), stdev = 0.001
  CI (99.9%): [0.768, 0.769] (assumes normal distribution)

Secondary result "mat_mul.MyBenchmark.loop:?asm":
PrintAssembly processed: 196452 total address lines.
Perf output processed (skipped 24.199 seconds):
 Column 1: cycles (8105 events)
 Column 2: instructions (7988 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
C2, level 4, mat_mul.MyBenchmark::loop, version 588 (256 bytes) 

                    0x000003ff6c5724d4: add	x10, x6, x20
                    0x000003ff6c5724d8: str	w4, [x10,#16]   ;*iastore
                                                                  ; - mat_mul.MyBenchmark::loop@121 (line 45)
                    0x000003ff6c5724dc: str	w5, [x1,#20]    ;*putfield j
                                                                  ; - mat_mul.MyBenchmark::loop@129 (line 40)
                    0x000003ff6c5724e0: cmp	w5, w16
                    0x000003ff6c5724e4: b.ge	0x000003ff6c572400  ;*aload_0
                                                                  ; - mat_mul.MyBenchmark::loop@32 (line 41)
                    0x000003ff6c5724e8: str	wzr, [x1,#28]   ;*putfield s
                                                                  ; - mat_mul.MyBenchmark::loop@34 (line 41)
  0.01%    0.01%    0x000003ff6c5724ec: str	wzr, [x1,#24]   ;*putfield k
                                                                  ; - mat_mul.MyBenchmark::loop@39 (line 42)
  0.01%             0x000003ff6c5724f0: ldr	w10, [x7,#12]   ; implicit exception: dispatches to 0x000003ff6c572678
           0.01%    0x000003ff6c5724f4: ldr	w19, [x14,#16]  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop@71 (line 43)
  0.02%    0.09%    0x000003ff6c5724f8: cmp	w5, w10
                    0x000003ff6c5724fc: b.cs	0x000003ff6c572634
           0.01%    0x000003ff6c572500: sbfiz	x20, x5, #2, #32  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop@85 (line 43)
           0.01%    0x000003ff6c572504: add	x10, x7, x20
           0.01%    0x000003ff6c572508: ldr	w11, [x10,#16]
  0.19%    0.14%    0x000003ff6c57250c: mul	w4, w11, w19    ;*imul
                                                                  ; - mat_mul.MyBenchmark::loop@86 (line 43)
  0.01%    0.03%    0x000003ff6c572510: str	w15, [x1,#24]   ;*putfield k
                                                                  ; - mat_mul.MyBenchmark::loop@98 (line 42)
  0.01%             0x000003ff6c572514: str	w4, [x1,#28]    ;*putfield s
                                                                  ; - mat_mul.MyBenchmark::loop@88 (line 43)
                    0x000003ff6c572518: cmp	w0, #0x1
                    0x000003ff6c57251c: b.le	0x000003ff6c572640
           0.03%    0x000003ff6c572520: orr	w3, wzr, #0x1
                    0x000003ff6c572524: nop
                    0x000003ff6c572528: nop
                    0x000003ff6c57252c: nop                       ;*aload_0
                                                                  ; - mat_mul.MyBenchmark::loop@53 (line 43)
  0.51%    0.26%    0x000003ff6c572530: sbfiz	x19, x3, #2, #32
  0.43%    0.25%    0x000003ff6c572534: add	x10, x13, x19
                    0x000003ff6c572538: sbfiz	x22, x3, #2, #32
  0.38%    0.13%    0x000003ff6c57253c: ldr	w10, [x10,#16]
  0.15%    0.09%    0x000003ff6c572540: add	x11, x13, x22
  0.49%    0.39%    0x000003ff6c572544: lsl	x25, x10, #3
  0.02%    0.05%    0x000003ff6c572548: ldr	w11, [x11,#20]
  2.64%    1.68%    0x000003ff6c57254c: ldr	w10, [x25,#12]  ; implicit exception: dispatches to 0x000003ff6c572678
 19.14%   18.55%    0x000003ff6c572550: add	x19, x14, x19
  0.57%    0.30%    0x000003ff6c572554: add	x26, x25, x20
                    0x000003ff6c572558: lsl	x24, x11, #3    ;*aaload
                                                                  ; - mat_mul.MyBenchmark::loop@80 (line 43)
  1.62%    0.54%    0x000003ff6c57255c: ldr	w19, [x19,#16]  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop@71 (line 43)
                    0x000003ff6c572560: cmp	w5, w10
                    0x000003ff6c572564: b.cs	0x000003ff6c572600  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop@85 (line 43)
  0.85%    0.55%    0x000003ff6c572568: ldr	w10, [x26,#16]
 17.96%   30.32%    0x000003ff6c57256c: add	w11, w3, #0x1
  1.94%    0.58%    0x000003ff6c572570: madd	w4, w10, w19, w4  ;*iadd
                                                                  ; - mat_mul.MyBenchmark::loop@87 (line 43)
  0.53%    0.09%    0x000003ff6c572574: str	w11, [x1,#24]   ;*putfield k
                                                                  ; - mat_mul.MyBenchmark::loop@98 (line 42)
  1.07%    0.23%    0x000003ff6c572578: str	w4, [x1,#28]    ;*putfield s
                                                                  ; - mat_mul.MyBenchmark::loop@88 (line 43)
  1.10%    0.31%    0x000003ff6c57257c: ldr	w10, [x24,#12]  ; implicit exception: dispatches to 0x000003ff6c572678
 17.69%   19.14%    0x000003ff6c572580: add	x19, x14, x22
  0.49%    0.20%    0x000003ff6c572584: add	x11, x24, x20
  1.37%    0.33%    0x000003ff6c572588: ldr	w19, [x19,#20]  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop@71 (line 43)
  1.01%    0.99%    0x000003ff6c57258c: cmp	w5, w10
                    0x000003ff6c572590: b.cs	0x000003ff6c572604  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop@85 (line 43)
  1.10%    0.24%    0x000003ff6c572594: ldr	w10, [x11,#16]
 19.84%   16.86%    0x000003ff6c572598: madd	w4, w10, w19, w4  ;*iadd
                                                                  ; - mat_mul.MyBenchmark::loop@87 (line 43)
  0.62%    0.13%    0x000003ff6c57259c: add	w3, w3, #0x2    ;*iadd
                                                                  ; - mat_mul.MyBenchmark::loop@97 (line 42)
  0.89%    0.35%    0x000003ff6c5725a0: str	w4, [x1,#28]    ;*putfield s
                                                                  ; - mat_mul.MyBenchmark::loop@88 (line 43)
  1.07%    0.23%    0x000003ff6c5725a4: str	w3, [x1,#24]    ;*putfield k
                                                                  ; - mat_mul.MyBenchmark::loop@98 (line 42)
                    0x000003ff6c5725a8: cmp	w3, w0
                    0x000003ff6c5725ac: b.lt	0x000003ff6c572530  ;*if_icmpge
                                                                  ; - mat_mul.MyBenchmark::loop@50 (line 42)
  0.01%    0.08%    0x000003ff6c5725b0: cmp	w3, w16
                    0x000003ff6c5725b4: b.ge	0x000003ff6c5724d0  ;*aload_0
                                                                  ; - mat_mul.MyBenchmark::loop@53 (line 43)
                    0x000003ff6c5725b8: sbfiz	x11, x3, #2, #32
                    0x000003ff6c5725bc: add	x10, x13, x11
                    0x000003ff6c5725c0: ldr	w10, [x10,#16]
                    0x000003ff6c5725c4: lsl	x22, x10, #3    ;*aaload
                                                                  ; - mat_mul.MyBenchmark::loop@80 (line 43)
           0.01%    0x000003ff6c5725c8: ldr	w19, [x22,#12]  ; implicit exception: dispatches to 0x000003ff6c572678
  0.10%    0.15%    0x000003ff6c5725cc: add	x10, x14, x11
  0.01%             0x000003ff6c5725d0: add	x24, x22, x20
                    0x000003ff6c5725d4: ldr	w10, [x10,#16]  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop@71 (line 43)
                    0x000003ff6c5725d8: cmp	w5, w19
                    0x000003ff6c5725dc: b.cs	0x000003ff6c572648  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop@85 (line 43)
                    0x000003ff6c5725e0: ldr	w19, [x24,#16]
  0.09%    0.25%    0x000003ff6c5725e4: madd	w4, w19, w10, w4  ;*iadd
                                                                  ; - mat_mul.MyBenchmark::loop@87 (line 43)
                    0x000003ff6c5725e8: add	w3, w3, #0x1    ;*iadd
                                                                  ; - mat_mul.MyBenchmark::loop@97 (line 42)
  0.02%             0x000003ff6c5725ec: str	w4, [x1,#28]    ;*putfield s
                                                                  ; - mat_mul.MyBenchmark::loop@88 (line 43)
                    0x000003ff6c5725f0: str	w3, [x1,#24]    ;*putfield k
                                                                  ; - mat_mul.MyBenchmark::loop@98 (line 42)
                    0x000003ff6c5725f4: cmp	w3, w16
                    0x000003ff6c5725f8: b.lt	0x000003ff6c5725b8  ;*if_icmpge
                                                                  ; - mat_mul.MyBenchmark::loop@50 (line 42)
                    0x000003ff6c5725fc: b	0x000003ff6c5724d0
                    0x000003ff6c572600: mov	x24, x25
                    0x000003ff6c572604: str	x24, [sp,#8]
....................................................................................................
 93.98%   93.59%  <total for region 1>

....[Hottest Regions]...............................................................................
 93.98%   93.59%         C2, level 4  mat_mul.MyBenchmark::loop, version 588 (256 bytes) 
  1.11%    1.13%   [kernel.kallsyms]  finish_task_switch (0 bytes) 
  0.22%    0.08%   [kernel.kallsyms]  _raw_spin_unlock_irqrestore (0 bytes) 
  0.15%    0.10%   [kernel.kallsyms]  __ll_sc___cmpxchg_case_mb_8 (44 bytes) 
  0.12%    0.09%   [kernel.kallsyms]  __ll_sc_atomic_sub_return_acquire (24 bytes) 
  0.10%    0.09%   [kernel.kallsyms]  __ll_sc_atomic_add_return_release (28 bytes) 
  0.10%    0.18%  libpthread-2.17.so  __pthread_disable_asynccancel (48 bytes) 
  0.09%    0.04%   [kernel.kallsyms]  __ll_sc_atomic64_sub_return (4 bytes) 
  0.06%    0.03%   [kernel.kallsyms]  clear_bit (0 bytes) 
  0.05%    0.03%   [kernel.kallsyms]  el0_svc_naked (0 bytes) 
  0.05%    0.01%   [kernel.kallsyms]  syscall_trace_enter (48 bytes) 
  0.05%            [kernel.kallsyms]  __audit_syscall_entry (56 bytes) 
  0.05%            [kernel.kallsyms]  pipe_write (8 bytes) 
  0.05%    0.03%   [kernel.kallsyms]  __block_write_begin (32 bytes) 
  0.05%    0.04%   [kernel.kallsyms]  __ll_sc_atomic_sub_return (0 bytes) 
  0.05%    0.01%    hsdis-aarch64.so  bfd_hash_allocate@plt (8 bytes) 
  0.05%    0.10%           libjvm.so  [unknown] (60 bytes) 
  0.05%    0.11%        libc-2.17.so  _IO_fwrite (0 bytes) 
  0.05%    0.11%  libpthread-2.17.so  __pthread_enable_asynccancel (16 bytes) 
  0.04%    0.01%   [kernel.kallsyms]  ext4_get_group_desc (24 bytes) 
  3.54%    4.24%  <...other 374 warm regions...>
....................................................................................................
100.00%  100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 93.98%   93.60%         C2, level 4  mat_mul.MyBenchmark::loop, version 588 
  1.11%    1.13%   [kernel.kallsyms]  finish_task_switch 
  0.85%    1.00%           libjvm.so  [unknown] 
  0.22%    0.08%   [kernel.kallsyms]  _raw_spin_unlock_irqrestore 
  0.20%    0.20%        libc-2.17.so  vfprintf 
  0.15%    0.10%   [kernel.kallsyms]  __ll_sc___cmpxchg_case_mb_8 
  0.12%    0.09%   [kernel.kallsyms]  __ll_sc_atomic_sub_return_acquire 
  0.10%    0.18%  libpthread-2.17.so  __pthread_disable_asynccancel 
  0.10%    0.18%        libc-2.17.so  _IO_fwrite 
  0.10%    0.09%   [kernel.kallsyms]  __ll_sc_atomic_add_return_release 
  0.09%    0.05%   [kernel.kallsyms]  __block_write_begin 
  0.09%    0.04%   [kernel.kallsyms]  __ll_sc_atomic64_sub_return 
  0.09%    0.13%   [kernel.kallsyms]  pipe_write 
  0.06%    0.06%        libc-2.17.so  _IO_default_xsputn 
  0.06%    0.03%   [kernel.kallsyms]  clear_bit 
  0.05%    0.03%   [kernel.kallsyms]  balance_dirty_pages_ratelimited 
  0.05%    0.11%  libpthread-2.17.so  __pthread_enable_asynccancel 
  0.05%    0.03%   [kernel.kallsyms]  syscall_trace_enter 
  0.05%    0.01%   [kernel.kallsyms]  __audit_syscall_entry 
  0.05%    0.03%   [kernel.kallsyms]  el0_svc_naked 
  2.44%    2.05%  <...other 129 warm methods...>
....................................................................................................
100.00%   99.19%  <totals>

....[Distribution by Source]........................................................................
 93.98%   93.60%         C2, level 4
  3.70%    3.78%   [kernel.kallsyms]
  0.86%    1.05%           libjvm.so
  0.72%    0.80%        libc-2.17.so
  0.51%    0.38%    hsdis-aarch64.so
  0.20%    0.34%  libpthread-2.17.so
  0.04%    0.05%         interpreter
....................................................................................................
100.00%  100.00%  <totals>

PrintAssembly processed: 196704 total address lines.
Perf output processed (skipped 24.152 seconds):
 Column 1: cycles (8111 events)
 Column 2: instructions (7956 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
C2, level 4, mat_mul.MyBenchmark::loop, version 586 (276 bytes) 

                                                                  ; - mat_mul.MyBenchmark::loop@32 (line 41)
                    0x000003ffa4579540: cmp	w16, w10
                    0x000003ffa4579544: csel	w0, w18, w10, lt
                    0x000003ffa4579548: mov	w5, wzr
                    0x000003ffa457954c: b	0x000003ffa4579568
                    0x000003ffa4579550: add	w5, w5, #0x1    ;*iadd
                                                                  ; - mat_mul.MyBenchmark::loop@128 (line 40)
                    0x000003ffa4579554: add	x10, x6, x20
                    0x000003ffa4579558: str	w4, [x10,#16]   ;*iastore
                                                                  ; - mat_mul.MyBenchmark::loop@121 (line 45)
  0.01%             0x000003ffa457955c: str	w5, [x1,#20]    ;*putfield j
                                                                  ; - mat_mul.MyBenchmark::loop@129 (line 40)
                    0x000003ffa4579560: cmp	w5, w16
                    0x000003ffa4579564: b.ge	0x000003ffa4579480  ;*aload_0
                                                                  ; - mat_mul.MyBenchmark::loop@32 (line 41)
           0.01%    0x000003ffa4579568: str	wzr, [x1,#28]   ;*putfield s
                                                                  ; - mat_mul.MyBenchmark::loop@34 (line 41)
                    0x000003ffa457956c: str	wzr, [x1,#24]   ;*putfield k
                                                                  ; - mat_mul.MyBenchmark::loop@39 (line 42)
                    0x000003ffa4579570: ldr	w10, [x7,#12]   ; implicit exception: dispatches to 0x000003ffa45796f8
                    0x000003ffa4579574: ldr	w19, [x14,#16]  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop@71 (line 43)
  0.11%    0.01%    0x000003ffa4579578: cmp	w5, w10
                    0x000003ffa457957c: b.cs	0x000003ffa45796b4
                    0x000003ffa4579580: sbfiz	x20, x5, #2, #32  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop@85 (line 43)
                    0x000003ffa4579584: add	x10, x7, x20
                    0x000003ffa4579588: ldr	w11, [x10,#16]
  0.20%    0.18%    0x000003ffa457958c: mul	w4, w11, w19    ;*imul
                                                                  ; - mat_mul.MyBenchmark::loop@86 (line 43)
                    0x000003ffa4579590: str	w15, [x1,#24]   ;*putfield k
                                                                  ; - mat_mul.MyBenchmark::loop@98 (line 42)
  0.01%    0.03%    0x000003ffa4579594: str	w4, [x1,#28]    ;*putfield s
                                                                  ; - mat_mul.MyBenchmark::loop@88 (line 43)
                    0x000003ffa4579598: cmp	w0, #0x1
                    0x000003ffa457959c: b.le	0x000003ffa45796c0
  0.02%    0.01%    0x000003ffa45795a0: orr	w3, wzr, #0x1
                    0x000003ffa45795a4: nop
                    0x000003ffa45795a8: nop
                    0x000003ffa45795ac: nop                       ;*aload_0
                                                                  ; - mat_mul.MyBenchmark::loop@53 (line 43)
  0.52%    0.48%    0x000003ffa45795b0: sbfiz	x19, x3, #2, #32
  0.52%    0.43%    0x000003ffa45795b4: add	x10, x13, x19
                    0x000003ffa45795b8: sbfiz	x22, x3, #2, #32
  0.55%    0.50%    0x000003ffa45795bc: ldr	w10, [x10,#16]
  0.23%    0.13%    0x000003ffa45795c0: add	x11, x13, x22
  0.55%    0.47%    0x000003ffa45795c4: lsl	x25, x10, #3
           0.03%    0x000003ffa45795c8: ldr	w11, [x11,#20]
  2.26%    2.10%    0x000003ffa45795cc: ldr	w10, [x25,#12]  ; implicit exception: dispatches to 0x000003ffa45796f8
 17.80%   16.91%    0x000003ffa45795d0: add	x19, x14, x19
  0.48%    0.52%    0x000003ffa45795d4: add	x26, x25, x20
                    0x000003ffa45795d8: lsl	x24, x11, #3    ;*aaload
                                                                  ; - mat_mul.MyBenchmark::loop@80 (line 43)
  1.23%    1.87%    0x000003ffa45795dc: ldr	w19, [x19,#16]  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop@71 (line 43)
           0.01%    0x000003ffa45795e0: cmp	w5, w10
                    0x000003ffa45795e4: b.cs	0x000003ffa4579680  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop@85 (line 43)
  0.92%    1.16%    0x000003ffa45795e8: ldr	w10, [x26,#16]
 17.73%   27.21%    0x000003ffa45795ec: add	w11, w3, #0x1
  2.00%    1.51%    0x000003ffa45795f0: madd	w4, w10, w19, w4  ;*iadd
                                                                  ; - mat_mul.MyBenchmark::loop@87 (line 43)
  0.46%    0.44%    0x000003ffa45795f4: str	w11, [x1,#24]   ;*putfield k
                                                                  ; - mat_mul.MyBenchmark::loop@98 (line 42)
  1.06%    0.83%    0x000003ffa45795f8: str	w4, [x1,#28]    ;*putfield s
                                                                  ; - mat_mul.MyBenchmark::loop@88 (line 43)
  0.83%    0.94%    0x000003ffa45795fc: ldr	w10, [x24,#12]  ; implicit exception: dispatches to 0x000003ffa45796f8
 17.93%   15.45%    0x000003ffa4579600: add	x19, x14, x22
  0.44%    0.45%    0x000003ffa4579604: add	x11, x24, x20
  1.59%    0.67%    0x000003ffa4579608: ldr	w19, [x19,#20]  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop@71 (line 43)
  1.06%    0.94%    0x000003ffa457960c: cmp	w5, w10
                    0x000003ffa4579610: b.cs	0x000003ffa4579684  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop@85 (line 43)
  0.96%    0.84%    0x000003ffa4579614: ldr	w10, [x11,#16]
 20.64%   16.45%    0x000003ffa4579618: madd	w4, w10, w19, w4  ;*iadd
                                                                  ; - mat_mul.MyBenchmark::loop@87 (line 43)
  0.58%    0.44%    0x000003ffa457961c: add	w3, w3, #0x2    ;*iadd
                                                                  ; - mat_mul.MyBenchmark::loop@97 (line 42)
  1.16%    0.77%    0x000003ffa4579620: str	w4, [x1,#28]    ;*putfield s
                                                                  ; - mat_mul.MyBenchmark::loop@88 (line 43)
  0.99%    0.77%    0x000003ffa4579624: str	w3, [x1,#24]    ;*putfield k
                                                                  ; - mat_mul.MyBenchmark::loop@98 (line 42)
                    0x000003ffa4579628: cmp	w3, w0
                    0x000003ffa457962c: b.lt	0x000003ffa45795b0  ;*if_icmpge
                                                                  ; - mat_mul.MyBenchmark::loop@50 (line 42)
  0.04%    0.01%    0x000003ffa4579630: cmp	w3, w16
                    0x000003ffa4579634: b.ge	0x000003ffa4579550  ;*aload_0
                                                                  ; - mat_mul.MyBenchmark::loop@53 (line 43)
                    0x000003ffa4579638: sbfiz	x11, x3, #2, #32
           0.01%    0x000003ffa457963c: add	x10, x13, x11
           0.01%    0x000003ffa4579640: ldr	w10, [x10,#16]
                    0x000003ffa4579644: lsl	x22, x10, #3    ;*aaload
                                                                  ; - mat_mul.MyBenchmark::loop@80 (line 43)
  0.04%    0.03%    0x000003ffa4579648: ldr	w19, [x22,#12]  ; implicit exception: dispatches to 0x000003ffa45796f8
  0.17%    0.11%    0x000003ffa457964c: add	x10, x14, x11
                    0x000003ffa4579650: add	x24, x22, x20
  0.01%    0.01%    0x000003ffa4579654: ldr	w10, [x10,#16]  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop@71 (line 43)
                    0x000003ffa4579658: cmp	w5, w19
                    0x000003ffa457965c: b.cs	0x000003ffa45796c8  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop@85 (line 43)
           0.01%    0x000003ffa4579660: ldr	w19, [x24,#16]
  0.15%    0.20%    0x000003ffa4579664: madd	w4, w19, w10, w4  ;*iadd
                                                                  ; - mat_mul.MyBenchmark::loop@87 (line 43)
  0.01%    0.01%    0x000003ffa4579668: add	w3, w3, #0x1    ;*iadd
                                                                  ; - mat_mul.MyBenchmark::loop@97 (line 42)
           0.01%    0x000003ffa457966c: str	w4, [x1,#28]    ;*putfield s
                                                                  ; - mat_mul.MyBenchmark::loop@88 (line 43)
  0.01%    0.01%    0x000003ffa4579670: str	w3, [x1,#24]    ;*putfield k
                                                                  ; - mat_mul.MyBenchmark::loop@98 (line 42)
                    0x000003ffa4579674: cmp	w3, w16
                    0x000003ffa4579678: b.lt	0x000003ffa4579638  ;*if_icmpge
                                                                  ; - mat_mul.MyBenchmark::loop@50 (line 42)
                    0x000003ffa457967c: b	0x000003ffa4579550
                    0x000003ffa4579680: mov	x24, x25
                    0x000003ffa4579684: str	x24, [sp,#8]
                    0x000003ffa4579688: str	w19, [sp,#4]
                    0x000003ffa457968c: str	w4, [sp]
....................................................................................................
 93.28%   92.97%  <total for region 1>

....[Hottest Regions]...............................................................................
 93.28%   92.97%         C2, level 4  mat_mul.MyBenchmark::loop, version 586 (276 bytes) 
  1.92%    1.95%   [kernel.kallsyms]  finish_task_switch (12 bytes) 
  0.30%    0.14%   [kernel.kallsyms]  _raw_spin_unlock_irqrestore (0 bytes) 
  0.15%    0.11%   [kernel.kallsyms]  __ll_sc___cmpxchg_case_mb_8 (36 bytes) 
  0.11%    0.06%  libpthread-2.17.so  __pthread_enable_asynccancel (12 bytes) 
  0.11%    0.20%  libpthread-2.17.so  __pthread_disable_asynccancel (52 bytes) 
  0.09%    0.10%   [kernel.kallsyms]  el0_svc_naked (0 bytes) 
  0.09%    0.11%   [kernel.kallsyms]  clear_bit (4 bytes) 
  0.09%    0.06%        libc-2.17.so  _IO_fwrite (116 bytes) 
  0.07%    0.11%   [kernel.kallsyms]  __ll_sc_atomic64_sub_return (52 bytes) 
  0.06%    0.15%   [kernel.kallsyms]  __ll_sc_atomic_add_return_release (20 bytes) 
  0.06%    0.14%   [kernel.kallsyms]  __ll_sc_atomic_sub_return_acquire (20 bytes) 
  0.06%            [kernel.kallsyms]  copy_page_from_iter (28 bytes) 
  0.06%    0.10%           libjvm.so  JVM_Clone (108 bytes) 
  0.05%    0.04%   [kernel.kallsyms]  vfs_write (44 bytes) 
  0.05%    0.04%   [kernel.kallsyms]  _raw_spin_lock (8 bytes) 
  0.05%    0.03%        libc-2.17.so  strlen (40 bytes) 
  0.04%            [kernel.kallsyms]  ext4_da_write_end (36 bytes) 
  0.04%    0.03%   [kernel.kallsyms]  syscall_trace_enter (68 bytes) 
  0.04%    0.19%   [kernel.kallsyms]  __do_softirq (0 bytes) 
  3.29%    3.46%  <...other 337 warm regions...>
....................................................................................................
100.00%   99.99%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 93.28%   92.97%         C2, level 4  mat_mul.MyBenchmark::loop, version 586 
  1.92%    1.95%   [kernel.kallsyms]  finish_task_switch 
  0.67%    0.60%           libjvm.so  JVM_Clone 
  0.30%    0.14%   [kernel.kallsyms]  _raw_spin_unlock_irqrestore 
  0.18%    0.24%        libc-2.17.so  vfprintf 
  0.17%    0.25%           libjvm.so  [unknown] 
  0.15%    0.11%   [kernel.kallsyms]  __ll_sc___cmpxchg_case_mb_8 
  0.14%    0.09%        libc-2.17.so  _IO_fwrite 
  0.14%    0.03%   [kernel.kallsyms]  copy_page_from_iter 
  0.12%    0.08%  libpthread-2.17.so  __pthread_enable_asynccancel 
  0.11%    0.20%  libpthread-2.17.so  __pthread_disable_asynccancel 
  0.11%    0.09%   [kernel.kallsyms]  vfs_write 
  0.09%    0.10%   [kernel.kallsyms]  el0_svc_naked 
  0.09%    0.05%        libc-2.17.so  _IO_fflush 
  0.09%    0.11%   [kernel.kallsyms]  clear_bit 
  0.07%    0.11%   [kernel.kallsyms]  __ll_sc_atomic64_sub_return 
  0.07%    0.15%   [kernel.kallsyms]  pipe_write 
  0.06%    0.14%   [kernel.kallsyms]  __ll_sc_atomic_sub_return_acquire 
  0.06%    0.05%        libc-2.17.so  strlen 
  0.06%    0.15%   [kernel.kallsyms]  __ll_sc_atomic_add_return_release 
  2.12%    1.62%  <...other 116 warm methods...>
....................................................................................................
100.00%   99.23%  <totals>

....[Distribution by Source]........................................................................
 93.28%   92.97%         C2, level 4
  4.49%    4.54%   [kernel.kallsyms]
  0.85%    0.87%           libjvm.so
  0.78%    0.94%        libc-2.17.so
  0.27%    0.34%  libpthread-2.17.so
  0.26%    0.29%    hsdis-aarch64.so
  0.06%    0.03%         interpreter
  0.01%             Unknown, level 0
....................................................................................................
100.00%   99.99%  <totals>



# JMH version: 1.19
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.151-1.b12.el7_4.aarch64/jre/bin/java
# VM options: -XX:+UnlockDiagnosticVMOptions -XX:CompileCommand=print,MyBenchmark
# Warmup: 3 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: mat_mul.MyBenchmark.loop
# Parameters: (N_str = 512)

# Run progress: 30.00% complete, ETA 00:08:41
# Fork: 1 of 2
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 6.482 s/op
# Warmup Iteration   2: 6.411 s/op
# Warmup Iteration   3: 6.364 s/op
Iteration   1: 6.361 s/op
Iteration   2: 6.362 s/op
Iteration   3: 6.362 s/op
Iteration   4: 6.373 s/op
Iteration   5: 6.383 s/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 35.00% complete, ETA 00:09:26
# Fork: 2 of 2
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 6.504 s/op
# Warmup Iteration   2: 6.423 s/op
# Warmup Iteration   3: 6.365 s/op
Iteration   1: 6.365 s/op
Iteration   2: 6.363 s/op
Iteration   3: 6.364 s/op
Iteration   4: 6.362 s/op
Iteration   5: 6.362 s/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "mat_mul.MyBenchmark.loop":
  6.366 ?(99.9%) 0.011 s/op [Average]
  (min, avg, max) = (6.361, 6.366, 6.383), stdev = 0.007
  CI (99.9%): [6.355, 6.377] (assumes normal distribution)

Secondary result "mat_mul.MyBenchmark.loop:?asm":
PrintAssembly processed: 195252 total address lines.
Perf output processed (skipped 38.624 seconds):
 Column 1: cycles (32188 events)
 Column 2: instructions (31700 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
C2, level 4, mat_mul.MyBenchmark::loop, version 594 (296 bytes) 

                                                                  ; - mat_mul.MyBenchmark::loop@153 (line 48)
                                                                  ;   {optimized virtual_call}
                    0x000003ff7c57e0fc: ldp	x29, x30, [sp,#64]
                    0x000003ff7c57e100: add	sp, sp, #0x50
                    0x000003ff7c57e104: adrp	x8, 0x000003ff8aec0000
                                                                  ;   {poll_return}
                    0x000003ff7c57e108: ldr	wzr, [x8]       ;   {poll_return}
                    0x000003ff7c57e10c: ret
                    0x000003ff7c57e110: add	w4, w4, #0x1    ;*iadd
                                                                  ; - mat_mul.MyBenchmark::loop@128 (line 40)
  0.00%    0.00%    0x000003ff7c57e114: add	x10, x6, x20
                    0x000003ff7c57e118: str	w17, [x10,#16]  ;*iastore
                                                                  ; - mat_mul.MyBenchmark::loop@121 (line 45)
  0.00%    0.00%    0x000003ff7c57e11c: str	w4, [x1,#20]    ;*putfield j
                                                                  ; - mat_mul.MyBenchmark::loop@129 (line 40)
                    0x000003ff7c57e120: cmp	w4, w16
                    0x000003ff7c57e124: b.ge	0x000003ff7c57e014  ;*aload_0
                                                                  ; - mat_mul.MyBenchmark::loop@32 (line 41)
  0.00%             0x000003ff7c57e128: str	wzr, [x1,#28]   ;*putfield s
                                                                  ; - mat_mul.MyBenchmark::loop@34 (line 41)
  0.00%    0.00%    0x000003ff7c57e12c: str	wzr, [x1,#24]   ;*putfield k
                                                                  ; - mat_mul.MyBenchmark::loop@39 (line 42)
                    0x000003ff7c57e130: ldr	w11, [x19,#12]  ; implicit exception: dispatches to 0x000003ff7c57e2c0
  0.00%             0x000003ff7c57e134: ldr	w10, [x15,#16]  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop@71 (line 43)
  0.09%    0.04%    0x000003ff7c57e138: cmp	w4, w11
                    0x000003ff7c57e13c: b.cs	0x000003ff7c57e278
  0.00%             0x000003ff7c57e140: sbfiz	x20, x4, #2, #32  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop@85 (line 43)
           0.00%    0x000003ff7c57e144: add	x11, x19, x20
  0.00%    0.00%    0x000003ff7c57e148: ldr	w12, [x11,#16]
  0.05%    0.06%    0x000003ff7c57e14c: mul	w17, w12, w10   ;*imul
                                                                  ; - mat_mul.MyBenchmark::loop@86 (line 43)
                    0x000003ff7c57e150: str	w0, [x1,#24]    ;*putfield k
                                                                  ; - mat_mul.MyBenchmark::loop@98 (line 42)
  0.00%    0.00%    0x000003ff7c57e154: str	w17, [x1,#28]   ;*putfield s
                                                                  ; - mat_mul.MyBenchmark::loop@88 (line 43)
                    0x000003ff7c57e158: cmp	w5, #0x1
                    0x000003ff7c57e15c: b.le	0x000003ff7c57e284
  0.01%             0x000003ff7c57e160: orr	w7, wzr, #0x1
                    0x000003ff7c57e164: nop
  0.00%             0x000003ff7c57e168: nop
                    0x000003ff7c57e16c: nop                       ;*aload_0
                                                                  ; - mat_mul.MyBenchmark::loop@53 (line 43)
  0.47%    0.93%    0x000003ff7c57e170: sbfiz	x10, x7, #2, #32
  0.57%    0.82%    0x000003ff7c57e174: add	x11, x14, x10
                    0x000003ff7c57e178: sbfiz	x22, x7, #2, #32
  0.48%    0.79%    0x000003ff7c57e17c: ldr	w11, [x11,#16]
  0.07%    0.07%    0x000003ff7c57e180: add	x12, x14, x22
  0.62%    0.94%    0x000003ff7c57e184: lsl	x25, x11, #3
  0.01%    0.00%    0x000003ff7c57e188: ldr	w12, [x12,#20]
  2.29%    2.33%    0x000003ff7c57e18c: ldr	w11, [x25,#12]  ; implicit exception: dispatches to 0x000003ff7c57e2c0
 19.61%   15.68%    0x000003ff7c57e190: add	x10, x15, x10
  0.47%    1.24%    0x000003ff7c57e194: add	x26, x25, x20
                    0x000003ff7c57e198: lsl	x24, x12, #3    ;*aaload
                                                                  ; - mat_mul.MyBenchmark::loop@80 (line 43)
  1.46%    4.83%    0x000003ff7c57e19c: ldr	w10, [x10,#16]  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop@71 (line 43)
  0.01%             0x000003ff7c57e1a0: cmp	w4, w11
                    0x000003ff7c57e1a4: b.cs	0x000003ff7c57e240  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop@85 (line 43)
  1.02%    3.90%    0x000003ff7c57e1a8: ldr	w12, [x26,#16]
 18.68%   20.29%    0x000003ff7c57e1ac: add	w11, w7, #0x1
  2.02%    3.15%    0x000003ff7c57e1b0: madd	w17, w12, w10, w17  ;*iadd
                                                                  ; - mat_mul.MyBenchmark::loop@87 (line 43)
  0.55%    1.34%    0x000003ff7c57e1b4: str	w11, [x1,#24]   ;*putfield k
                                                                  ; - mat_mul.MyBenchmark::loop@98 (line 42)
  1.13%    1.84%    0x000003ff7c57e1b8: str	w17, [x1,#28]   ;*putfield s
                                                                  ; - mat_mul.MyBenchmark::loop@88 (line 43)
  1.11%    2.64%    0x000003ff7c57e1bc: ldr	w11, [x24,#12]  ; implicit exception: dispatches to 0x000003ff7c57e2c0
 19.13%   12.71%    0x000003ff7c57e1c0: add	x10, x15, x22
  0.56%    0.82%    0x000003ff7c57e1c4: add	x12, x24, x20
  1.49%    1.83%    0x000003ff7c57e1c8: ldr	w10, [x10,#20]  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop@71 (line 43)
  1.17%    0.91%    0x000003ff7c57e1cc: cmp	w4, w11
                    0x000003ff7c57e1d0: b.cs	0x000003ff7c57e244  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop@85 (line 43)
  1.20%    2.15%    0x000003ff7c57e1d4: ldr	w12, [x12,#16]
 21.24%   13.89%    0x000003ff7c57e1d8: madd	w17, w12, w10, w17  ;*iadd
                                                                  ; - mat_mul.MyBenchmark::loop@87 (line 43)
  0.56%    0.86%    0x000003ff7c57e1dc: add	w7, w7, #0x2    ;*iadd
                                                                  ; - mat_mul.MyBenchmark::loop@97 (line 42)
  1.10%    1.48%    0x000003ff7c57e1e0: str	w17, [x1,#28]   ;*putfield s
                                                                  ; - mat_mul.MyBenchmark::loop@88 (line 43)
  1.09%    2.27%    0x000003ff7c57e1e4: str	w7, [x1,#24]    ;*putfield k
                                                                  ; - mat_mul.MyBenchmark::loop@98 (line 42)
                    0x000003ff7c57e1e8: cmp	w7, w5
                    0x000003ff7c57e1ec: b.lt	0x000003ff7c57e170  ;*if_icmpge
                                                                  ; - mat_mul.MyBenchmark::loop@50 (line 42)
  0.01%    0.01%    0x000003ff7c57e1f0: cmp	w7, w16
                    0x000003ff7c57e1f4: b.ge	0x000003ff7c57e110  ;*aload_0
                                                                  ; - mat_mul.MyBenchmark::loop@53 (line 43)
                    0x000003ff7c57e1f8: sbfiz	x11, x7, #2, #32
                    0x000003ff7c57e1fc: add	x10, x14, x11
  0.00%             0x000003ff7c57e200: ldr	w10, [x10,#16]
                    0x000003ff7c57e204: lsl	x12, x10, #3    ;*aaload
                                                                  ; - mat_mul.MyBenchmark::loop@80 (line 43)
  0.01%    0.00%    0x000003ff7c57e208: ldr	w10, [x12,#12]  ; implicit exception: dispatches to 0x000003ff7c57e2c0
  0.10%    0.11%    0x000003ff7c57e20c: add	x11, x15, x11
           0.01%    0x000003ff7c57e210: add	x22, x12, x20
  0.01%    0.03%    0x000003ff7c57e214: ldr	w11, [x11,#16]  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop@71 (line 43)
                    0x000003ff7c57e218: cmp	w4, w10
                    0x000003ff7c57e21c: b.cs	0x000003ff7c57e28c  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop@85 (line 43)
  0.01%    0.01%    0x000003ff7c57e220: ldr	w12, [x22,#16]
  0.08%    0.12%    0x000003ff7c57e224: madd	w17, w12, w11, w17  ;*iadd
                                                                  ; - mat_mul.MyBenchmark::loop@87 (line 43)
  0.00%    0.00%    0x000003ff7c57e228: add	w7, w7, #0x1    ;*iadd
                                                                  ; - mat_mul.MyBenchmark::loop@97 (line 42)
  0.01%    0.00%    0x000003ff7c57e22c: str	w17, [x1,#28]   ;*putfield s
                                                                  ; - mat_mul.MyBenchmark::loop@88 (line 43)
  0.01%             0x000003ff7c57e230: str	w7, [x1,#24]    ;*putfield k
                                                                  ; - mat_mul.MyBenchmark::loop@98 (line 42)
                    0x000003ff7c57e234: cmp	w7, w16
                    0x000003ff7c57e238: b.lt	0x000003ff7c57e1f8  ;*if_icmpge
                                                                  ; - mat_mul.MyBenchmark::loop@50 (line 42)
           0.00%    0x000003ff7c57e23c: b	0x000003ff7c57e110
                    0x000003ff7c57e240: mov	x24, x25
                    0x000003ff7c57e244: str	x24, [sp,#8]
                    0x000003ff7c57e248: str	w10, [sp,#4]
                    0x000003ff7c57e24c: str	w17, [sp]
                    0x000003ff7c57e250: str	x1, [sp,#32]
                    0x000003ff7c57e254: str	x23, [sp,#24]
                    0x000003ff7c57e258: str	w4, [sp,#40]
                    0x000003ff7c57e25c: mov	w1, #0xffffffe4            	// #-28
                    0x000003ff7c57e260: bl	0x000003ff7c0b15c0  ; OopMap{[8]=Oop [24]=Oop [32]=Oop off=676}
....................................................................................................
 98.50%   98.13%  <total for region 1>

....[Hottest Regions]...............................................................................
 98.50%   98.13%         C2, level 4  mat_mul.MyBenchmark::loop, version 594 (296 bytes) 
  0.20%    0.21%   [kernel.kallsyms]  finish_task_switch (12 bytes) 
  0.07%    0.03%   [kernel.kallsyms]  _raw_spin_unlock_irqrestore (0 bytes) 
  0.03%    0.03%           libjvm.so  [unknown] (152 bytes) 
  0.03%    0.01%        libc-2.17.so  _IO_fwrite (12 bytes) 
  0.02%    0.02%   [kernel.kallsyms]  __ll_sc_atomic_add_return_release (48 bytes) 
  0.02%    0.05%   [kernel.kallsyms]  __ll_sc_atomic_sub_return_acquire (20 bytes) 
  0.02%    0.03%   [kernel.kallsyms]  __ll_sc___cmpxchg_case_mb_8 (28 bytes) 
  0.02%            [kernel.kallsyms]  __audit_syscall_entry (76 bytes) 
  0.02%    0.00%        libc-2.17.so  _IO_fwrite (12 bytes) 
  0.02%    0.06%  libpthread-2.17.so  __pthread_disable_asynccancel (52 bytes) 
  0.02%    0.00%   [kernel.kallsyms]  syscall_trace_enter (36 bytes) 
  0.02%    0.00%   [kernel.kallsyms]  percpu_down_read_trylock (44 bytes) 
  0.02%    0.03%   [kernel.kallsyms]  __ll_sc_atomic64_sub_return (56 bytes) 
  0.02%    0.01%           libjvm.so  [unknown] (12 bytes) 
  0.02%    0.01%        libc-2.17.so  _IO_default_xsputn (44 bytes) 
  0.01%            [kernel.kallsyms]  jbd2_write_access_granted.isra.4.part.5 (28 bytes) 
  0.01%    0.01%   [kernel.kallsyms]  el0_svc_naked (0 bytes) 
  0.01%            [kernel.kallsyms]  syscall_trace_exit (20 bytes) 
  0.01%    0.26%   [kernel.kallsyms]  __do_softirq (88 bytes) 
  0.90%    1.10%  <...other 362 warm regions...>
....................................................................................................
100.00%  100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 98.50%   98.14%         C2, level 4  mat_mul.MyBenchmark::loop, version 594 
  0.23%    0.27%           libjvm.so  [unknown] 
  0.20%    0.21%   [kernel.kallsyms]  finish_task_switch 
  0.07%    0.03%   [kernel.kallsyms]  _raw_spin_unlock_irqrestore 
  0.07%    0.02%        libc-2.17.so  _IO_fwrite 
  0.05%    0.07%        libc-2.17.so  vfprintf 
  0.03%            [kernel.kallsyms]  __audit_syscall_entry 
  0.03%    0.02%        libc-2.17.so  _IO_default_xsputn 
  0.02%    0.05%   [kernel.kallsyms]  __ll_sc_atomic_sub_return_acquire 
  0.02%    0.02%   [kernel.kallsyms]  __ll_sc_atomic_add_return_release 
  0.02%    0.03%   [kernel.kallsyms]  __ll_sc___cmpxchg_case_mb_8 
  0.02%    0.02%   [kernel.kallsyms]  vfs_write 
  0.02%    0.03%   [kernel.kallsyms]  pipe_write 
  0.02%    0.06%  libpthread-2.17.so  __pthread_disable_asynccancel 
  0.02%    0.00%   [kernel.kallsyms]  syscall_trace_enter 
  0.02%    0.02%        libc-2.17.so  strlen 
  0.02%            [kernel.kallsyms]  syscall_trace_exit 
  0.02%    0.00%   [kernel.kallsyms]  percpu_down_read_trylock 
  0.02%            [kernel.kallsyms]  jbd2_write_access_granted.isra.4.part.5 
  0.02%    0.03%   [kernel.kallsyms]  __ll_sc_atomic64_sub_return 
  0.57%    0.76%  <...other 115 warm methods...>
....................................................................................................
100.00%   99.78%  <totals>

....[Distribution by Source]........................................................................
 98.50%   98.14%         C2, level 4
  0.88%    1.13%   [kernel.kallsyms]
  0.24%    0.28%           libjvm.so
  0.24%    0.25%        libc-2.17.so
  0.08%    0.09%    hsdis-aarch64.so
  0.05%    0.09%  libpthread-2.17.so
  0.01%    0.01%         interpreter
....................................................................................................
100.00%  100.00%  <totals>

PrintAssembly processed: 195421 total address lines.
Perf output processed (skipped 38.555 seconds):
 Column 1: cycles (32378 events)
 Column 2: instructions (31810 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
C2, level 4, mat_mul.MyBenchmark::loop, version 594 (292 bytes) 

                                                                  ;   {optimized virtual_call}
                    0x000003ffa057dffc: ldp	x29, x30, [sp,#64]
                    0x000003ffa057e000: add	sp, sp, #0x50
                    0x000003ffa057e004: adrp	x8, 0x000003ffaf400000
                                                                  ;   {poll_return}
                    0x000003ffa057e008: ldr	wzr, [x8]       ;   {poll_return}
                    0x000003ffa057e00c: ret
                    0x000003ffa057e010: add	w4, w4, #0x1    ;*iadd
                                                                  ; - mat_mul.MyBenchmark::loop@128 (line 40)
                    0x000003ffa057e014: add	x10, x6, x20
  0.00%             0x000003ffa057e018: str	w17, [x10,#16]  ;*iastore
                                                                  ; - mat_mul.MyBenchmark::loop@121 (line 45)
                    0x000003ffa057e01c: str	w4, [x1,#20]    ;*putfield j
                                                                  ; - mat_mul.MyBenchmark::loop@129 (line 40)
                    0x000003ffa057e020: cmp	w4, w16
                    0x000003ffa057e024: b.ge	0x000003ffa057df14  ;*aload_0
                                                                  ; - mat_mul.MyBenchmark::loop@32 (line 41)
  0.00%             0x000003ffa057e028: str	wzr, [x1,#28]   ;*putfield s
                                                                  ; - mat_mul.MyBenchmark::loop@34 (line 41)
           0.00%    0x000003ffa057e02c: str	wzr, [x1,#24]   ;*putfield k
                                                                  ; - mat_mul.MyBenchmark::loop@39 (line 42)
  0.00%    0.00%    0x000003ffa057e030: ldr	w11, [x19,#12]  ; implicit exception: dispatches to 0x000003ffa057e1c0
           0.00%    0x000003ffa057e034: ldr	w10, [x15,#16]  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop@71 (line 43)
  0.03%    0.03%    0x000003ffa057e038: cmp	w4, w11
                    0x000003ffa057e03c: b.cs	0x000003ffa057e178
                    0x000003ffa057e040: sbfiz	x20, x4, #2, #32  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop@85 (line 43)
           0.01%    0x000003ffa057e044: add	x11, x19, x20
  0.01%             0x000003ffa057e048: ldr	w12, [x11,#16]
  0.08%    0.07%    0x000003ffa057e04c: mul	w17, w12, w10   ;*imul
                                                                  ; - mat_mul.MyBenchmark::loop@86 (line 43)
  0.00%    0.00%    0x000003ffa057e050: str	w0, [x1,#24]    ;*putfield k
                                                                  ; - mat_mul.MyBenchmark::loop@98 (line 42)
           0.01%    0x000003ffa057e054: str	w17, [x1,#28]   ;*putfield s
                                                                  ; - mat_mul.MyBenchmark::loop@88 (line 43)
                    0x000003ffa057e058: cmp	w5, #0x1
                    0x000003ffa057e05c: b.le	0x000003ffa057e184
                    0x000003ffa057e060: orr	w7, wzr, #0x1
                    0x000003ffa057e064: nop
           0.00%    0x000003ffa057e068: nop
                    0x000003ffa057e06c: nop                       ;*aload_0
                                                                  ; - mat_mul.MyBenchmark::loop@53 (line 43)
  0.48%    0.54%    0x000003ffa057e070: sbfiz	x10, x7, #2, #32
  0.53%    0.39%    0x000003ffa057e074: add	x11, x14, x10
                    0x000003ffa057e078: sbfiz	x22, x7, #2, #32
  0.53%    0.41%    0x000003ffa057e07c: ldr	w11, [x11,#16]
  0.06%    0.05%    0x000003ffa057e080: add	x12, x14, x22
  0.48%    0.44%    0x000003ffa057e084: lsl	x25, x11, #3
  0.01%    0.01%    0x000003ffa057e088: ldr	w12, [x12,#20]
  2.24%    1.90%    0x000003ffa057e08c: ldr	w11, [x25,#12]  ; implicit exception: dispatches to 0x000003ffa057e1c0
 19.47%   18.22%    0x000003ffa057e090: add	x10, x15, x10
  0.43%    0.61%    0x000003ffa057e094: add	x26, x25, x20
                    0x000003ffa057e098: lsl	x24, x12, #3    ;*aaload
                                                                  ; - mat_mul.MyBenchmark::loop@80 (line 43)
  1.43%    2.22%    0x000003ffa057e09c: ldr	w10, [x10,#16]  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop@71 (line 43)
                    0x000003ffa057e0a0: cmp	w4, w11
                    0x000003ffa057e0a4: b.cs	0x000003ffa057e140  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop@85 (line 43)
  1.15%    1.97%    0x000003ffa057e0a8: ldr	w12, [x26,#16]
 18.88%   27.55%    0x000003ffa057e0ac: add	w11, w7, #0x1
  1.98%    1.63%    0x000003ffa057e0b0: madd	w17, w12, w10, w17  ;*iadd
                                                                  ; - mat_mul.MyBenchmark::loop@87 (line 43)
  0.48%    0.59%    0x000003ffa057e0b4: str	w11, [x1,#24]   ;*putfield k
                                                                  ; - mat_mul.MyBenchmark::loop@98 (line 42)
  0.95%    0.90%    0x000003ffa057e0b8: str	w17, [x1,#28]   ;*putfield s
                                                                  ; - mat_mul.MyBenchmark::loop@88 (line 43)
  1.05%    1.19%    0x000003ffa057e0bc: ldr	w11, [x24,#12]  ; implicit exception: dispatches to 0x000003ffa057e1c0
 19.13%   16.99%    0x000003ffa057e0c0: add	x10, x15, x22
  0.52%    0.36%    0x000003ffa057e0c4: add	x12, x24, x20
  1.57%    1.04%    0x000003ffa057e0c8: ldr	w10, [x10,#20]  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop@71 (line 43)
  1.21%    1.12%    0x000003ffa057e0cc: cmp	w4, w11
                    0x000003ffa057e0d0: b.cs	0x000003ffa057e144  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop@85 (line 43)
  1.08%    1.02%    0x000003ffa057e0d4: ldr	w12, [x12,#16]
 21.35%   15.99%    0x000003ffa057e0d8: madd	w17, w12, w10, w17  ;*iadd
                                                                  ; - mat_mul.MyBenchmark::loop@87 (line 43)
  0.53%    0.40%    0x000003ffa057e0dc: add	w7, w7, #0x2    ;*iadd
                                                                  ; - mat_mul.MyBenchmark::loop@97 (line 42)
  1.02%    0.69%    0x000003ffa057e0e0: str	w17, [x1,#28]   ;*putfield s
                                                                  ; - mat_mul.MyBenchmark::loop@88 (line 43)
  1.08%    1.17%    0x000003ffa057e0e4: str	w7, [x1,#24]    ;*putfield k
                                                                  ; - mat_mul.MyBenchmark::loop@98 (line 42)
                    0x000003ffa057e0e8: cmp	w7, w5
                    0x000003ffa057e0ec: b.lt	0x000003ffa057e070  ;*if_icmpge
                                                                  ; - mat_mul.MyBenchmark::loop@50 (line 42)
  0.02%    0.01%    0x000003ffa057e0f0: cmp	w7, w16
                    0x000003ffa057e0f4: b.ge	0x000003ffa057e010  ;*aload_0
                                                                  ; - mat_mul.MyBenchmark::loop@53 (line 43)
                    0x000003ffa057e0f8: sbfiz	x11, x7, #2, #32
  0.00%    0.00%    0x000003ffa057e0fc: add	x10, x14, x11
                    0x000003ffa057e100: ldr	w10, [x10,#16]
                    0x000003ffa057e104: lsl	x12, x10, #3    ;*aaload
                                                                  ; - mat_mul.MyBenchmark::loop@80 (line 43)
  0.00%             0x000003ffa057e108: ldr	w10, [x12,#12]  ; implicit exception: dispatches to 0x000003ffa057e1c0
  0.09%    0.07%    0x000003ffa057e10c: add	x11, x15, x11
  0.01%    0.00%    0x000003ffa057e110: add	x22, x12, x20
  0.01%    0.01%    0x000003ffa057e114: ldr	w11, [x11,#16]  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop@71 (line 43)
                    0x000003ffa057e118: cmp	w4, w10
                    0x000003ffa057e11c: b.cs	0x000003ffa057e18c  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop@85 (line 43)
  0.01%    0.01%    0x000003ffa057e120: ldr	w12, [x22,#16]
  0.08%    0.14%    0x000003ffa057e124: madd	w17, w12, w11, w17  ;*iadd
                                                                  ; - mat_mul.MyBenchmark::loop@87 (line 43)
  0.00%             0x000003ffa057e128: add	w7, w7, #0x1    ;*iadd
                                                                  ; - mat_mul.MyBenchmark::loop@97 (line 42)
  0.01%    0.00%    0x000003ffa057e12c: str	w17, [x1,#28]   ;*putfield s
                                                                  ; - mat_mul.MyBenchmark::loop@88 (line 43)
  0.01%             0x000003ffa057e130: str	w7, [x1,#24]    ;*putfield k
                                                                  ; - mat_mul.MyBenchmark::loop@98 (line 42)
                    0x000003ffa057e134: cmp	w7, w16
                    0x000003ffa057e138: b.lt	0x000003ffa057e0f8  ;*if_icmpge
                                                                  ; - mat_mul.MyBenchmark::loop@50 (line 42)
  0.00%             0x000003ffa057e13c: b	0x000003ffa057e010
                    0x000003ffa057e140: mov	x24, x25
                    0x000003ffa057e144: str	x24, [sp,#8]
                    0x000003ffa057e148: str	w10, [sp,#4]
                    0x000003ffa057e14c: str	w17, [sp]
                    0x000003ffa057e150: str	x1, [sp,#32]
                    0x000003ffa057e154: str	x23, [sp,#24]
                    0x000003ffa057e158: str	w4, [sp,#40]
                    0x000003ffa057e15c: mov	w1, #0xffffffe4            	// #-28
                    0x000003ffa057e160: bl	0x000003ffa00b15c0  ; OopMap{[8]=Oop [24]=Oop [32]=Oop off=676}
....................................................................................................
 98.02%   97.76%  <total for region 1>

....[Hottest Regions]...............................................................................
 98.02%   97.76%         C2, level 4  mat_mul.MyBenchmark::loop, version 594 (292 bytes) 
  0.62%    0.64%   [kernel.kallsyms]  finish_task_switch (0 bytes) 
  0.06%    0.05%   [kernel.kallsyms]  _raw_spin_unlock_irqrestore (0 bytes) 
  0.04%    0.04%   [kernel.kallsyms]  __ll_sc___cmpxchg_case_mb_8 (52 bytes) 
  0.03%    0.05%         C2, level 4  java.lang.String::startsWith, version 610 (48 bytes) 
  0.03%    0.02%   [kernel.kallsyms]  __ll_sc_atomic_sub_return_acquire (44 bytes) 
  0.02%    0.26%   [kernel.kallsyms]  __do_softirq (0 bytes) 
  0.02%    0.01%   [kernel.kallsyms]  clear_bit (4 bytes) 
  0.02%    0.00%   [kernel.kallsyms]  _raw_spin_lock (40 bytes) 
  0.02%    0.01%         C2, level 4  java.lang.String::startsWith, version 610 (60 bytes) 
  0.02%    0.01%         C2, level 4  java.lang.String::startsWith, version 610 (20 bytes) 
  0.02%    0.02%   [kernel.kallsyms]  el0_svc_naked (0 bytes) 
  0.01%    0.01%   [kernel.kallsyms]  vfs_write (76 bytes) 
  0.01%    0.01%   [kernel.kallsyms]  __find_get_block (0 bytes) 
  0.01%    0.02%   [kernel.kallsyms]  __block_write_begin (28 bytes) 
  0.01%    0.04%   [kernel.kallsyms]  __ll_sc_atomic_add_return_release (24 bytes) 
  0.01%    0.02%         C2, level 4  java.lang.String::startsWith, version 610 (12 bytes) 
  0.01%    0.01%         C2, level 4  java.lang.String::startsWith, version 610 (28 bytes) 
  0.01%            [kernel.kallsyms]  ext4_mark_inode_dirty (28 bytes) 
  0.01%    0.01%   [kernel.kallsyms]  __sys_trace (32 bytes) 
  0.98%    1.02%  <...other 393 warm regions...>
....................................................................................................
100.00%  100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 98.03%   97.76%         C2, level 4  mat_mul.MyBenchmark::loop, version 594 
  0.62%    0.64%   [kernel.kallsyms]  finish_task_switch 
  0.60%    0.66%         C2, level 4  java.lang.String::startsWith, version 610 
  0.06%    0.05%   [kernel.kallsyms]  _raw_spin_unlock_irqrestore 
  0.04%    0.04%   [kernel.kallsyms]  __ll_sc___cmpxchg_case_mb_8 
  0.03%    0.02%   [kernel.kallsyms]  __ll_sc_atomic_sub_return_acquire 
  0.02%    0.26%   [kernel.kallsyms]  __do_softirq 
  0.02%    0.03%   [kernel.kallsyms]  __block_write_begin 
  0.02%    0.02%   [kernel.kallsyms]  vfs_write 
  0.02%    0.01%   [kernel.kallsyms]  __audit_syscall_exit 
  0.02%    0.02%   [kernel.kallsyms]  pipe_write 
  0.02%    0.00%   [kernel.kallsyms]  _raw_spin_lock 
  0.02%            [kernel.kallsyms]  jbd2_journal_stop 
  0.02%    0.01%   [kernel.kallsyms]  clear_bit 
  0.02%            [kernel.kallsyms]  __copy_from_user 
  0.02%            [kernel.kallsyms]  __audit_syscall_entry 
  0.02%    0.02%   [kernel.kallsyms]  el0_svc_naked 
  0.01%            [kernel.kallsyms]  ext4_mark_inode_dirty 
  0.01%    0.01%   [kernel.kallsyms]  __find_get_block 
  0.01%    0.04%   [kernel.kallsyms]  __ll_sc_atomic_add_return_release 
  0.36%    0.28%  <...other 77 warm methods...>
....................................................................................................
100.00%   99.86%  <totals>

....[Distribution by Source]........................................................................
 98.63%   98.43%         C2, level 4
  1.35%    1.56%   [kernel.kallsyms]
  0.02%    0.01%         interpreter
....................................................................................................
100.00%  100.00%  <totals>



# JMH version: 1.19
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.151-1.b12.el7_4.aarch64/jre/bin/java
# VM options: -XX:+UnlockDiagnosticVMOptions -XX:CompileCommand=print,MyBenchmark
# Warmup: 3 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: mat_mul.MyBenchmark.loop
# Parameters: (N_str = 1024)

# Run progress: 40.00% complete, ETA 00:09:39
# Fork: 1 of 2
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 52.376 s/op
# Warmup Iteration   2: 52.244 s/op
# Warmup Iteration   3: 52.085 s/op
Iteration   1: 52.080 s/op
Iteration   2: 52.080 s/op
Iteration   3: 52.082 s/op
Iteration   4: 52.081 s/op
Iteration   5: 52.080 s/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 45.00% complete, ETA 00:17:30
# Fork: 2 of 2
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 52.524 s/op
# Warmup Iteration   2: 52.402 s/op
# Warmup Iteration   3: 52.260 s/op
Iteration   1: 52.261 s/op
Iteration   2: 52.168 s/op
Iteration   3: 52.258 s/op
Iteration   4: 52.257 s/op
Iteration   5: 52.257 s/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "mat_mul.MyBenchmark.loop":
  52.161 ?(99.9%) 0.133 s/op [Average]
  (min, avg, max) = (52.080, 52.161, 52.261), stdev = 0.088
  CI (99.9%): [52.027, 52.294] (assumes normal distribution)

Secondary result "mat_mul.MyBenchmark.loop:?asm":
PrintAssembly processed: 197069 total address lines.
Perf output processed (skipped 176.125 seconds):
 Column 1: cycles (260892 events)
 Column 2: instructions (257002 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
C2, level 4, mat_mul.MyBenchmark::loop, version 601 (296 bytes) 

                                                                  ; - mat_mul.MyBenchmark::loop@153 (line 48)
                                                                  ;   {optimized virtual_call}
                    0x000003ff9c58090c: ldp	x29, x30, [sp,#64]
                    0x000003ff9c580910: add	sp, sp, #0x50
                    0x000003ff9c580914: adrp	x8, 0x000003ffad2b0000
                                                                  ;   {poll_return}
                    0x000003ff9c580918: ldr	wzr, [x8]       ;   {poll_return}
                    0x000003ff9c58091c: ret
                    0x000003ff9c580920: add	w4, w4, #0x1    ;*iadd
                                                                  ; - mat_mul.MyBenchmark::loop@128 (line 40)
  0.00%             0x000003ff9c580924: add	x10, x6, x20
  0.00%             0x000003ff9c580928: str	w17, [x10,#16]  ;*iastore
                                                                  ; - mat_mul.MyBenchmark::loop@121 (line 45)
  0.02%    0.03%    0x000003ff9c58092c: str	w4, [x1,#20]    ;*putfield j
                                                                  ; - mat_mul.MyBenchmark::loop@129 (line 40)
                    0x000003ff9c580930: cmp	w4, w16
                    0x000003ff9c580934: b.ge	0x000003ff9c580a78  ;*aload_0
                                                                  ; - mat_mul.MyBenchmark::loop@32 (line 41)
  0.00%    0.00%    0x000003ff9c580938: str	wzr, [x1,#28]   ;*putfield s
                                                                  ; - mat_mul.MyBenchmark::loop@34 (line 41)
  0.00%    0.00%    0x000003ff9c58093c: str	wzr, [x1,#24]   ;*putfield k
                                                                  ; - mat_mul.MyBenchmark::loop@39 (line 42)
  0.00%    0.00%    0x000003ff9c580940: ldr	w11, [x19,#12]  ; implicit exception: dispatches to 0x000003ff9c580b00
  0.00%    0.00%    0x000003ff9c580944: ldr	w10, [x15,#16]  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop@71 (line 43)
  0.04%    0.01%    0x000003ff9c580948: cmp	w4, w11
                    0x000003ff9c58094c: b.cs	0x000003ff9c580ab8
  0.00%    0.00%    0x000003ff9c580950: sbfiz	x20, x4, #2, #32  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop@85 (line 43)
  0.00%    0.00%    0x000003ff9c580954: add	x11, x19, x20
  0.00%    0.01%    0x000003ff9c580958: ldr	w12, [x11,#16]
  0.04%    0.02%    0x000003ff9c58095c: mul	w17, w12, w10   ;*imul
                                                                  ; - mat_mul.MyBenchmark::loop@86 (line 43)
  0.00%    0.00%    0x000003ff9c580960: str	w0, [x1,#24]    ;*putfield k
                                                                  ; - mat_mul.MyBenchmark::loop@98 (line 42)
  0.00%    0.01%    0x000003ff9c580964: str	w17, [x1,#28]   ;*putfield s
                                                                  ; - mat_mul.MyBenchmark::loop@88 (line 43)
                    0x000003ff9c580968: cmp	w5, #0x1
                    0x000003ff9c58096c: b.le	0x000003ff9c580ac4
  0.00%    0.00%    0x000003ff9c580970: orr	w7, wzr, #0x1
                    0x000003ff9c580974: nop
  0.00%    0.01%    0x000003ff9c580978: nop
                    0x000003ff9c58097c: nop                       ;*aload_0
                                                                  ; - mat_mul.MyBenchmark::loop@53 (line 43)
  0.53%    0.89%    0x000003ff9c580980: sbfiz	x10, x7, #2, #32
  0.52%    1.04%    0x000003ff9c580984: add	x11, x14, x10
                    0x000003ff9c580988: sbfiz	x22, x7, #2, #32
  0.51%    0.73%    0x000003ff9c58098c: ldr	w11, [x11,#16]
  0.04%    0.04%    0x000003ff9c580990: add	x12, x14, x22
  0.51%    0.40%    0x000003ff9c580994: lsl	x25, x11, #3
  0.00%    0.00%    0x000003ff9c580998: ldr	w12, [x12,#20]
  2.37%    1.51%    0x000003ff9c58099c: ldr	w11, [x25,#12]  ; implicit exception: dispatches to 0x000003ff9c580b00
 19.79%   18.94%    0x000003ff9c5809a0: add	x10, x15, x10
  0.54%    1.81%    0x000003ff9c5809a4: add	x26, x25, x20
                    0x000003ff9c5809a8: lsl	x24, x12, #3    ;*aaload
                                                                  ; - mat_mul.MyBenchmark::loop@80 (line 43)
  1.56%    7.18%    0x000003ff9c5809ac: ldr	w10, [x10,#16]  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop@71 (line 43)
  0.00%    0.00%    0x000003ff9c5809b0: cmp	w4, w11
                    0x000003ff9c5809b4: b.cs	0x000003ff9c580a50  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop@85 (line 43)
  1.08%    4.59%    0x000003ff9c5809b8: ldr	w12, [x26,#16]
 19.42%   13.69%    0x000003ff9c5809bc: add	w11, w7, #0x1
  2.08%    4.43%    0x000003ff9c5809c0: madd	w17, w12, w10, w17  ;*iadd
                                                                  ; - mat_mul.MyBenchmark::loop@87 (line 43)
  0.53%    1.01%    0x000003ff9c5809c4: str	w11, [x1,#24]   ;*putfield k
                                                                  ; - mat_mul.MyBenchmark::loop@98 (line 42)
  1.07%    3.49%    0x000003ff9c5809c8: str	w17, [x1,#28]   ;*putfield s
                                                                  ; - mat_mul.MyBenchmark::loop@88 (line 43)
  1.11%    2.65%    0x000003ff9c5809cc: ldr	w11, [x24,#12]  ; implicit exception: dispatches to 0x000003ff9c580b00
 19.24%    9.97%    0x000003ff9c5809d0: add	x10, x15, x22
  0.51%    0.35%    0x000003ff9c5809d4: add	x12, x24, x20
  1.58%    3.76%    0x000003ff9c5809d8: ldr	w10, [x10,#20]  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop@71 (line 43)
  1.29%    0.79%    0x000003ff9c5809dc: cmp	w4, w11
                    0x000003ff9c5809e0: b.cs	0x000003ff9c580a54  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop@85 (line 43)
  1.10%    2.35%    0x000003ff9c5809e4: ldr	w12, [x12,#16]
 21.55%   13.46%    0x000003ff9c5809e8: madd	w17, w12, w10, w17  ;*iadd
                                                                  ; - mat_mul.MyBenchmark::loop@87 (line 43)
  0.52%    0.88%    0x000003ff9c5809ec: add	w7, w7, #0x2    ;*iadd
                                                                  ; - mat_mul.MyBenchmark::loop@97 (line 42)
  1.03%    3.27%    0x000003ff9c5809f0: str	w17, [x1,#28]   ;*putfield s
                                                                  ; - mat_mul.MyBenchmark::loop@88 (line 43)
  1.04%    2.07%    0x000003ff9c5809f4: str	w7, [x1,#24]    ;*putfield k
                                                                  ; - mat_mul.MyBenchmark::loop@98 (line 42)
                    0x000003ff9c5809f8: cmp	w7, w5
                    0x000003ff9c5809fc: b.lt	0x000003ff9c580980  ;*if_icmpge
                                                                  ; - mat_mul.MyBenchmark::loop@50 (line 42)
  0.01%    0.01%    0x000003ff9c580a00: cmp	w7, w16
                    0x000003ff9c580a04: b.ge	0x000003ff9c580920  ;*aload_0
                                                                  ; - mat_mul.MyBenchmark::loop@53 (line 43)
                    0x000003ff9c580a08: sbfiz	x11, x7, #2, #32
  0.00%             0x000003ff9c580a0c: add	x10, x14, x11
  0.00%             0x000003ff9c580a10: ldr	w10, [x10,#16]
                    0x000003ff9c580a14: lsl	x12, x10, #3    ;*aaload
                                                                  ; - mat_mul.MyBenchmark::loop@80 (line 43)
  0.00%    0.00%    0x000003ff9c580a18: ldr	w10, [x12,#12]  ; implicit exception: dispatches to 0x000003ff9c580b00
  0.05%    0.08%    0x000003ff9c580a1c: add	x11, x15, x11
  0.00%             0x000003ff9c580a20: add	x22, x12, x20
  0.00%             0x000003ff9c580a24: ldr	w11, [x11,#16]  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop@71 (line 43)
                    0x000003ff9c580a28: cmp	w4, w10
                    0x000003ff9c580a2c: b.cs	0x000003ff9c580acc  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop@85 (line 43)
  0.00%             0x000003ff9c580a30: ldr	w12, [x22,#16]
  0.04%    0.05%    0x000003ff9c580a34: madd	w17, w12, w11, w17  ;*iadd
                                                                  ; - mat_mul.MyBenchmark::loop@87 (line 43)
  0.00%    0.00%    0x000003ff9c580a38: add	w7, w7, #0x1    ;*iadd
                                                                  ; - mat_mul.MyBenchmark::loop@97 (line 42)
  0.00%             0x000003ff9c580a3c: str	w17, [x1,#28]   ;*putfield s
                                                                  ; - mat_mul.MyBenchmark::loop@88 (line 43)
  0.00%             0x000003ff9c580a40: str	w7, [x1,#24]    ;*putfield k
                                                                  ; - mat_mul.MyBenchmark::loop@98 (line 42)
                    0x000003ff9c580a44: cmp	w7, w16
                    0x000003ff9c580a48: b.lt	0x000003ff9c580a08  ;*if_icmpge
                                                                  ; - mat_mul.MyBenchmark::loop@50 (line 42)
  0.00%             0x000003ff9c580a4c: b	0x000003ff9c580920
                    0x000003ff9c580a50: mov	x24, x25
                    0x000003ff9c580a54: str	x24, [sp,#8]
                    0x000003ff9c580a58: str	w10, [sp,#4]
                    0x000003ff9c580a5c: str	w17, [sp]
                    0x000003ff9c580a60: str	x1, [sp,#32]
                    0x000003ff9c580a64: str	x23, [sp,#24]
                    0x000003ff9c580a68: str	w4, [sp,#40]
                    0x000003ff9c580a6c: mov	w1, #0xffffffe4            	// #-28
                    0x000003ff9c580a70: bl	0x000003ff9c0b15c0  ; OopMap{[8]=Oop [24]=Oop [32]=Oop off=628}
....................................................................................................
 99.79%   99.53%  <total for region 1>

....[Hottest Regions]...............................................................................
 99.79%   99.53%         C2, level 4  mat_mul.MyBenchmark::loop, version 601 (296 bytes) 
  0.04%    0.04%   [kernel.kallsyms]  finish_task_switch (28 bytes) 
  0.01%    0.01%   [kernel.kallsyms]  _raw_spin_unlock_irqrestore (4 bytes) 
  0.00%    0.00%   [kernel.kallsyms]  __ll_sc_atomic_add_return_release (76 bytes) 
  0.00%    0.00%         C2, level 4  java.lang.String::startsWith, version 617 (52 bytes) 
  0.00%    0.00%   [kernel.kallsyms]  clear_bit (24 bytes) 
  0.00%    0.00%         C2, level 4  java.lang.String::startsWith, version 617 (0 bytes) 
  0.00%    0.00%         C2, level 4  java.lang.String::startsWith, version 617 (56 bytes) 
  0.00%    0.00%   [kernel.kallsyms]  __ll_sc_atomic_sub_return_acquire (48 bytes) 
  0.00%    0.00%   [kernel.kallsyms]  __ll_sc_atomic_add (36 bytes) 
  0.00%    0.00%         C2, level 4  java.lang.String::startsWith, version 617 (20 bytes) 
  0.00%    0.00%   [kernel.kallsyms]  rw_verify_area (52 bytes) 
  0.00%    0.00%         C2, level 4  java.lang.String::startsWith, version 617 (16 bytes) 
  0.00%    0.00%         C2, level 4  java.lang.String::startsWith, version 617 (44 bytes) 
  0.00%    0.03%   [kernel.kallsyms]  run_timer_softirq (0 bytes) 
  0.00%            [kernel.kallsyms]  __audit_syscall_entry (52 bytes) 
  0.00%    0.00%   [kernel.kallsyms]  __fget_light (44 bytes) 
  0.00%    0.00%   [kernel.kallsyms]  __ll_sc_atomic64_sub_return (4 bytes) 
  0.00%    0.00%   [kernel.kallsyms]  __ll_sc___cmpxchg_case_mb_8 (0 bytes) 
  0.00%    0.00%         C2, level 4  java.lang.String::startsWith, version 617 (16 bytes) 
  0.13%    0.36%  <...other 404 warm regions...>
....................................................................................................
100.00%  100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 99.79%   99.53%         C2, level 4  mat_mul.MyBenchmark::loop, version 601 
  0.09%    0.09%         C2, level 4  java.lang.String::startsWith, version 617 
  0.04%    0.04%   [kernel.kallsyms]  finish_task_switch 
  0.01%    0.01%   [kernel.kallsyms]  _raw_spin_unlock_irqrestore 
  0.00%    0.00%   [kernel.kallsyms]  __ll_sc_atomic_add_return_release 
  0.00%    0.00%   [kernel.kallsyms]  clear_bit 
  0.00%    0.00%   [kernel.kallsyms]  __ll_sc_atomic_sub_return_acquire 
  0.00%            [kernel.kallsyms]  __audit_syscall_entry 
  0.00%    0.00%   [kernel.kallsyms]  __ll_sc_atomic_add 
  0.00%    0.00%   [kernel.kallsyms]  __audit_syscall_exit 
  0.00%    0.00%   [kernel.kallsyms]  __block_write_begin 
  0.00%    0.00%   [kernel.kallsyms]  rw_verify_area 
  0.00%            [kernel.kallsyms]  syscall_trace_enter 
  0.00%    0.00%   [kernel.kallsyms]  copy_page_from_iter 
  0.00%    0.00%   [kernel.kallsyms]  __ll_sc___cmpxchg_case_mb_8 
  0.00%    0.04%   [kernel.kallsyms]  run_timer_softirq 
  0.00%    0.00%   [kernel.kallsyms]  __ll_sc_atomic64_sub_return 
  0.00%    0.00%   [kernel.kallsyms]  __fget_light 
  0.00%    0.00%   [kernel.kallsyms]  __vfs_write 
  0.00%            [kernel.kallsyms]  map_id_up 
  0.04%    0.03%  <...other 72 warm methods...>
....................................................................................................
100.00%   99.76%  <totals>

....[Distribution by Source]........................................................................
 99.88%   99.62%         C2, level 4
  0.12%    0.38%   [kernel.kallsyms]
  0.00%    0.00%              [vdso]
  0.00%    0.00%         interpreter
  0.00%    0.00%         C1, level 3
....................................................................................................
100.00%  100.00%  <totals>

PrintAssembly processed: 197468 total address lines.
Perf output processed (skipped 176.810 seconds):
 Column 1: cycles (260052 events)
 Column 2: instructions (257529 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
C2, level 4, mat_mul.MyBenchmark::loop, version 601 (296 bytes) 

                                                                  ; - mat_mul.MyBenchmark::loop@153 (line 48)
                                                                  ;   {optimized virtual_call}
                    0x000003ff805854cc: ldp	x29, x30, [sp,#64]
                    0x000003ff805854d0: add	sp, sp, #0x50
                    0x000003ff805854d4: adrp	x8, 0x000003ff8e5b0000
                                                                  ;   {poll_return}
                    0x000003ff805854d8: ldr	wzr, [x8]       ;   {poll_return}
                    0x000003ff805854dc: ret
                    0x000003ff805854e0: add	w4, w4, #0x1    ;*iadd
                                                                  ; - mat_mul.MyBenchmark::loop@128 (line 40)
  0.00%    0.00%    0x000003ff805854e4: add	x10, x6, x20
  0.00%             0x000003ff805854e8: str	w17, [x10,#16]  ;*iastore
                                                                  ; - mat_mul.MyBenchmark::loop@121 (line 45)
  0.02%    0.03%    0x000003ff805854ec: str	w4, [x1,#20]    ;*putfield j
                                                                  ; - mat_mul.MyBenchmark::loop@129 (line 40)
                    0x000003ff805854f0: cmp	w4, w16
                    0x000003ff805854f4: b.ge	0x000003ff80585638  ;*aload_0
                                                                  ; - mat_mul.MyBenchmark::loop@32 (line 41)
           0.00%    0x000003ff805854f8: str	wzr, [x1,#28]   ;*putfield s
                                                                  ; - mat_mul.MyBenchmark::loop@34 (line 41)
  0.00%    0.00%    0x000003ff805854fc: str	wzr, [x1,#24]   ;*putfield k
                                                                  ; - mat_mul.MyBenchmark::loop@39 (line 42)
  0.00%    0.00%    0x000003ff80585500: ldr	w11, [x19,#12]  ; implicit exception: dispatches to 0x000003ff805856c0
  0.00%    0.00%    0x000003ff80585504: ldr	w10, [x15,#16]  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop@71 (line 43)
  0.03%    0.01%    0x000003ff80585508: cmp	w4, w11
                    0x000003ff8058550c: b.cs	0x000003ff80585678
  0.00%    0.00%    0x000003ff80585510: sbfiz	x20, x4, #2, #32  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop@85 (line 43)
  0.00%    0.00%    0x000003ff80585514: add	x11, x19, x20
  0.00%    0.01%    0x000003ff80585518: ldr	w12, [x11,#16]
  0.05%    0.02%    0x000003ff8058551c: mul	w17, w12, w10   ;*imul
                                                                  ; - mat_mul.MyBenchmark::loop@86 (line 43)
  0.00%    0.00%    0x000003ff80585520: str	w0, [x1,#24]    ;*putfield k
                                                                  ; - mat_mul.MyBenchmark::loop@98 (line 42)
  0.00%    0.00%    0x000003ff80585524: str	w17, [x1,#28]   ;*putfield s
                                                                  ; - mat_mul.MyBenchmark::loop@88 (line 43)
                    0x000003ff80585528: cmp	w5, #0x1
                    0x000003ff8058552c: b.le	0x000003ff80585684
  0.00%    0.00%    0x000003ff80585530: orr	w7, wzr, #0x1
                    0x000003ff80585534: nop
  0.00%    0.00%    0x000003ff80585538: nop
                    0x000003ff8058553c: nop                       ;*aload_0
                                                                  ; - mat_mul.MyBenchmark::loop@53 (line 43)
  0.54%    1.32%    0x000003ff80585540: sbfiz	x10, x7, #2, #32
  0.53%    0.80%    0x000003ff80585544: add	x11, x14, x10
                    0x000003ff80585548: sbfiz	x22, x7, #2, #32
  0.51%    0.80%    0x000003ff8058554c: ldr	w11, [x11,#16]
  0.04%    0.04%    0x000003ff80585550: add	x12, x14, x22
  0.51%    1.01%    0x000003ff80585554: lsl	x25, x11, #3
  0.00%    0.00%    0x000003ff80585558: ldr	w12, [x12,#20]
  2.35%    1.73%    0x000003ff8058555c: ldr	w11, [x25,#12]  ; implicit exception: dispatches to 0x000003ff805856c0
 19.94%   17.05%    0x000003ff80585560: add	x10, x15, x10
  0.51%    0.95%    0x000003ff80585564: add	x26, x25, x20
                    0x000003ff80585568: lsl	x24, x12, #3    ;*aaload
                                                                  ; - mat_mul.MyBenchmark::loop@80 (line 43)
  1.64%    5.27%    0x000003ff8058556c: ldr	w10, [x10,#16]  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop@71 (line 43)
  0.00%    0.00%    0x000003ff80585570: cmp	w4, w11
                    0x000003ff80585574: b.cs	0x000003ff80585610  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop@85 (line 43)
  1.01%    5.13%    0x000003ff80585578: ldr	w12, [x26,#16]
 19.37%   18.01%    0x000003ff8058557c: add	w11, w7, #0x1
  2.09%    2.81%    0x000003ff80585580: madd	w17, w12, w10, w17  ;*iadd
                                                                  ; - mat_mul.MyBenchmark::loop@87 (line 43)
  0.55%    1.42%    0x000003ff80585584: str	w11, [x1,#24]   ;*putfield k
                                                                  ; - mat_mul.MyBenchmark::loop@98 (line 42)
  1.02%    1.98%    0x000003ff80585588: str	w17, [x1,#28]   ;*putfield s
                                                                  ; - mat_mul.MyBenchmark::loop@88 (line 43)
  1.06%    3.43%    0x000003ff8058558c: ldr	w11, [x24,#12]  ; implicit exception: dispatches to 0x000003ff805856c0
 19.38%   11.33%    0x000003ff80585590: add	x10, x15, x22
  0.54%    0.94%    0x000003ff80585594: add	x12, x24, x20
  1.52%    1.66%    0x000003ff80585598: ldr	w10, [x10,#20]  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop@71 (line 43)
  1.25%    0.89%    0x000003ff8058559c: cmp	w4, w11
                    0x000003ff805855a0: b.cs	0x000003ff80585614  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop@85 (line 43)
  1.10%    3.02%    0x000003ff805855a4: ldr	w12, [x12,#16]
 21.48%   13.62%    0x000003ff805855a8: madd	w17, w12, w10, w17  ;*iadd
                                                                  ; - mat_mul.MyBenchmark::loop@87 (line 43)
  0.51%    1.10%    0x000003ff805855ac: add	w7, w7, #0x2    ;*iadd
                                                                  ; - mat_mul.MyBenchmark::loop@97 (line 42)
  1.04%    1.65%    0x000003ff805855b0: str	w17, [x1,#28]   ;*putfield s
                                                                  ; - mat_mul.MyBenchmark::loop@88 (line 43)
  1.04%    3.32%    0x000003ff805855b4: str	w7, [x1,#24]    ;*putfield k
                                                                  ; - mat_mul.MyBenchmark::loop@98 (line 42)
                    0x000003ff805855b8: cmp	w7, w5
                    0x000003ff805855bc: b.lt	0x000003ff80585540  ;*if_icmpge
                                                                  ; - mat_mul.MyBenchmark::loop@50 (line 42)
  0.00%    0.01%    0x000003ff805855c0: cmp	w7, w16
                    0x000003ff805855c4: b.ge	0x000003ff805854e0  ;*aload_0
                                                                  ; - mat_mul.MyBenchmark::loop@53 (line 43)
                    0x000003ff805855c8: sbfiz	x11, x7, #2, #32
  0.00%    0.00%    0x000003ff805855cc: add	x10, x14, x11
  0.00%    0.00%    0x000003ff805855d0: ldr	w10, [x10,#16]
                    0x000003ff805855d4: lsl	x12, x10, #3    ;*aaload
                                                                  ; - mat_mul.MyBenchmark::loop@80 (line 43)
  0.00%    0.00%    0x000003ff805855d8: ldr	w10, [x12,#12]  ; implicit exception: dispatches to 0x000003ff805856c0
  0.06%    0.08%    0x000003ff805855dc: add	x11, x15, x11
  0.00%             0x000003ff805855e0: add	x22, x12, x20
  0.00%             0x000003ff805855e4: ldr	w11, [x11,#16]  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop@71 (line 43)
                    0x000003ff805855e8: cmp	w4, w10
                    0x000003ff805855ec: b.cs	0x000003ff8058568c  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop@85 (line 43)
  0.00%    0.00%    0x000003ff805855f0: ldr	w12, [x22,#16]
  0.04%    0.04%    0x000003ff805855f4: madd	w17, w12, w11, w17  ;*iadd
                                                                  ; - mat_mul.MyBenchmark::loop@87 (line 43)
                    0x000003ff805855f8: add	w7, w7, #0x1    ;*iadd
                                                                  ; - mat_mul.MyBenchmark::loop@97 (line 42)
  0.00%             0x000003ff805855fc: str	w17, [x1,#28]   ;*putfield s
                                                                  ; - mat_mul.MyBenchmark::loop@88 (line 43)
  0.00%             0x000003ff80585600: str	w7, [x1,#24]    ;*putfield k
                                                                  ; - mat_mul.MyBenchmark::loop@98 (line 42)
                    0x000003ff80585604: cmp	w7, w16
                    0x000003ff80585608: b.lt	0x000003ff805855c8  ;*if_icmpge
                                                                  ; - mat_mul.MyBenchmark::loop@50 (line 42)
  0.00%             0x000003ff8058560c: b	0x000003ff805854e0
                    0x000003ff80585610: mov	x24, x25
                    0x000003ff80585614: str	x24, [sp,#8]
                    0x000003ff80585618: str	w10, [sp,#4]
                    0x000003ff8058561c: str	w17, [sp]
                    0x000003ff80585620: str	x1, [sp,#32]
                    0x000003ff80585624: str	x23, [sp,#24]
                    0x000003ff80585628: str	w4, [sp,#40]
                    0x000003ff8058562c: mov	w1, #0xffffffe4            	// #-28
                    0x000003ff80585630: bl	0x000003ff800b15c0  ; OopMap{[8]=Oop [24]=Oop [32]=Oop off=628}
....................................................................................................
 99.75%   99.50%  <total for region 1>

....[Hottest Regions]...............................................................................
 99.75%   99.50%         C2, level 4  mat_mul.MyBenchmark::loop, version 601 (296 bytes) 
  0.03%    0.03%   [kernel.kallsyms]  finish_task_switch (12 bytes) 
  0.01%    0.22%   [kernel.kallsyms]  __do_softirq (0 bytes) 
  0.00%    0.01%   [kernel.kallsyms]  __ll_sc___cmpxchg_case_mb_8 (60 bytes) 
  0.00%    0.01%   [kernel.kallsyms]  clear_bit (24 bytes) 
  0.00%    0.01%   [kernel.kallsyms]  _raw_spin_unlock_irqrestore (0 bytes) 
  0.00%    0.00%        libc-2.17.so  _IO_fwrite (16 bytes) 
  0.00%    0.00%   [kernel.kallsyms]  el0_svc_naked (0 bytes) 
  0.00%    0.00%   [kernel.kallsyms]  __ll_sc_atomic_sub_return_acquire (16 bytes) 
  0.00%    0.04%   [kernel.kallsyms]  run_timer_softirq (0 bytes) 
  0.00%    0.00%   [kernel.kallsyms]  __block_write_begin (128 bytes) 
  0.00%    0.01%   [kernel.kallsyms]  __ll_sc_atomic_add_return_release (36 bytes) 
  0.00%    0.00%        libc-2.17.so  _IO_default_xsputn (36 bytes) 
  0.00%    0.00%  libpthread-2.17.so  __pthread_disable_asynccancel (12 bytes) 
  0.00%    0.00%   [kernel.kallsyms]  __ll_sc_atomic64_sub_return (36 bytes) 
  0.00%            [kernel.kallsyms]  copy_page_from_iter (48 bytes) 
  0.00%    0.00%   [kernel.kallsyms]  _raw_spin_lock (80 bytes) 
  0.00%    0.00%  libpthread-2.17.so  __pthread_enable_asynccancel (12 bytes) 
  0.00%    0.00%   [kernel.kallsyms]  vfs_write (148 bytes) 
  0.00%    0.00%   [kernel.kallsyms]  __fget (84 bytes) 
  0.16%    0.16%  <...other 461 warm regions...>
....................................................................................................
100.00%  100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 99.75%   99.50%         C2, level 4  mat_mul.MyBenchmark::loop, version 601 
  0.03%    0.03%           libjvm.so  JVM_DoPrivileged 
  0.03%    0.03%   [kernel.kallsyms]  finish_task_switch 
  0.01%    0.23%   [kernel.kallsyms]  __do_softirq 
  0.01%    0.01%        libc-2.17.so  vfprintf 
  0.01%    0.01%           libjvm.so  [unknown] 
  0.01%    0.01%        libc-2.17.so  _IO_fwrite 
  0.00%    0.01%   [kernel.kallsyms]  __ll_sc___cmpxchg_case_mb_8 
  0.00%    0.01%   [kernel.kallsyms]  clear_bit 
  0.00%    0.00%   [kernel.kallsyms]  ext4_do_update_inode 
  0.00%    0.01%   [kernel.kallsyms]  __ll_sc_atomic_sub_return_acquire 
  0.00%    0.01%   [kernel.kallsyms]  _raw_spin_unlock_irqrestore 
  0.00%    0.00%        libc-2.17.so  _IO_default_xsputn 
  0.00%    0.00%   [kernel.kallsyms]  el0_svc_naked 
  0.00%    0.00%   [kernel.kallsyms]  vfs_write 
  0.00%    0.00%   [kernel.kallsyms]  __audit_syscall_exit 
  0.00%    0.01%   [kernel.kallsyms]  pipe_write 
  0.00%    0.00%  libpthread-2.17.so  __pthread_disable_asynccancel 
  0.00%    0.00%  libpthread-2.17.so  __pthread_enable_asynccancel 
  0.00%    0.00%   [kernel.kallsyms]  change_protection 
  0.11%    0.11%  <...other 147 warm methods...>
....................................................................................................
100.00%   99.97%  <totals>

....[Distribution by Source]........................................................................
 99.75%   99.50%         C2, level 4
  0.15%    0.41%   [kernel.kallsyms]
  0.04%    0.04%           libjvm.so
  0.03%    0.03%        libc-2.17.so
  0.01%    0.01%    hsdis-aarch64.so
  0.01%    0.01%  libpthread-2.17.so
  0.00%    0.00%         interpreter
  0.00%    0.00%              [vdso]
  0.00%    0.00%         C1, level 3
....................................................................................................
100.00%  100.00%  <totals>



# JMH version: 1.19
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.151-1.b12.el7_4.aarch64/jre/bin/java
# VM options: -XX:+UnlockDiagnosticVMOptions -XX:CompileCommand=print,MyBenchmark
# Warmup: 3 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: mat_mul.MyBenchmark.loop_ikj
# Parameters: (N_str = 64)

# Run progress: 50.00% complete, ETA 00:22:15
# Fork: 1 of 2
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 0.001 s/op
# Warmup Iteration   2: 0.001 s/op
# Warmup Iteration   3: 0.001 s/op
Iteration   1: 0.001 s/op
Iteration   2: 0.001 s/op
Iteration   3: 0.001 s/op
Iteration   4: 0.001 s/op
Iteration   5: 0.001 s/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 55.00% complete, ETA 00:18:41
# Fork: 2 of 2
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 0.001 s/op
# Warmup Iteration   2: 0.001 s/op
# Warmup Iteration   3: 0.001 s/op
Iteration   1: 0.001 s/op
Iteration   2: 0.001 s/op
Iteration   3: 0.001 s/op
Iteration   4: 0.001 s/op
Iteration   5: 0.001 s/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "mat_mul.MyBenchmark.loop_ikj":
  0.001 ?(99.9%) 0.001 s/op [Average]
  (min, avg, max) = (0.001, 0.001, 0.001), stdev = 0.001
  CI (99.9%): [0.001, 0.001] (assumes normal distribution)

Secondary result "mat_mul.MyBenchmark.loop_ikj:?asm":
PrintAssembly processed: 195442 total address lines.
Perf output processed (skipped 22.349 seconds):
 Column 1: cycles (5468 events)
 Column 2: instructions (5435 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
C2, level 4, mat_mul.MyBenchmark::loop_ikj, version 579 (404 bytes) 

                    0x000003ff98573c74: str	wzr, [x1,#24]   ;*putfield k
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@18 (line 54)
                    0x000003ff98573c78: cmp	w18, #0x0
                    0x000003ff98573c7c: b.le	0x000003ff98573e2c  ;*if_icmpge
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@29 (line 54)
                    0x000003ff98573c80: sbfiz	x7, x4, #2, #32  ;*aaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@74 (line 57)
                    0x000003ff98573c84: mov	w5, wzr
                    0x000003ff98573c88: b	0x000003ff98573cdc      ;*aload_0
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
  0.73%    1.07%    0x000003ff98573c8c: sbfiz	x10, x14, #2, #32  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
  0.71%    0.53%    0x000003ff98573c90: add	x13, x20, x10   ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@80 (line 57)
                    0x000003ff98573c94: add	x12, x19, x10
  0.64%    0.28%    0x000003ff98573c98: ldr	w10, [x13,#16]
  0.57%    0.39%    0x000003ff98573c9c: ldr	w12, [x12,#16]  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
  1.24%    1.14%    0x000003ff98573ca0: madd	w10, w12, w11, w10
  1.39%    1.12%    0x000003ff98573ca4: str	w10, [x13,#16]  ;*iastore
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@101 (line 57)
                    0x000003ff98573ca8: add	w14, w14, #0x1  ;*iadd
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@108 (line 56)
  0.90%    0.75%    0x000003ff98573cac: str	w14, [x1,#20]   ;*putfield j
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@109 (line 56)
                    0x000003ff98573cb0: cmp	w14, w18
                    0x000003ff98573cb4: b.lt	0x000003ff98573c8c  ;*aload_0
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
  0.20%    0.06%    0x000003ff98573cb8: mov	w18, w17        ;*getfield N
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@26 (line 54)
                    0x000003ff98573cbc: add	w5, w5, #0x1    ;*iadd
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@121 (line 54)
  0.29%    0.15%    0x000003ff98573cc0: str	w5, [x1,#24]    ; OopMap{r15=Oop c_rarg1=Oop off=196}
                                                                  ;*goto
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@125 (line 54)
  0.13%    0.09%    0x000003ff98573cc4: ldr	wzr, [x3]       ;*goto
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@125 (line 54)
                                                                  ;   {poll}
  0.35%    0.17%    0x000003ff98573cc8: ldr	w10, [x1,#12]   ;*getfield N
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@26 (line 54)
                    0x000003ff98573ccc: cmp	w5, w18
                    0x000003ff98573cd0: b.ge	0x000003ff98573c54
  0.13%    0.15%    0x000003ff98573cd4: mov	w18, w17
                    0x000003ff98573cd8: mov	w17, w10        ;*getfield N
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@60 (line 56)
  0.26%    0.20%    0x000003ff98573cdc: ldr	w10, [x1,#40]
  0.02%             0x000003ff98573ce0: lsl	x19, x10, #3    ;*getfield shm
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@34 (line 55)
  0.55%    0.79%    0x000003ff98573ce4: ldr	w10, [x19,#12]  ; implicit exception: dispatches to 0x000003ff98573eb8
                    0x000003ff98573ce8: add	x11, x19, x7
  0.20%    0.24%    0x000003ff98573cec: cmp	w4, w10
                    0x000003ff98573cf0: b.cs	0x000003ff98573e5c
  0.15%    0.20%    0x000003ff98573cf4: ldr	w12, [x11,#16]
  0.15%    0.42%    0x000003ff98573cf8: lsl	x11, x12, #3    ;*aaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@41 (line 55)
                    0x000003ff98573cfc: sbfiz	x13, x5, #2, #32  ;*aaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@93 (line 57)
  0.93%    0.74%    0x000003ff98573d00: ldr	w12, [x11,#12]  ; implicit exception: dispatches to 0x000003ff98573ec8
                    0x000003ff98573d04: add	x14, x11, x13
  0.20%    0.31%    0x000003ff98573d08: cmp	w5, w12
                    0x000003ff98573d0c: b.cs	0x000003ff98573e78
  0.26%    0.28%    0x000003ff98573d10: ldr	w11, [x14,#16]  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@46 (line 55)
  0.69%    0.26%    0x000003ff98573d14: str	w11, [x1,#32]   ;*putfield aik
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@47 (line 55)
  0.42%    0.35%    0x000003ff98573d18: str	wzr, [x1,#20]   ;*putfield j
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@52 (line 56)
                    0x000003ff98573d1c: cmp	w18, #0x0
                    0x000003ff98573d20: b.le	0x000003ff98573cbc  ;*if_icmpge
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@63 (line 56)
  0.29%    0.09%    0x000003ff98573d24: ldr	w12, [x1,#44]
  0.22%    0.07%    0x000003ff98573d28: lsl	x12, x12, #3    ;*getfield res
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@67 (line 57)
  0.51%    0.24%    0x000003ff98573d2c: ldr	w16, [x12,#12]  ; implicit exception: dispatches to 0x000003ff98573e94
                    0x000003ff98573d30: add	x12, x12, x7
  0.24%    0.24%    0x000003ff98573d34: cmp	w4, w16
                    0x000003ff98573d38: b.cs	0x000003ff98573e94  ;*aload_0
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
  0.20%    0.28%    0x000003ff98573d3c: ldr	w12, [x12,#16]
  0.26%    0.20%    0x000003ff98573d40: lsl	x20, x12, #3    ;*aaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@74 (line 57)
  0.71%    0.90%    0x000003ff98573d44: ldr	w12, [x20,#12]  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@80 (line 57)
                                                                  ; implicit exception: dispatches to 0x000003ff98573e94
           0.02%    0x000003ff98573d48: add	x13, x19, x13
  0.38%    0.28%    0x000003ff98573d4c: add	x14, x6, w18, sxtw
                    0x000003ff98573d50: sxtw	x16, w12
  0.27%    0.18%    0x000003ff98573d54: cbz	w12, 0x000003ff98573e94
  0.27%    0.13%    0x000003ff98573d58: cmp	x14, x16
                    0x000003ff98573d5c: b.cs	0x000003ff98573e94
  0.26%    0.24%    0x000003ff98573d60: cmp	w5, w10
                    0x000003ff98573d64: b.cs	0x000003ff98573e94  ;*aload_0
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
  0.51%    0.35%    0x000003ff98573d68: ldr	w12, [x13,#16]
                    0x000003ff98573d6c: lsl	x19, x12, #3    ;*aaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@93 (line 57)
  0.73%    0.40%    0x000003ff98573d70: ldr	w12, [x19,#12]  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
                                                                  ; implicit exception: dispatches to 0x000003ff98573e94
                    0x000003ff98573d74: mov	w10, w20
  0.40%    0.18%    0x000003ff98573d78: ubfx	w13, w10, #2, #2
  0.27%    0.09%    0x000003ff98573d7c: sub	w10, w0, w13
                    0x000003ff98573d80: sxtw	x13, w12
  0.22%    0.04%    0x000003ff98573d84: cbz	w12, 0x000003ff98573e94
  0.15%    0.13%    0x000003ff98573d88: cmp	x14, x13
                    0x000003ff98573d8c: b.cs	0x000003ff98573e94
                    0x000003ff98573d90: and	w12, w10, #0x3
  0.22%    0.17%    0x000003ff98573d94: sub	w13, w18, #0x3
  0.26%    0.29%    0x000003ff98573d98: cmp	w18, w13
  0.18%    0.17%    0x000003ff98573d9c: csel	w10, w2, w13, lt
                    0x000003ff98573da0: add	w13, w12, #0x1
  0.27%    0.15%    0x000003ff98573da4: cmp	w13, w18
  0.31%    0.40%    0x000003ff98573da8: csel	w12, w13, w18, lt
                    0x000003ff98573dac: mov	w14, wzr        ;*aload_0
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
  0.57%    0.50%    0x000003ff98573db0: sbfiz	x13, x14, #2, #32  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
  0.42%    0.42%    0x000003ff98573db4: add	x21, x20, x13   ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@80 (line 57)
                    0x000003ff98573db8: add	x16, x19, x13
  0.71%    0.77%    0x000003ff98573dbc: ldr	w13, [x21,#16]
  0.46%    0.55%    0x000003ff98573dc0: ldr	w16, [x16,#16]  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
  1.17%    1.34%    0x000003ff98573dc4: madd	w16, w16, w11, w13
  1.24%    1.32%    0x000003ff98573dc8: str	w16, [x21,#16]  ;*iastore
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@101 (line 57)
                    0x000003ff98573dcc: add	w14, w14, #0x1  ;*iadd
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@108 (line 56)
  0.77%    0.63%    0x000003ff98573dd0: str	w14, [x1,#20]   ;*putfield j
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@109 (line 56)
                    0x000003ff98573dd4: cmp	w14, w12
                    0x000003ff98573dd8: b.lt	0x000003ff98573db0  ;*if_icmpge
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@63 (line 56)
  0.29%    0.07%    0x000003ff98573ddc: cmp	w14, w10
                    0x000003ff98573de0: b.ge	0x000003ff98573e20
  0.16%    0.07%    0x000003ff98573de4: dup	v16.4s, w11
                    0x000003ff98573de8: nop
  0.20%    0.17%    0x000003ff98573dec: nop                       ;*aload_0
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
  4.48%    5.15%    0x000003ff98573df0: sbfiz	x12, x14, #2, #32  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
  3.57%    4.20%    0x000003ff98573df4: add	x13, x19, x12
  3.75%    3.35%    0x000003ff98573df8: ldr	q17, [x13,#16]
  0.15%    0.11%    0x000003ff98573dfc: add	x12, x20, x12   ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@80 (line 57)
 10.52%    8.45%    0x000003ff98573e00: mul	v17.4s, v17.4s, v16.4s
  6.27%    7.91%    0x000003ff98573e04: ldr	q18, [x12,#16]
 13.24%   16.43%    0x000003ff98573e08: add	v17.4s, v17.4s, v18.4s
 15.78%   17.74%    0x000003ff98573e0c: str	q17, [x12,#16]  ;*iastore
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@101 (line 57)
                    0x000003ff98573e10: add	w14, w14, #0x4  ;*iadd
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@108 (line 56)
  6.46%    5.54%    0x000003ff98573e14: str	w14, [x1,#20]   ;*putfield j
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@109 (line 56)
                    0x000003ff98573e18: cmp	w14, w10
                    0x000003ff98573e1c: b.lt	0x000003ff98573df0  ;*if_icmpge
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@63 (line 56)
  1.41%    0.98%    0x000003ff98573e20: cmp	w14, w18
                    0x000003ff98573e24: b.lt	0x000003ff98573c8c
                    0x000003ff98573e28: b	0x000003ff98573cb8
                    0x000003ff98573e2c: ldr	w10, [x1,#12]   ;*getfield N
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@26 (line 54)
                    0x000003ff98573e30: b	0x000003ff98573c58      ;*if_icmpge
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@13 (line 53)
                    0x000003ff98573e34: ldr	w11, [x1,#44]
                    0x000003ff98573e38: lsl	x2, x11, #3     ;*getfield res
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@143 (line 61)
....................................................................................................
 89.87%   90.62%  <total for region 1>

....[Hottest Regions]...............................................................................
 89.87%   90.62%         C2, level 4  mat_mul.MyBenchmark::loop_ikj, version 579 (404 bytes) 
  2.10%    2.12%   [kernel.kallsyms]  finish_task_switch (28 bytes) 
  0.44%    0.15%   [kernel.kallsyms]  _raw_spin_unlock_irqrestore (0 bytes) 
  0.16%    0.26%   [kernel.kallsyms]  __ll_sc_atomic_sub_return_acquire (48 bytes) 
  0.15%    0.24%  libpthread-2.17.so  __pthread_disable_asynccancel (44 bytes) 
  0.13%    0.15%   [kernel.kallsyms]  __ll_sc_atomic_add_return_release (12 bytes) 
  0.13%    0.24%   [kernel.kallsyms]  __ll_sc___cmpxchg_case_mb_8 (20 bytes) 
  0.13%    0.07%  libpthread-2.17.so  __pthread_enable_asynccancel (24 bytes) 
  0.11%    0.13%        libc-2.17.so  _IO_fwrite (4 bytes) 
  0.09%            [kernel.kallsyms]  copy_page_from_iter (36 bytes) 
  0.09%    0.17%           libjvm.so  JVM_MonitorNotifyAll (92 bytes) 
  0.07%    0.09%   [kernel.kallsyms]  el0_svc_naked (0 bytes) 
  0.07%    0.04%   [kernel.kallsyms]  syscall_trace_enter (48 bytes) 
  0.07%    0.04%   [kernel.kallsyms]  current_kernel_time64 (36 bytes) 
  0.07%    0.11%   [kernel.kallsyms]  sys_write (92 bytes) 
  0.07%    0.02%   [kernel.kallsyms]  __ll_sc_atomic_add (20 bytes) 
  0.07%    0.17%   [kernel.kallsyms]  __ll_sc_atomic64_sub_return (20 bytes) 
  0.07%            [kernel.kallsyms]  copy_page_from_iter (44 bytes) 
  0.07%    0.06%        libc-2.17.so  vfprintf (80 bytes) 
  0.07%    0.06%        libc-2.17.so  strlen (68 bytes) 
  5.93%    5.21%  <...other 375 warm regions...>
....................................................................................................
 99.98%   99.91%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 89.92%   90.65%         C2, level 4  mat_mul.MyBenchmark::loop_ikj, version 579 
  2.10%    2.12%   [kernel.kallsyms]  finish_task_switch 
  0.86%    1.16%           libjvm.so  JVM_MonitorNotifyAll 
  0.44%    0.15%   [kernel.kallsyms]  _raw_spin_unlock_irqrestore 
  0.40%    0.57%        libc-2.17.so  vfprintf 
  0.27%    0.17%           libjvm.so  [unknown] 
  0.22%    0.15%        libc-2.17.so  _IO_fwrite 
  0.20%    0.07%   [kernel.kallsyms]  copy_page_from_iter 
  0.16%    0.24%  libpthread-2.17.so  __pthread_disable_asynccancel 
  0.16%    0.26%   [kernel.kallsyms]  __ll_sc_atomic_sub_return_acquire 
  0.15%    0.07%  libpthread-2.17.so  __pthread_enable_asynccancel 
  0.13%    0.06%   [kernel.kallsyms]  syscall_trace_exit 
  0.13%    0.17%   [kernel.kallsyms]  __block_write_begin 
  0.13%    0.15%   [kernel.kallsyms]  __ll_sc_atomic_add_return_release 
  0.13%    0.04%   [kernel.kallsyms]  __vfs_write 
  0.13%    0.24%   [kernel.kallsyms]  __ll_sc___cmpxchg_case_mb_8 
  0.13%    0.17%   [kernel.kallsyms]  pipe_write 
  0.11%    0.11%   [kernel.kallsyms]  sys_write 
  0.07%    0.04%   [kernel.kallsyms]  syscall_trace_enter 
  0.07%    0.06%   [kernel.kallsyms]  __audit_syscall_entry 
  4.06%    2.19%  <...other 132 warm methods...>
....................................................................................................
 99.98%   98.80%  <totals>

....[Distribution by Source]........................................................................
 89.94%   90.67%         C2, level 4
  6.49%    5.43%   [kernel.kallsyms]
  1.39%    1.58%        libc-2.17.so
  1.13%    1.40%           libjvm.so
  0.55%    0.42%    hsdis-aarch64.so
  0.35%    0.35%  libpthread-2.17.so
  0.13%    0.04%         interpreter
....................................................................................................
 99.98%   99.91%  <totals>

PrintAssembly processed: 196462 total address lines.
Perf output processed (skipped 22.072 seconds):
 Column 1: cycles (5397 events)
 Column 2: instructions (5384 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
C2, level 4, mat_mul.MyBenchmark::loop_ikj, version 580 (460 bytes) 

                    0x000003ff90575974: b.le	0x000003ff90575b74  ;*if_icmpge
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@13 (line 53)
                    0x000003ff90575978: adrp	x3, 0x000003ff9dec0000
                                                                  ;   {poll}
                    0x000003ff9057597c: orr	w2, wzr, #0x80000000
                    0x000003ff90575980: movn	w0, #0x0, lsl #16
                    0x000003ff90575984: mov	x6, #0xffffffffffffffff    	// #-1
                    0x000003ff90575988: mov	w17, w18
                    0x000003ff9057598c: mov	w4, wzr
                    0x000003ff90575990: b	0x000003ff905759b4
  0.02%    0.02%    0x000003ff90575994: mov	w18, w17        ;*getfield N
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@10 (line 53)
                    0x000003ff90575998: add	w4, w4, #0x1    ;*iadd
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@134 (line 53)
           0.02%    0x000003ff9057599c: str	w4, [x1,#16]    ; OopMap{r15=Oop c_rarg1=Oop off=96}
                                                                  ;*goto
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@138 (line 53)
  0.02%             0x000003ff905759a0: ldr	wzr, [x3]       ;*goto
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@138 (line 53)
                                                                  ;   {poll}
                    0x000003ff905759a4: cmp	w4, w18
                    0x000003ff905759a8: b.ge	0x000003ff90575b74
                    0x000003ff905759ac: mov	w18, w17
                    0x000003ff905759b0: mov	w17, w10        ;*aload_0
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@16 (line 54)
           0.02%    0x000003ff905759b4: str	wzr, [x1,#24]   ;*putfield k
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@18 (line 54)
                    0x000003ff905759b8: cmp	w18, #0x0
                    0x000003ff905759bc: b.le	0x000003ff90575b6c  ;*if_icmpge
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@29 (line 54)
                    0x000003ff905759c0: sbfiz	x7, x4, #2, #32  ;*aaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@74 (line 57)
                    0x000003ff905759c4: mov	w5, wzr
                    0x000003ff905759c8: b	0x000003ff90575a1c      ;*aload_0
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
  0.91%    1.08%    0x000003ff905759cc: sbfiz	x10, x14, #2, #32  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
  0.35%    0.46%    0x000003ff905759d0: add	x13, x20, x10   ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@80 (line 57)
                    0x000003ff905759d4: add	x12, x19, x10
  0.59%    0.41%    0x000003ff905759d8: ldr	w10, [x13,#16]
  0.43%    0.39%    0x000003ff905759dc: ldr	w12, [x12,#16]  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
  1.20%    1.19%    0x000003ff905759e0: madd	w10, w12, w11, w10
  1.43%    0.82%    0x000003ff905759e4: str	w10, [x13,#16]  ;*iastore
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@101 (line 57)
                    0x000003ff905759e8: add	w14, w14, #0x1  ;*iadd
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@108 (line 56)
  0.93%    0.61%    0x000003ff905759ec: str	w14, [x1,#20]   ;*putfield j
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@109 (line 56)
                    0x000003ff905759f0: cmp	w14, w18
                    0x000003ff905759f4: b.lt	0x000003ff905759cc  ;*aload_0
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
  0.48%    0.58%    0x000003ff905759f8: mov	w18, w17        ;*getfield N
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@26 (line 54)
                    0x000003ff905759fc: add	w5, w5, #0x1    ;*iadd
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@121 (line 54)
  0.15%    0.19%    0x000003ff90575a00: str	w5, [x1,#24]    ; OopMap{r15=Oop c_rarg1=Oop off=196}
                                                                  ;*goto
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@125 (line 54)
  0.13%    0.15%    0x000003ff90575a04: ldr	wzr, [x3]       ;*goto
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@125 (line 54)
                                                                  ;   {poll}
  0.26%    0.11%    0x000003ff90575a08: ldr	w10, [x1,#12]   ;*getfield N
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@26 (line 54)
                    0x000003ff90575a0c: cmp	w5, w18
                    0x000003ff90575a10: b.ge	0x000003ff90575994
  0.26%    0.06%    0x000003ff90575a14: mov	w18, w17
                    0x000003ff90575a18: mov	w17, w10        ;*getfield N
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@60 (line 56)
  0.24%    0.04%    0x000003ff90575a1c: ldr	w10, [x1,#40]
  0.02%             0x000003ff90575a20: lsl	x19, x10, #3    ;*getfield shm
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@34 (line 55)
  0.89%    0.78%    0x000003ff90575a24: ldr	w10, [x19,#12]  ; implicit exception: dispatches to 0x000003ff90575bf8
                    0x000003ff90575a28: add	x11, x19, x7
  0.26%    0.20%    0x000003ff90575a2c: cmp	w4, w10
                    0x000003ff90575a30: b.cs	0x000003ff90575b9c
  0.20%    0.22%    0x000003ff90575a34: ldr	w12, [x11,#16]
  0.20%    0.26%    0x000003ff90575a38: lsl	x11, x12, #3    ;*aaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@41 (line 55)
                    0x000003ff90575a3c: sbfiz	x13, x5, #2, #32  ;*aaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@93 (line 57)
  0.67%    0.78%    0x000003ff90575a40: ldr	w12, [x11,#12]  ; implicit exception: dispatches to 0x000003ff90575c08
                    0x000003ff90575a44: add	x14, x11, x13
  0.15%    0.13%    0x000003ff90575a48: cmp	w5, w12
                    0x000003ff90575a4c: b.cs	0x000003ff90575bb8
  0.20%    0.24%    0x000003ff90575a50: ldr	w11, [x14,#16]  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@46 (line 55)
  0.50%    0.52%    0x000003ff90575a54: str	w11, [x1,#32]   ;*putfield aik
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@47 (line 55)
  0.41%    0.26%    0x000003ff90575a58: str	wzr, [x1,#20]   ;*putfield j
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@52 (line 56)
                    0x000003ff90575a5c: cmp	w18, #0x0
                    0x000003ff90575a60: b.le	0x000003ff905759fc  ;*if_icmpge
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@63 (line 56)
  0.26%    0.11%    0x000003ff90575a64: ldr	w12, [x1,#44]
  0.19%    0.04%    0x000003ff90575a68: lsl	x12, x12, #3    ;*getfield res
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@67 (line 57)
  0.63%    0.20%    0x000003ff90575a6c: ldr	w16, [x12,#12]  ; implicit exception: dispatches to 0x000003ff90575bd4
                    0x000003ff90575a70: add	x12, x12, x7
  0.26%    0.19%    0x000003ff90575a74: cmp	w4, w16
                    0x000003ff90575a78: b.cs	0x000003ff90575bd4  ;*aload_0
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
  0.26%    0.33%    0x000003ff90575a7c: ldr	w12, [x12,#16]
  0.24%    0.24%    0x000003ff90575a80: lsl	x20, x12, #3    ;*aaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@74 (line 57)
  0.80%    0.71%    0x000003ff90575a84: ldr	w12, [x20,#12]  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@80 (line 57)
                                                                  ; implicit exception: dispatches to 0x000003ff90575bd4
  0.02%    0.02%    0x000003ff90575a88: add	x13, x19, x13
  0.19%    0.30%    0x000003ff90575a8c: add	x14, x6, w18, sxtw
                    0x000003ff90575a90: sxtw	x16, w12
  0.15%    0.22%    0x000003ff90575a94: cbz	w12, 0x000003ff90575bd4
  0.15%    0.26%    0x000003ff90575a98: cmp	x14, x16
                    0x000003ff90575a9c: b.cs	0x000003ff90575bd4
  0.20%    0.26%    0x000003ff90575aa0: cmp	w5, w10
                    0x000003ff90575aa4: b.cs	0x000003ff90575bd4  ;*aload_0
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
  0.46%    0.46%    0x000003ff90575aa8: ldr	w12, [x13,#16]
                    0x000003ff90575aac: lsl	x19, x12, #3    ;*aaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@93 (line 57)
  0.69%    0.45%    0x000003ff90575ab0: ldr	w12, [x19,#12]  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
                                                                  ; implicit exception: dispatches to 0x000003ff90575bd4
  0.02%             0x000003ff90575ab4: mov	w10, w20
  0.30%    0.17%    0x000003ff90575ab8: ubfx	w13, w10, #2, #2
  0.19%    0.04%    0x000003ff90575abc: sub	w10, w0, w13
                    0x000003ff90575ac0: sxtw	x13, w12
  0.31%    0.02%    0x000003ff90575ac4: cbz	w12, 0x000003ff90575bd4
  0.24%    0.15%    0x000003ff90575ac8: cmp	x14, x13
                    0x000003ff90575acc: b.cs	0x000003ff90575bd4
                    0x000003ff90575ad0: and	w12, w10, #0x3
  0.30%    0.28%    0x000003ff90575ad4: sub	w13, w18, #0x3
  0.20%    0.20%    0x000003ff90575ad8: cmp	w18, w13
  0.22%    0.15%    0x000003ff90575adc: csel	w10, w2, w13, lt
                    0x000003ff90575ae0: add	w13, w12, #0x1
  0.24%    0.11%    0x000003ff90575ae4: cmp	w13, w18
  0.24%    0.20%    0x000003ff90575ae8: csel	w12, w13, w18, lt
                    0x000003ff90575aec: mov	w14, wzr        ;*aload_0
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
  0.44%    0.46%    0x000003ff90575af0: sbfiz	x13, x14, #2, #32  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
  0.48%    0.50%    0x000003ff90575af4: add	x21, x20, x13   ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@80 (line 57)
                    0x000003ff90575af8: add	x16, x19, x13
  0.76%    0.76%    0x000003ff90575afc: ldr	w13, [x21,#16]
  0.41%    0.37%    0x000003ff90575b00: ldr	w16, [x16,#16]  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
  1.37%    1.56%    0x000003ff90575b04: madd	w16, w16, w11, w13
  1.50%    1.19%    0x000003ff90575b08: str	w16, [x21,#16]  ;*iastore
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@101 (line 57)
                    0x000003ff90575b0c: add	w14, w14, #0x1  ;*iadd
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@108 (line 56)
  0.93%    0.69%    0x000003ff90575b10: str	w14, [x1,#20]   ;*putfield j
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@109 (line 56)
                    0x000003ff90575b14: cmp	w14, w12
                    0x000003ff90575b18: b.lt	0x000003ff90575af0  ;*if_icmpge
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@63 (line 56)
  0.13%    0.30%    0x000003ff90575b1c: cmp	w14, w10
                    0x000003ff90575b20: b.ge	0x000003ff90575b60
  0.20%    0.11%    0x000003ff90575b24: dup	v16.4s, w11
                    0x000003ff90575b28: nop
  0.22%    0.13%    0x000003ff90575b2c: nop                       ;*aload_0
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
  4.48%    4.25%    0x000003ff90575b30: sbfiz	x12, x14, #2, #32  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
  3.72%    4.18%    0x000003ff90575b34: add	x13, x19, x12
  3.76%    3.73%    0x000003ff90575b38: ldr	q17, [x13,#16]
  0.04%    0.09%    0x000003ff90575b3c: add	x12, x20, x12   ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@80 (line 57)
 10.12%    8.23%    0x000003ff90575b40: mul	v17.4s, v17.4s, v16.4s
  6.54%    7.47%    0x000003ff90575b44: ldr	q18, [x12,#16]
 13.69%   16.49%    0x000003ff90575b48: add	v17.4s, v17.4s, v18.4s
 16.23%   18.93%    0x000003ff90575b4c: str	q17, [x12,#16]  ;*iastore
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@101 (line 57)
                    0x000003ff90575b50: add	w14, w14, #0x4  ;*iadd
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@108 (line 56)
  6.28%    6.09%    0x000003ff90575b54: str	w14, [x1,#20]   ;*putfield j
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@109 (line 56)
                    0x000003ff90575b58: cmp	w14, w10
                    0x000003ff90575b5c: b.lt	0x000003ff90575b30  ;*if_icmpge
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@63 (line 56)
  1.70%    0.80%    0x000003ff90575b60: cmp	w14, w18
                    0x000003ff90575b64: b.lt	0x000003ff905759cc
                    0x000003ff90575b68: b	0x000003ff905759f8
                    0x000003ff90575b6c: ldr	w10, [x1,#12]   ;*getfield N
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@26 (line 54)
                    0x000003ff90575b70: b	0x000003ff90575998      ;*if_icmpge
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@13 (line 53)
                    0x000003ff90575b74: ldr	w11, [x1,#44]
                    0x000003ff90575b78: lsl	x2, x11, #3     ;*getfield res
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@143 (line 61)
....................................................................................................
 90.66%   90.97%  <total for region 1>

....[Hottest Regions]...............................................................................
 90.66%   90.97%         C2, level 4  mat_mul.MyBenchmark::loop_ikj, version 580 (460 bytes) 
  1.95%    1.95%   [kernel.kallsyms]  finish_task_switch (0 bytes) 
  0.35%    0.13%   [kernel.kallsyms]  _raw_spin_unlock_irqrestore (0 bytes) 
  0.19%    0.13%   [kernel.kallsyms]  clear_bit (4 bytes) 
  0.19%    0.15%           libjvm.so  [unknown] (132 bytes) 
  0.15%    0.24%   [kernel.kallsyms]  __ll_sc_atomic_sub_return_acquire (8 bytes) 
  0.13%    0.07%        libc-2.17.so  _IO_fwrite (88 bytes) 
  0.13%    0.02%        libc-2.17.so  __strchrnul (56 bytes) 
  0.13%    0.28%  libpthread-2.17.so  __pthread_disable_asynccancel (32 bytes) 
  0.11%    0.09%   [kernel.kallsyms]  __ll_sc_atomic_add_return_release (0 bytes) 
  0.09%            [kernel.kallsyms]  percpu_down_read_trylock (44 bytes) 
  0.09%    0.20%   [kernel.kallsyms]  __ll_sc___cmpxchg_case_mb_8 (0 bytes) 
  0.09%    0.06%           libjvm.so  [unknown] (28 bytes) 
  0.07%    0.02%   [kernel.kallsyms]  percpu_up_read (48 bytes) 
  0.07%    0.02%   [kernel.kallsyms]  sys_write (20 bytes) 
  0.07%    0.11%   [kernel.kallsyms]  __block_write_begin (64 bytes) 
  0.07%            [kernel.kallsyms]  __ll_sc_atomic_sub_return (0 bytes) 
  0.07%    0.19%   [kernel.kallsyms]  __ll_sc_atomic64_sub_return (20 bytes) 
  0.07%    0.09%           libjvm.so  [unknown] (20 bytes) 
  0.07%                    libjvm.so  [unknown] (8 bytes) 
  5.21%    5.27%  <...other 357 warm regions...>
....................................................................................................
 99.98%  100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 90.66%   90.97%         C2, level 4  mat_mul.MyBenchmark::loop_ikj, version 580 
  1.95%    1.95%   [kernel.kallsyms]  finish_task_switch 
  1.56%    1.36%           libjvm.so  [unknown] 
  0.35%    0.13%   [kernel.kallsyms]  _raw_spin_unlock_irqrestore 
  0.28%    0.32%        libc-2.17.so  vfprintf 
  0.19%    0.13%   [kernel.kallsyms]  clear_bit 
  0.17%    0.22%        libc-2.17.so  _IO_fwrite 
  0.15%    0.28%  libpthread-2.17.so  __pthread_disable_asynccancel 
  0.15%    0.24%   [kernel.kallsyms]  __ll_sc_atomic_sub_return_acquire 
  0.13%    0.06%        libc-2.17.so  __strchrnul 
  0.11%    0.09%   [kernel.kallsyms]  __ll_sc_atomic_add_return_release 
  0.11%    0.02%   [kernel.kallsyms]  __audit_syscall_exit 
  0.09%            [kernel.kallsyms]  percpu_down_read_trylock 
  0.09%    0.02%        libc-2.17.so  strchr 
  0.09%    0.13%   [kernel.kallsyms]  __block_write_begin 
  0.09%    0.07%   [kernel.kallsyms]  sys_write 
  0.09%    0.04%   [kernel.kallsyms]  __vfs_write 
  0.09%    0.20%   [kernel.kallsyms]  __ll_sc___cmpxchg_case_mb_8 
  0.09%    0.04%   [kernel.kallsyms]  start_this_handle 
  0.07%    0.02%  libpthread-2.17.so  __pthread_enable_asynccancel 
  3.46%    2.54%  <...other 122 warm methods...>
....................................................................................................
 99.98%   98.83%  <totals>

....[Distribution by Source]........................................................................
 90.68%   90.97%         C2, level 4
  5.73%    5.20%   [kernel.kallsyms]
  1.59%    1.37%           libjvm.so
  1.07%    1.30%        libc-2.17.so
  0.52%    0.63%    hsdis-aarch64.so
  0.26%    0.43%  libpthread-2.17.so
  0.07%    0.07%         interpreter
  0.04%    0.02%         C1, level 3
  0.02%                       [vdso]
....................................................................................................
 99.98%  100.00%  <totals>



# JMH version: 1.19
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.151-1.b12.el7_4.aarch64/jre/bin/java
# VM options: -XX:+UnlockDiagnosticVMOptions -XX:CompileCommand=print,MyBenchmark
# Warmup: 3 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: mat_mul.MyBenchmark.loop_ikj
# Parameters: (N_str = 128)

# Run progress: 60.00% complete, ETA 00:15:36
# Fork: 1 of 2
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 0.010 s/op
# Warmup Iteration   2: 0.007 s/op
# Warmup Iteration   3: 0.007 s/op
Iteration   1: 0.007 s/op
Iteration   2: 0.007 s/op
Iteration   3: 0.007 s/op
Iteration   4: 0.007 s/op
Iteration   5: 0.007 s/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 65.00% complete, ETA 00:12:55
# Fork: 2 of 2
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 0.009 s/op
# Warmup Iteration   2: 0.007 s/op
# Warmup Iteration   3: 0.007 s/op
Iteration   1: 0.007 s/op
Iteration   2: 0.007 s/op
Iteration   3: 0.007 s/op
Iteration   4: 0.007 s/op
Iteration   5: 0.007 s/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "mat_mul.MyBenchmark.loop_ikj":
  0.007 ?(99.9%) 0.001 s/op [Average]
  (min, avg, max) = (0.007, 0.007, 0.007), stdev = 0.001
  CI (99.9%): [0.007, 0.007] (assumes normal distribution)

Secondary result "mat_mul.MyBenchmark.loop_ikj:?asm":
PrintAssembly processed: 195444 total address lines.
Perf output processed (skipped 22.253 seconds):
 Column 1: cycles (5367 events)
 Column 2: instructions (5370 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
C2, level 4, mat_mul.MyBenchmark::loop_ikj, version 578 (404 bytes) 

                    0x000003ff7c574eb4: str	wzr, [x1,#24]   ;*putfield k
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@18 (line 54)
                    0x000003ff7c574eb8: cmp	w18, #0x0
                    0x000003ff7c574ebc: b.le	0x000003ff7c57506c  ;*if_icmpge
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@29 (line 54)
                    0x000003ff7c574ec0: sbfiz	x7, x4, #2, #32  ;*aaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@74 (line 57)
                    0x000003ff7c574ec4: mov	w5, wzr
                    0x000003ff7c574ec8: b	0x000003ff7c574f1c      ;*aload_0
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
  0.47%    0.56%    0x000003ff7c574ecc: sbfiz	x10, x14, #2, #32  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
  0.24%    0.20%    0x000003ff7c574ed0: add	x13, x20, x10   ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@80 (line 57)
                    0x000003ff7c574ed4: add	x12, x19, x10
  0.15%    0.24%    0x000003ff7c574ed8: ldr	w10, [x13,#16]
  0.11%    0.15%    0x000003ff7c574edc: ldr	w12, [x12,#16]  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
  1.01%    0.97%    0x000003ff7c574ee0: madd	w10, w12, w11, w10
  0.47%    0.65%    0x000003ff7c574ee4: str	w10, [x13,#16]  ;*iastore
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@101 (line 57)
                    0x000003ff7c574ee8: add	w14, w14, #0x1  ;*iadd
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@108 (line 56)
  0.30%    0.47%    0x000003ff7c574eec: str	w14, [x1,#20]   ;*putfield j
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@109 (line 56)
                    0x000003ff7c574ef0: cmp	w14, w18
                    0x000003ff7c574ef4: b.lt	0x000003ff7c574ecc  ;*aload_0
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
  0.11%    0.09%    0x000003ff7c574ef8: mov	w18, w17        ;*getfield N
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@26 (line 54)
                    0x000003ff7c574efc: add	w5, w5, #0x1    ;*iadd
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@121 (line 54)
  0.11%    0.02%    0x000003ff7c574f00: str	w5, [x1,#24]    ; OopMap{r15=Oop c_rarg1=Oop off=196}
                                                                  ;*goto
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@125 (line 54)
  0.09%    0.07%    0x000003ff7c574f04: ldr	wzr, [x3]       ;*goto
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@125 (line 54)
                                                                  ;   {poll}
  0.04%    0.15%    0x000003ff7c574f08: ldr	w10, [x1,#12]   ;*getfield N
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@26 (line 54)
                    0x000003ff7c574f0c: cmp	w5, w18
                    0x000003ff7c574f10: b.ge	0x000003ff7c574e94
  0.15%    0.06%    0x000003ff7c574f14: mov	w18, w17
                    0x000003ff7c574f18: mov	w17, w10        ;*getfield N
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@60 (line 56)
  0.07%    0.09%    0x000003ff7c574f1c: ldr	w10, [x1,#40]
                    0x000003ff7c574f20: lsl	x19, x10, #3    ;*getfield shm
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@34 (line 55)
  0.35%    0.56%    0x000003ff7c574f24: ldr	w10, [x19,#12]  ; implicit exception: dispatches to 0x000003ff7c5750f8
                    0x000003ff7c574f28: add	x11, x19, x7
  0.13%    0.11%    0x000003ff7c574f2c: cmp	w4, w10
                    0x000003ff7c574f30: b.cs	0x000003ff7c57509c
  0.13%    0.20%    0x000003ff7c574f34: ldr	w12, [x11,#16]
  0.07%    0.17%    0x000003ff7c574f38: lsl	x11, x12, #3    ;*aaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@41 (line 55)
                    0x000003ff7c574f3c: sbfiz	x13, x5, #2, #32  ;*aaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@93 (line 57)
  0.30%    0.22%    0x000003ff7c574f40: ldr	w12, [x11,#12]  ; implicit exception: dispatches to 0x000003ff7c575108
                    0x000003ff7c574f44: add	x14, x11, x13
  0.09%    0.06%    0x000003ff7c574f48: cmp	w5, w12
                    0x000003ff7c574f4c: b.cs	0x000003ff7c5750b8
  0.09%    0.06%    0x000003ff7c574f50: ldr	w11, [x14,#16]  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@46 (line 55)
  0.47%    0.28%    0x000003ff7c574f54: str	w11, [x1,#32]   ;*putfield aik
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@47 (line 55)
  0.26%    0.13%    0x000003ff7c574f58: str	wzr, [x1,#20]   ;*putfield j
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@52 (line 56)
                    0x000003ff7c574f5c: cmp	w18, #0x0
                    0x000003ff7c574f60: b.le	0x000003ff7c574efc  ;*if_icmpge
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@63 (line 56)
  0.09%    0.11%    0x000003ff7c574f64: ldr	w12, [x1,#44]
  0.09%    0.11%    0x000003ff7c574f68: lsl	x12, x12, #3    ;*getfield res
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@67 (line 57)
  0.15%    0.34%    0x000003ff7c574f6c: ldr	w16, [x12,#12]  ; implicit exception: dispatches to 0x000003ff7c5750d4
                    0x000003ff7c574f70: add	x12, x12, x7
  0.13%    0.13%    0x000003ff7c574f74: cmp	w4, w16
                    0x000003ff7c574f78: b.cs	0x000003ff7c5750d4  ;*aload_0
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
  0.06%    0.09%    0x000003ff7c574f7c: ldr	w12, [x12,#16]
  0.07%    0.17%    0x000003ff7c574f80: lsl	x20, x12, #3    ;*aaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@74 (line 57)
  0.39%    0.34%    0x000003ff7c574f84: ldr	w12, [x20,#12]  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@80 (line 57)
                                                                  ; implicit exception: dispatches to 0x000003ff7c5750d4
                    0x000003ff7c574f88: add	x13, x19, x13
  0.13%    0.11%    0x000003ff7c574f8c: add	x14, x6, w18, sxtw
                    0x000003ff7c574f90: sxtw	x16, w12
  0.07%    0.06%    0x000003ff7c574f94: cbz	w12, 0x000003ff7c5750d4
  0.15%             0x000003ff7c574f98: cmp	x14, x16
                    0x000003ff7c574f9c: b.cs	0x000003ff7c5750d4
  0.04%    0.04%    0x000003ff7c574fa0: cmp	w5, w10
                    0x000003ff7c574fa4: b.cs	0x000003ff7c5750d4  ;*aload_0
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
  0.19%    0.15%    0x000003ff7c574fa8: ldr	w12, [x13,#16]
  0.09%    0.13%    0x000003ff7c574fac: lsl	x19, x12, #3    ;*aaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@93 (line 57)
  0.34%    0.17%    0x000003ff7c574fb0: ldr	w12, [x19,#12]  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
                                                                  ; implicit exception: dispatches to 0x000003ff7c5750d4
  0.56%    0.17%    0x000003ff7c574fb4: mov	w10, w20
  0.09%    0.13%    0x000003ff7c574fb8: ubfx	w13, w10, #2, #2
  0.17%    0.09%    0x000003ff7c574fbc: sub	w10, w0, w13
                    0x000003ff7c574fc0: sxtw	x13, w12
  0.13%    0.09%    0x000003ff7c574fc4: cbz	w12, 0x000003ff7c5750d4
  0.17%    0.19%    0x000003ff7c574fc8: cmp	x14, x13
                    0x000003ff7c574fcc: b.cs	0x000003ff7c5750d4
                    0x000003ff7c574fd0: and	w12, w10, #0x3
  0.11%    0.15%    0x000003ff7c574fd4: sub	w13, w18, #0x3
  0.15%    0.24%    0x000003ff7c574fd8: cmp	w18, w13
  0.07%    0.13%    0x000003ff7c574fdc: csel	w10, w2, w13, lt
                    0x000003ff7c574fe0: add	w13, w12, #0x1
  0.09%    0.06%    0x000003ff7c574fe4: cmp	w13, w18
  0.09%    0.09%    0x000003ff7c574fe8: csel	w12, w13, w18, lt
                    0x000003ff7c574fec: mov	w14, wzr        ;*aload_0
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
  0.19%    0.22%    0x000003ff7c574ff0: sbfiz	x13, x14, #2, #32  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
  0.11%    0.41%    0x000003ff7c574ff4: add	x21, x20, x13   ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@80 (line 57)
                    0x000003ff7c574ff8: add	x16, x19, x13
  0.22%    0.48%    0x000003ff7c574ffc: ldr	w13, [x21,#16]
  0.20%    0.15%    0x000003ff7c575000: ldr	w16, [x16,#16]  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
  0.65%    0.56%    0x000003ff7c575004: madd	w16, w16, w11, w13
  0.67%    0.39%    0x000003ff7c575008: str	w16, [x21,#16]  ;*iastore
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@101 (line 57)
                    0x000003ff7c57500c: add	w14, w14, #0x1  ;*iadd
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@108 (line 56)
  0.47%    0.45%    0x000003ff7c575010: str	w14, [x1,#20]   ;*putfield j
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@109 (line 56)
                    0x000003ff7c575014: cmp	w14, w12
                    0x000003ff7c575018: b.lt	0x000003ff7c574ff0  ;*if_icmpge
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@63 (line 56)
  0.13%    0.11%    0x000003ff7c57501c: cmp	w14, w10
                    0x000003ff7c575020: b.ge	0x000003ff7c575060
  0.09%    0.04%    0x000003ff7c575024: dup	v16.4s, w11
                    0x000003ff7c575028: nop
  0.15%             0x000003ff7c57502c: nop                       ;*aload_0
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
  3.19%    2.91%    0x000003ff7c575030: sbfiz	x12, x14, #2, #32  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
  3.65%    2.91%    0x000003ff7c575034: add	x13, x19, x12
  3.13%    3.50%    0x000003ff7c575038: ldr	q17, [x13,#16]
 14.70%   17.00%    0x000003ff7c57503c: add	x12, x20, x12   ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@80 (line 57)
 10.55%   14.04%    0x000003ff7c575040: mul	v17.4s, v17.4s, v16.4s
  6.54%    7.34%    0x000003ff7c575044: ldr	q18, [x12,#16]
 13.99%   14.02%    0x000003ff7c575048: add	v17.4s, v17.4s, v18.4s
 16.75%   11.88%    0x000003ff7c57504c: str	q17, [x12,#16]  ;*iastore
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@101 (line 57)
                    0x000003ff7c575050: add	w14, w14, #0x4  ;*iadd
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@108 (line 56)
  6.93%    5.74%    0x000003ff7c575054: str	w14, [x1,#20]   ;*putfield j
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@109 (line 56)
                    0x000003ff7c575058: cmp	w14, w10
                    0x000003ff7c57505c: b.lt	0x000003ff7c575030  ;*if_icmpge
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@63 (line 56)
  0.84%    1.06%    0x000003ff7c575060: cmp	w14, w18
                    0x000003ff7c575064: b.lt	0x000003ff7c574ecc
                    0x000003ff7c575068: b	0x000003ff7c574ef8
                    0x000003ff7c57506c: ldr	w10, [x1,#12]   ;*getfield N
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@26 (line 54)
                    0x000003ff7c575070: b	0x000003ff7c574e98      ;*if_icmpge
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@13 (line 53)
                    0x000003ff7c575074: ldr	w11, [x1,#44]
                    0x000003ff7c575078: lsl	x2, x11, #3     ;*getfield res
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@143 (line 61)
....................................................................................................
 92.01%   91.99%  <total for region 1>

....[Hottest Regions]...............................................................................
 92.01%   91.99%         C2, level 4  mat_mul.MyBenchmark::loop_ikj, version 578 (404 bytes) 
  0.93%    0.93%   [kernel.kallsyms]  finish_task_switch (0 bytes) 
  0.28%    0.20%   [kernel.kallsyms]  _raw_spin_unlock_irqrestore (0 bytes) 
  0.20%    0.17%   [kernel.kallsyms]  __ll_sc_atomic_sub_return_acquire (36 bytes) 
  0.19%    0.28%   [kernel.kallsyms]  __ll_sc_atomic_add_return_release (116 bytes) 
  0.17%    0.11%   [kernel.kallsyms]  clear_bit (40 bytes) 
  0.13%    0.13%           libjvm.so  JVM_Clone (64 bytes) 
  0.13%    0.09%        libc-2.17.so  _IO_fwrite (92 bytes) 
  0.13%    0.09%        libc-2.17.so  strlen (132 bytes) 
  0.13%    0.04%        libc-2.17.so  mempcpy (36 bytes) 
  0.11%    0.22%   [kernel.kallsyms]  __ll_sc___cmpxchg_case_mb_8 (12 bytes) 
  0.09%    0.15%   [kernel.kallsyms]  __ll_sc_atomic64_sub_return (16 bytes) 
  0.09%    0.07%           libjvm.so  JVM_Clone (56 bytes) 
  0.09%    0.17%  libpthread-2.17.so  __pthread_enable_asynccancel (20 bytes) 
  0.07%    0.06%   [kernel.kallsyms]  el0_svc_naked (0 bytes) 
  0.07%    0.06%   [kernel.kallsyms]  vfs_write (68 bytes) 
  0.07%            [kernel.kallsyms]  sys_write (52 bytes) 
  0.07%    0.07%   [kernel.kallsyms]  __fget (76 bytes) 
  0.07%    0.02%           libjvm.so  JVM_Clone (20 bytes) 
  0.07%                    libjvm.so  JVM_Clone (48 bytes) 
  4.84%    5.14%  <...other 328 warm regions...>
....................................................................................................
 99.98%  100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 92.01%   92.01%         C2, level 4  mat_mul.MyBenchmark::loop_ikj, version 578 
  1.10%    1.12%           libjvm.so  JVM_Clone 
  0.93%    0.93%   [kernel.kallsyms]  finish_task_switch 
  0.28%    0.20%   [kernel.kallsyms]  _raw_spin_unlock_irqrestore 
  0.28%    0.30%        libc-2.17.so  vfprintf 
  0.20%    0.17%   [kernel.kallsyms]  __ll_sc_atomic_sub_return_acquire 
  0.19%    0.19%        libc-2.17.so  _IO_fwrite 
  0.19%    0.28%   [kernel.kallsyms]  __ll_sc_atomic_add_return_release 
  0.17%    0.11%   [kernel.kallsyms]  clear_bit 
  0.15%    0.15%   [kernel.kallsyms]  vfs_write 
  0.13%    0.15%        libc-2.17.so  strlen 
  0.13%    0.04%        libc-2.17.so  mempcpy 
  0.11%    0.22%   [kernel.kallsyms]  __ll_sc___cmpxchg_case_mb_8 
  0.09%    0.17%  libpthread-2.17.so  __pthread_enable_asynccancel 
  0.09%    0.07%   [kernel.kallsyms]  __fget 
  0.09%    0.15%   [kernel.kallsyms]  __ll_sc_atomic64_sub_return 
  0.09%    0.04%        libc-2.17.so  _IO_fflush 
  0.09%    0.20%        libc-2.17.so  _IO_default_xsputn 
  0.09%                 libc-2.17.so  __strchrnul 
  0.09%    0.39%           libjvm.so  [unknown] 
  3.47%    2.07%  <...other 120 warm methods...>
....................................................................................................
 99.98%   98.96%  <totals>

....[Distribution by Source]........................................................................
 92.01%   92.01%         C2, level 4
  4.60%    4.23%   [kernel.kallsyms]
  1.27%    1.51%           libjvm.so
  1.27%    1.15%        libc-2.17.so
  0.54%    0.47%    hsdis-aarch64.so
  0.17%    0.54%  libpthread-2.17.so
  0.07%    0.09%         interpreter
  0.04%                  C1, level 3
  0.02%                    libzip.so
....................................................................................................
 99.98%  100.00%  <totals>

PrintAssembly processed: 196424 total address lines.
Perf output processed (skipped 22.455 seconds):
 Column 1: cycles (5411 events)
 Column 2: instructions (5408 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
C2, level 4, mat_mul.MyBenchmark::loop_ikj, version 583 (404 bytes) 

                    0x000003ff785783f4: str	wzr, [x1,#24]   ;*putfield k
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@18 (line 54)
                    0x000003ff785783f8: cmp	w18, #0x0
                    0x000003ff785783fc: b.le	0x000003ff785785ac  ;*if_icmpge
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@29 (line 54)
                    0x000003ff78578400: sbfiz	x7, x4, #2, #32  ;*aaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@74 (line 57)
                    0x000003ff78578404: mov	w5, wzr
                    0x000003ff78578408: b	0x000003ff7857845c      ;*aload_0
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
  0.46%    0.30%    0x000003ff7857840c: sbfiz	x10, x14, #2, #32  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
  0.26%    0.11%    0x000003ff78578410: add	x13, x20, x10   ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@80 (line 57)
                    0x000003ff78578414: add	x12, x19, x10
  0.37%    0.24%    0x000003ff78578418: ldr	w10, [x13,#16]
  0.22%    0.22%    0x000003ff7857841c: ldr	w12, [x12,#16]  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
  1.33%    1.22%    0x000003ff78578420: madd	w10, w12, w11, w10
  0.52%    0.44%    0x000003ff78578424: str	w10, [x13,#16]  ;*iastore
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@101 (line 57)
                    0x000003ff78578428: add	w14, w14, #0x1  ;*iadd
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@108 (line 56)
  0.44%    0.37%    0x000003ff7857842c: str	w14, [x1,#20]   ;*putfield j
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@109 (line 56)
                    0x000003ff78578430: cmp	w14, w18
                    0x000003ff78578434: b.lt	0x000003ff7857840c  ;*aload_0
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
  0.13%    0.06%    0x000003ff78578438: mov	w18, w17        ;*getfield N
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@26 (line 54)
                    0x000003ff7857843c: add	w5, w5, #0x1    ;*iadd
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@121 (line 54)
  0.15%    0.07%    0x000003ff78578440: str	w5, [x1,#24]    ; OopMap{r15=Oop c_rarg1=Oop off=196}
                                                                  ;*goto
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@125 (line 54)
  0.09%    0.02%    0x000003ff78578444: ldr	wzr, [x3]       ;*goto
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@125 (line 54)
                                                                  ;   {poll}
  0.15%    0.06%    0x000003ff78578448: ldr	w10, [x1,#12]   ;*getfield N
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@26 (line 54)
                    0x000003ff7857844c: cmp	w5, w18
                    0x000003ff78578450: b.ge	0x000003ff785783d4
  0.13%    0.04%    0x000003ff78578454: mov	w18, w17
                    0x000003ff78578458: mov	w17, w10        ;*getfield N
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@60 (line 56)
  0.06%    0.11%    0x000003ff7857845c: ldr	w10, [x1,#40]
                    0x000003ff78578460: lsl	x19, x10, #3    ;*getfield shm
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@34 (line 55)
  0.44%    0.07%    0x000003ff78578464: ldr	w10, [x19,#12]  ; implicit exception: dispatches to 0x000003ff78578638
                    0x000003ff78578468: add	x11, x19, x7
  0.07%    0.20%    0x000003ff7857846c: cmp	w4, w10
                    0x000003ff78578470: b.cs	0x000003ff785785dc
  0.11%    0.13%    0x000003ff78578474: ldr	w12, [x11,#16]
  0.17%    0.13%    0x000003ff78578478: lsl	x11, x12, #3    ;*aaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@41 (line 55)
                    0x000003ff7857847c: sbfiz	x13, x5, #2, #32  ;*aaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@93 (line 57)
  0.35%    0.55%    0x000003ff78578480: ldr	w12, [x11,#12]  ; implicit exception: dispatches to 0x000003ff78578648
                    0x000003ff78578484: add	x14, x11, x13
  0.06%    0.07%    0x000003ff78578488: cmp	w5, w12
                    0x000003ff7857848c: b.cs	0x000003ff785785f8
  0.11%    0.09%    0x000003ff78578490: ldr	w11, [x14,#16]  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@46 (line 55)
  0.41%    0.30%    0x000003ff78578494: str	w11, [x1,#32]   ;*putfield aik
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@47 (line 55)
  0.28%    0.06%    0x000003ff78578498: str	wzr, [x1,#20]   ;*putfield j
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@52 (line 56)
                    0x000003ff7857849c: cmp	w18, #0x0
                    0x000003ff785784a0: b.le	0x000003ff7857843c  ;*if_icmpge
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@63 (line 56)
  0.18%    0.04%    0x000003ff785784a4: ldr	w12, [x1,#44]
  0.09%    0.04%    0x000003ff785784a8: lsl	x12, x12, #3    ;*getfield res
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@67 (line 57)
  0.22%    0.04%    0x000003ff785784ac: ldr	w16, [x12,#12]  ; implicit exception: dispatches to 0x000003ff78578614
                    0x000003ff785784b0: add	x12, x12, x7
  0.07%    0.06%    0x000003ff785784b4: cmp	w4, w16
                    0x000003ff785784b8: b.cs	0x000003ff78578614  ;*aload_0
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
  0.06%    0.07%    0x000003ff785784bc: ldr	w12, [x12,#16]
  0.13%    0.15%    0x000003ff785784c0: lsl	x20, x12, #3    ;*aaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@74 (line 57)
  0.31%    0.39%    0x000003ff785784c4: ldr	w12, [x20,#12]  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@80 (line 57)
                                                                  ; implicit exception: dispatches to 0x000003ff78578614
                    0x000003ff785784c8: add	x13, x19, x13
  0.09%    0.18%    0x000003ff785784cc: add	x14, x6, w18, sxtw
                    0x000003ff785784d0: sxtw	x16, w12
  0.11%    0.09%    0x000003ff785784d4: cbz	w12, 0x000003ff78578614
  0.07%    0.18%    0x000003ff785784d8: cmp	x14, x16
                    0x000003ff785784dc: b.cs	0x000003ff78578614
  0.15%    0.04%    0x000003ff785784e0: cmp	w5, w10
                    0x000003ff785784e4: b.cs	0x000003ff78578614  ;*aload_0
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
  0.24%    0.17%    0x000003ff785784e8: ldr	w12, [x13,#16]
  0.06%    0.17%    0x000003ff785784ec: lsl	x19, x12, #3    ;*aaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@93 (line 57)
  0.26%    0.06%    0x000003ff785784f0: ldr	w12, [x19,#12]  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
                                                                  ; implicit exception: dispatches to 0x000003ff78578614
  0.50%    0.09%    0x000003ff785784f4: mov	w10, w20
  0.09%    0.02%    0x000003ff785784f8: ubfx	w13, w10, #2, #2
  0.06%    0.13%    0x000003ff785784fc: sub	w10, w0, w13
                    0x000003ff78578500: sxtw	x13, w12
  0.13%    0.09%    0x000003ff78578504: cbz	w12, 0x000003ff78578614
  0.22%    0.04%    0x000003ff78578508: cmp	x14, x13
                    0x000003ff7857850c: b.cs	0x000003ff78578614
                    0x000003ff78578510: and	w12, w10, #0x3
  0.07%    0.06%    0x000003ff78578514: sub	w13, w18, #0x3
  0.13%    0.26%    0x000003ff78578518: cmp	w18, w13
  0.13%    0.15%    0x000003ff7857851c: csel	w10, w2, w13, lt
                    0x000003ff78578520: add	w13, w12, #0x1
  0.15%    0.15%    0x000003ff78578524: cmp	w13, w18
  0.13%    0.13%    0x000003ff78578528: csel	w12, w13, w18, lt
                    0x000003ff7857852c: mov	w14, wzr        ;*aload_0
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
  0.22%    0.28%    0x000003ff78578530: sbfiz	x13, x14, #2, #32  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
  0.26%    0.30%    0x000003ff78578534: add	x21, x20, x13   ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@80 (line 57)
                    0x000003ff78578538: add	x16, x19, x13
  0.33%    0.35%    0x000003ff7857853c: ldr	w13, [x21,#16]
  0.20%    0.31%    0x000003ff78578540: ldr	w16, [x16,#16]  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
  0.59%    0.70%    0x000003ff78578544: madd	w16, w16, w11, w13
  0.46%    0.72%    0x000003ff78578548: str	w16, [x21,#16]  ;*iastore
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@101 (line 57)
                    0x000003ff7857854c: add	w14, w14, #0x1  ;*iadd
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@108 (line 56)
  0.28%    0.31%    0x000003ff78578550: str	w14, [x1,#20]   ;*putfield j
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@109 (line 56)
                    0x000003ff78578554: cmp	w14, w12
                    0x000003ff78578558: b.lt	0x000003ff78578530  ;*if_icmpge
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@63 (line 56)
  0.09%    0.09%    0x000003ff7857855c: cmp	w14, w10
                    0x000003ff78578560: b.ge	0x000003ff785785a0
  0.15%    0.06%    0x000003ff78578564: dup	v16.4s, w11
                    0x000003ff78578568: nop
  0.15%    0.02%    0x000003ff7857856c: nop                       ;*aload_0
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
  3.20%    3.07%    0x000003ff78578570: sbfiz	x12, x14, #2, #32  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
  3.09%    3.11%    0x000003ff78578574: add	x13, x19, x12
  3.03%    2.92%    0x000003ff78578578: ldr	q17, [x13,#16]
 15.39%   15.33%    0x000003ff7857857c: add	x12, x20, x12   ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@80 (line 57)
 10.35%   14.16%    0x000003ff78578580: mul	v17.4s, v17.4s, v16.4s
  6.39%    8.36%    0x000003ff78578584: ldr	q18, [x12,#16]
 13.14%   16.05%    0x000003ff78578588: add	v17.4s, v17.4s, v18.4s
 17.04%   12.30%    0x000003ff7857858c: str	q17, [x12,#16]  ;*iastore
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@101 (line 57)
                    0x000003ff78578590: add	w14, w14, #0x4  ;*iadd
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@108 (line 56)
  6.23%    4.66%    0x000003ff78578594: str	w14, [x1,#20]   ;*putfield j
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@109 (line 56)
                    0x000003ff78578598: cmp	w14, w10
                    0x000003ff7857859c: b.lt	0x000003ff78578570  ;*if_icmpge
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@63 (line 56)
  0.91%    0.87%    0x000003ff785785a0: cmp	w14, w18
                    0x000003ff785785a4: b.lt	0x000003ff7857840c
                    0x000003ff785785a8: b	0x000003ff78578438
                    0x000003ff785785ac: ldr	w10, [x1,#12]   ;*getfield N
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@26 (line 54)
                    0x000003ff785785b0: b	0x000003ff785783d8      ;*if_icmpge
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@13 (line 53)
                    0x000003ff785785b4: ldr	w11, [x1,#44]
                    0x000003ff785785b8: lsl	x2, x11, #3     ;*getfield res
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@143 (line 61)
....................................................................................................
 91.46%   91.61%  <total for region 1>

....[Hottest Regions]...............................................................................
 91.46%   91.61%         C2, level 4  mat_mul.MyBenchmark::loop_ikj, version 583 (404 bytes) 
  1.50%    1.48%   [kernel.kallsyms]  finish_task_switch (12 bytes) 
  0.41%    0.24%   [kernel.kallsyms]  _raw_spin_unlock_irqrestore (0 bytes) 
  0.30%    0.24%   [kernel.kallsyms]  __ll_sc___cmpxchg_case_mb_4 (96 bytes) 
  0.26%    0.18%   [kernel.kallsyms]  __ll_sc_atomic_add_return_release (52 bytes) 
  0.22%    0.13%   [kernel.kallsyms]  clear_bit (4 bytes) 
  0.18%    0.09%   [kernel.kallsyms]  __block_write_begin (80 bytes) 
  0.18%    0.06%        libc-2.17.so  _IO_fwrite (0 bytes) 
  0.17%    0.11%        libc-2.17.so  _IO_fwrite (12 bytes) 
  0.11%    0.20%   [kernel.kallsyms]  __ll_sc_atomic_sub_return_acquire (8 bytes) 
  0.11%    0.11%  libpthread-2.17.so  __pthread_enable_asynccancel (68 bytes) 
  0.09%    0.04%   [kernel.kallsyms]  vfs_write (72 bytes) 
  0.09%    0.20%  libpthread-2.17.so  __pthread_disable_asynccancel (12 bytes) 
  0.07%    0.13%   [kernel.kallsyms]  el0_svc_naked (0 bytes) 
  0.07%    0.04%    hsdis-aarch64.so  print_operands (84 bytes) 
  0.07%    0.02%         C2, level 4  mat_mul.MyBenchmark::loop_ikj, version 583 (8 bytes) 
  0.06%            [kernel.kallsyms]  ext4_do_update_inode (12 bytes) 
  0.06%    0.04%   [kernel.kallsyms]  syscall_trace_exit (12 bytes) 
  0.06%    0.02%   [kernel.kallsyms]  vfs_write (60 bytes) 
  0.06%    0.15%   [kernel.kallsyms]  __ll_sc_atomic64_sub_return (24 bytes) 
  4.45%    4.92%  <...other 326 warm regions...>
....................................................................................................
 99.98%  100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 91.54%   91.62%         C2, level 4  mat_mul.MyBenchmark::loop_ikj, version 583 
  1.50%    1.48%   [kernel.kallsyms]  finish_task_switch 
  1.16%    1.26%           libjvm.so  [unknown] 
  0.41%    0.24%   [kernel.kallsyms]  _raw_spin_unlock_irqrestore 
  0.35%    0.18%        libc-2.17.so  _IO_fwrite 
  0.31%    0.24%   [kernel.kallsyms]  __ll_sc___cmpxchg_case_mb_4 
  0.30%    0.31%        libc-2.17.so  vfprintf 
  0.26%    0.18%   [kernel.kallsyms]  __ll_sc_atomic_add_return_release 
  0.22%    0.13%   [kernel.kallsyms]  clear_bit 
  0.18%    0.11%   [kernel.kallsyms]  __block_write_begin 
  0.15%    0.09%   [kernel.kallsyms]  vfs_write 
  0.11%    0.11%  libpthread-2.17.so  __pthread_enable_asynccancel 
  0.11%    0.06%    hsdis-aarch64.so  print_operands 
  0.11%    0.20%   [kernel.kallsyms]  __ll_sc_atomic_sub_return_acquire 
  0.11%    0.09%   [kernel.kallsyms]  pipe_write 
  0.09%    0.22%  libpthread-2.17.so  __pthread_disable_asynccancel 
  0.07%    0.06%   [kernel.kallsyms]  syscall_trace_exit 
  0.07%    0.13%   [kernel.kallsyms]  el0_svc_naked 
  0.07%    0.02%   [kernel.kallsyms]  ext4_do_update_inode 
  0.06%    0.02%   [kernel.kallsyms]  __copy_from_user 
  2.79%    2.05%  <...other 105 warm methods...>
....................................................................................................
 99.98%   98.82%  <totals>

....[Distribution by Source]........................................................................
 91.54%   91.62%         C2, level 4
  5.16%    4.83%   [kernel.kallsyms]
  1.22%    1.29%           libjvm.so
  1.07%    1.29%        libc-2.17.so
  0.55%    0.52%    hsdis-aarch64.so
  0.28%    0.39%  libpthread-2.17.so
  0.15%    0.02%         interpreter
  0.02%                  C1, level 3
....................................................................................................
 99.98%  100.00%  <totals>



# JMH version: 1.19
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.151-1.b12.el7_4.aarch64/jre/bin/java
# VM options: -XX:+UnlockDiagnosticVMOptions -XX:CompileCommand=print,MyBenchmark
# Warmup: 3 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: mat_mul.MyBenchmark.loop_ikj
# Parameters: (N_str = 256)

# Run progress: 70.00% complete, ETA 00:10:32
# Fork: 1 of 2
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 0.061 s/op
# Warmup Iteration   2: 0.054 s/op
# Warmup Iteration   3: 0.054 s/op
Iteration   1: 0.054 s/op
Iteration   2: 0.054 s/op
Iteration   3: 0.054 s/op
Iteration   4: 0.054 s/op
Iteration   5: 0.054 s/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 75.00% complete, ETA 00:08:23
# Fork: 2 of 2
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 0.060 s/op
# Warmup Iteration   2: 0.054 s/op
# Warmup Iteration   3: 0.054 s/op
Iteration   1: 0.054 s/op
Iteration   2: 0.054 s/op
Iteration   3: 0.054 s/op
Iteration   4: 0.054 s/op
Iteration   5: 0.054 s/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "mat_mul.MyBenchmark.loop_ikj":
  0.054 ?(99.9%) 0.001 s/op [Average]
  (min, avg, max) = (0.054, 0.054, 0.054), stdev = 0.001
  CI (99.9%): [0.054, 0.054] (assumes normal distribution)

Secondary result "mat_mul.MyBenchmark.loop_ikj:?asm":
PrintAssembly processed: 195580 total address lines.
Perf output processed (skipped 22.458 seconds):
 Column 1: cycles (5544 events)
 Column 2: instructions (5540 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
C2, level 4, mat_mul.MyBenchmark::loop_ikj, version 588 (404 bytes) 

                    0x000003ff8c570874: str	wzr, [x1,#24]   ;*putfield k
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@18 (line 54)
                    0x000003ff8c570878: cmp	w18, #0x0
                    0x000003ff8c57087c: b.le	0x000003ff8c570a54  ;*if_icmpge
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@29 (line 54)
                    0x000003ff8c570880: sbfiz	x7, x4, #2, #32  ;*aaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@74 (line 57)
                    0x000003ff8c570884: mov	w5, wzr
                    0x000003ff8c570888: b	0x000003ff8c5708dc      ;*aload_0
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
  0.18%    0.20%    0x000003ff8c57088c: sbfiz	x10, x14, #2, #32  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
  0.11%    0.11%    0x000003ff8c570890: add	x13, x20, x10   ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@80 (line 57)
                    0x000003ff8c570894: add	x12, x19, x10
  0.02%    0.11%    0x000003ff8c570898: ldr	w10, [x13,#16]
  0.22%    0.11%    0x000003ff8c57089c: ldr	w12, [x12,#16]  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
  0.65%    0.54%    0x000003ff8c5708a0: madd	w10, w12, w11, w10
  0.22%    0.22%    0x000003ff8c5708a4: str	w10, [x13,#16]  ;*iastore
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@101 (line 57)
                    0x000003ff8c5708a8: add	w14, w14, #0x1  ;*iadd
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@108 (line 56)
  0.16%    0.13%    0x000003ff8c5708ac: str	w14, [x1,#20]   ;*putfield j
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@109 (line 56)
                    0x000003ff8c5708b0: cmp	w14, w18
                    0x000003ff8c5708b4: b.lt	0x000003ff8c57088c  ;*aload_0
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
  0.02%    0.07%    0x000003ff8c5708b8: mov	w18, w17        ;*getfield N
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@26 (line 54)
                    0x000003ff8c5708bc: add	w5, w5, #0x1    ;*iadd
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@121 (line 54)
  0.02%    0.04%    0x000003ff8c5708c0: str	w5, [x1,#24]    ; OopMap{r15=Oop c_rarg1=Oop off=196}
                                                                  ;*goto
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@125 (line 54)
  0.05%             0x000003ff8c5708c4: ldr	wzr, [x3]       ;*goto
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@125 (line 54)
                                                                  ;   {poll}
  0.04%    0.02%    0x000003ff8c5708c8: ldr	w10, [x1,#12]   ;*getfield N
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@26 (line 54)
                    0x000003ff8c5708cc: cmp	w5, w18
                    0x000003ff8c5708d0: b.ge	0x000003ff8c570854
  0.07%    0.02%    0x000003ff8c5708d4: mov	w18, w17
                    0x000003ff8c5708d8: mov	w17, w10        ;*getfield N
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@60 (line 56)
  0.11%    0.05%    0x000003ff8c5708dc: ldr	w10, [x1,#40]
                    0x000003ff8c5708e0: lsl	x19, x10, #3    ;*getfield shm
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@34 (line 55)
  0.09%    0.05%    0x000003ff8c5708e4: ldr	w10, [x19,#12]  ; implicit exception: dispatches to 0x000003ff8c570ab8
                    0x000003ff8c5708e8: add	x11, x19, x7
  0.05%    0.05%    0x000003ff8c5708ec: cmp	w4, w10
                    0x000003ff8c5708f0: b.cs	0x000003ff8c570a5c
           0.05%    0x000003ff8c5708f4: ldr	w12, [x11,#16]
  0.05%    0.07%    0x000003ff8c5708f8: lsl	x11, x12, #3    ;*aaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@41 (line 55)
                    0x000003ff8c5708fc: sbfiz	x13, x5, #2, #32  ;*aaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@93 (line 57)
  0.20%    0.23%    0x000003ff8c570900: ldr	w12, [x11,#12]  ; implicit exception: dispatches to 0x000003ff8c570ac8
                    0x000003ff8c570904: add	x14, x11, x13
  0.05%    0.09%    0x000003ff8c570908: cmp	w5, w12
                    0x000003ff8c57090c: b.cs	0x000003ff8c570a78
  0.04%    0.04%    0x000003ff8c570910: ldr	w11, [x14,#16]  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@46 (line 55)
  0.14%    0.25%    0x000003ff8c570914: str	w11, [x1,#32]   ;*putfield aik
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@47 (line 55)
  0.05%    0.04%    0x000003ff8c570918: str	wzr, [x1,#20]   ;*putfield j
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@52 (line 56)
                    0x000003ff8c57091c: cmp	w18, #0x0
                    0x000003ff8c570920: b.le	0x000003ff8c5708bc  ;*if_icmpge
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@63 (line 56)
  0.05%    0.05%    0x000003ff8c570924: ldr	w12, [x1,#44]
  0.04%    0.04%    0x000003ff8c570928: lsl	x12, x12, #3    ;*getfield res
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@67 (line 57)
  0.07%    0.14%    0x000003ff8c57092c: ldr	w16, [x12,#12]  ; implicit exception: dispatches to 0x000003ff8c570a94
                    0x000003ff8c570930: add	x12, x12, x7
  0.04%    0.04%    0x000003ff8c570934: cmp	w4, w16
                    0x000003ff8c570938: b.cs	0x000003ff8c570a94  ;*aload_0
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
  0.04%    0.04%    0x000003ff8c57093c: ldr	w12, [x12,#16]
  0.05%    0.09%    0x000003ff8c570940: lsl	x20, x12, #3    ;*aaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@74 (line 57)
  0.11%    0.29%    0x000003ff8c570944: ldr	w12, [x20,#12]  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@80 (line 57)
                                                                  ; implicit exception: dispatches to 0x000003ff8c570a94
                    0x000003ff8c570948: add	x13, x19, x13
  0.07%    0.05%    0x000003ff8c57094c: add	x14, x6, w18, sxtw
                    0x000003ff8c570950: sxtw	x16, w12
  0.02%    0.09%    0x000003ff8c570954: cbz	w12, 0x000003ff8c570a94
  0.09%    0.07%    0x000003ff8c570958: cmp	x14, x16
                    0x000003ff8c57095c: b.cs	0x000003ff8c570a94
  0.09%    0.04%    0x000003ff8c570960: cmp	w5, w10
                    0x000003ff8c570964: b.cs	0x000003ff8c570a94  ;*aload_0
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
  0.13%    0.16%    0x000003ff8c570968: ldr	w12, [x13,#16]
  0.05%    0.13%    0x000003ff8c57096c: lsl	x19, x12, #3    ;*aaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@93 (line 57)
  0.16%    0.04%    0x000003ff8c570970: ldr	w12, [x19,#12]  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
                                                                  ; implicit exception: dispatches to 0x000003ff8c570a94
  0.29%    0.05%    0x000003ff8c570974: mov	w10, w20
  0.04%    0.02%    0x000003ff8c570978: ubfx	w13, w10, #2, #2
  0.09%    0.07%    0x000003ff8c57097c: sub	w10, w0, w13
                    0x000003ff8c570980: sxtw	x13, w12
  0.02%    0.14%    0x000003ff8c570984: cbz	w12, 0x000003ff8c570a94
  0.09%    0.04%    0x000003ff8c570988: cmp	x14, x13
                    0x000003ff8c57098c: b.cs	0x000003ff8c570a94
                    0x000003ff8c570990: and	w12, w10, #0x3
  0.05%    0.05%    0x000003ff8c570994: sub	w13, w18, #0x3
  0.09%    0.20%    0x000003ff8c570998: cmp	w18, w13
  0.09%    0.09%    0x000003ff8c57099c: csel	w10, w2, w13, lt
                    0x000003ff8c5709a0: add	w13, w12, #0x1
  0.05%    0.09%    0x000003ff8c5709a4: cmp	w13, w18
  0.09%    0.16%    0x000003ff8c5709a8: csel	w12, w13, w18, lt
                    0x000003ff8c5709ac: mov	w14, wzr        ;*aload_0
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
  0.14%    0.13%    0x000003ff8c5709b0: sbfiz	x13, x14, #2, #32  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
  0.14%    0.16%    0x000003ff8c5709b4: add	x21, x20, x13   ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@80 (line 57)
                    0x000003ff8c5709b8: add	x16, x19, x13
  0.23%    0.22%    0x000003ff8c5709bc: ldr	w13, [x21,#16]
  0.09%    0.05%    0x000003ff8c5709c0: ldr	w16, [x16,#16]  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
  0.29%    0.32%    0x000003ff8c5709c4: madd	w16, w16, w11, w13
  0.31%    0.47%    0x000003ff8c5709c8: str	w16, [x21,#16]  ;*iastore
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@101 (line 57)
                    0x000003ff8c5709cc: add	w14, w14, #0x1  ;*iadd
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@108 (line 56)
  0.22%    0.20%    0x000003ff8c5709d0: str	w14, [x1,#20]   ;*putfield j
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@109 (line 56)
                    0x000003ff8c5709d4: cmp	w14, w12
                    0x000003ff8c5709d8: b.lt	0x000003ff8c5709b0  ;*if_icmpge
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@63 (line 56)
  0.05%    0.07%    0x000003ff8c5709dc: cmp	w14, w10
                    0x000003ff8c5709e0: b.ge	0x000003ff8c570a20
  0.09%    0.02%    0x000003ff8c5709e4: dup	v16.4s, w11
                    0x000003ff8c5709e8: nop
  0.07%             0x000003ff8c5709ec: nop                       ;*aload_0
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
  3.45%    3.59%    0x000003ff8c5709f0: sbfiz	x12, x14, #2, #32  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
  3.72%    3.18%    0x000003ff8c5709f4: add	x13, x19, x12
  3.99%    3.75%    0x000003ff8c5709f8: ldr	q17, [x13,#16]
 16.00%   17.64%    0x000003ff8c5709fc: add	x12, x20, x12   ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@80 (line 57)
 10.68%   15.47%    0x000003ff8c570a00: mul	v17.4s, v17.4s, v16.4s
  6.94%    9.33%    0x000003ff8c570a04: ldr	q18, [x12,#16]
 15.21%   16.14%    0x000003ff8c570a08: add	v17.4s, v17.4s, v18.4s
 17.89%   11.30%    0x000003ff8c570a0c: str	q17, [x12,#16]  ;*iastore
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@101 (line 57)
                    0x000003ff8c570a10: add	w14, w14, #0x4  ;*iadd
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@108 (line 56)
  6.87%    4.26%    0x000003ff8c570a14: str	w14, [x1,#20]   ;*putfield j
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@109 (line 56)
                    0x000003ff8c570a18: cmp	w14, w10
                    0x000003ff8c570a1c: b.lt	0x000003ff8c5709f0  ;*if_icmpge
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@63 (line 56)
  0.51%    0.40%    0x000003ff8c570a20: cmp	w14, w18
                    0x000003ff8c570a24: b.lt	0x000003ff8c57088c
                    0x000003ff8c570a28: b	0x000003ff8c5708b8      ;*if_icmpge
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@13 (line 53)
                    0x000003ff8c570a2c: ldr	w11, [x1,#44]
                    0x000003ff8c570a30: lsl	x2, x11, #3     ;*getfield res
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@143 (line 61)
                    0x000003ff8c570a34: mov	x1, x15
                    0x000003ff8c570a38: cbz	x15, 0x000003ff8c570aa8
                    0x000003ff8c570a3c: bl	0x000003ff8c0b2140  ; OopMap{off=576}
....................................................................................................
 91.34%   91.37%  <total for region 1>

....[Hottest Regions]...............................................................................
 91.34%   91.37%         C2, level 4  mat_mul.MyBenchmark::loop_ikj, version 588 (404 bytes) 
  1.57%    1.57%   [kernel.kallsyms]  finish_task_switch (0 bytes) 
  0.32%    0.18%   [kernel.kallsyms]  _raw_spin_unlock_irqrestore (4 bytes) 
  0.18%    0.38%   [kernel.kallsyms]  __ll_sc_atomic_sub_return_acquire (8 bytes) 
  0.14%    0.02%   [kernel.kallsyms]  syscall_trace_enter (96 bytes) 
  0.14%    0.05%   [kernel.kallsyms]  clear_bit (16 bytes) 
  0.14%    0.04%        libc-2.17.so  _IO_fwrite (12 bytes) 
  0.11%    0.07%   [kernel.kallsyms]  el0_svc_naked (0 bytes) 
  0.11%    0.14%   [kernel.kallsyms]  __ll_sc_atomic64_sub_return (12 bytes) 
  0.09%    0.18%   [kernel.kallsyms]  __ll_sc___cmpxchg_case_mb_8 (20 bytes) 
  0.09%    0.02%           libjvm.so  jio_snprintf (28 bytes) 
  0.09%    0.07%        libc-2.17.so  _IO_fwrite (0 bytes) 
  0.09%    0.07%        libc-2.17.so  mempcpy (24 bytes) 
  0.09%    0.13%  libpthread-2.17.so  __pthread_enable_asynccancel (20 bytes) 
  0.07%    0.09%   [kernel.kallsyms]  __do_softirq (0 bytes) 
  0.07%    0.05%   [kernel.kallsyms]  __block_write_begin (52 bytes) 
  0.07%    0.07%   [kernel.kallsyms]  __ll_sc_atomic_add_return_release (8 bytes) 
  0.07%    0.02%   [kernel.kallsyms]  __copy_from_user (20 bytes) 
  0.07%            [kernel.kallsyms]  mutex_lock (52 bytes) 
  0.07%    0.09%           libjvm.so  jio_snprintf (60 bytes) 
  5.05%    5.38%  <...other 347 warm regions...>
....................................................................................................
100.00%  100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 91.34%   91.39%         C2, level 4  mat_mul.MyBenchmark::loop_ikj, version 588 
  1.57%    1.57%   [kernel.kallsyms]  finish_task_switch 
  0.88%    1.12%           libjvm.so  jio_snprintf 
  0.36%    0.27%           libjvm.so  [unknown] 
  0.32%    0.18%   [kernel.kallsyms]  _raw_spin_unlock_irqrestore 
  0.31%    0.14%        libc-2.17.so  _IO_fwrite 
  0.31%    0.47%        libc-2.17.so  vfprintf 
  0.18%    0.38%   [kernel.kallsyms]  __ll_sc_atomic_sub_return_acquire 
  0.16%    0.02%   [kernel.kallsyms]  syscall_trace_enter 
  0.16%    0.04%   [kernel.kallsyms]  ext4_do_update_inode 
  0.14%    0.09%   [kernel.kallsyms]  __block_write_begin 
  0.14%    0.05%   [kernel.kallsyms]  clear_bit 
  0.11%    0.07%   [kernel.kallsyms]  el0_svc_naked 
  0.11%    0.14%   [kernel.kallsyms]  __ll_sc_atomic64_sub_return 
  0.09%    0.18%  libpthread-2.17.so  __pthread_disable_asynccancel 
  0.09%    0.14%  libpthread-2.17.so  __pthread_enable_asynccancel 
  0.09%    0.05%        libc-2.17.so  _IO_vsnprintf 
  0.09%    0.09%        libc-2.17.so  strlen 
  0.09%    0.05%   [kernel.kallsyms]  sys_write 
  0.09%    0.07%        libc-2.17.so  mempcpy 
  3.35%    2.27%  <...other 112 warm methods...>
....................................................................................................
100.00%   98.81%  <totals>

....[Distribution by Source]........................................................................
 91.34%   91.39%         C2, level 4
  5.12%    4.80%   [kernel.kallsyms]
  1.39%    1.48%        libc-2.17.so
  1.30%    1.43%           libjvm.so
  0.45%    0.42%    hsdis-aarch64.so
  0.22%    0.42%  libpthread-2.17.so
  0.11%    0.07%         interpreter
  0.07%                  C1, level 3
....................................................................................................
100.00%  100.00%  <totals>

PrintAssembly processed: 198060 total address lines.
Perf output processed (skipped 22.631 seconds):
 Column 1: cycles (5577 events)
 Column 2: instructions (5564 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
C2, level 4, mat_mul.MyBenchmark::loop_ikj, version 587 (404 bytes) 

                    0x000003ff845765b4: str	wzr, [x1,#24]   ;*putfield k
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@18 (line 54)
                    0x000003ff845765b8: cmp	w18, #0x0
                    0x000003ff845765bc: b.le	0x000003ff84576794  ;*if_icmpge
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@29 (line 54)
                    0x000003ff845765c0: sbfiz	x7, x4, #2, #32  ;*aaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@74 (line 57)
                    0x000003ff845765c4: mov	w5, wzr
                    0x000003ff845765c8: b	0x000003ff8457661c      ;*aload_0
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
  0.25%    0.22%    0x000003ff845765cc: sbfiz	x10, x14, #2, #32  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
  0.11%    0.22%    0x000003ff845765d0: add	x13, x20, x10   ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@80 (line 57)
                    0x000003ff845765d4: add	x12, x19, x10
  0.11%    0.09%    0x000003ff845765d8: ldr	w10, [x13,#16]
  0.16%    0.16%    0x000003ff845765dc: ldr	w12, [x12,#16]  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
  0.57%    0.61%    0x000003ff845765e0: madd	w10, w12, w11, w10
  0.29%    0.18%    0x000003ff845765e4: str	w10, [x13,#16]  ;*iastore
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@101 (line 57)
                    0x000003ff845765e8: add	w14, w14, #0x1  ;*iadd
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@108 (line 56)
  0.29%    0.14%    0x000003ff845765ec: str	w14, [x1,#20]   ;*putfield j
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@109 (line 56)
                    0x000003ff845765f0: cmp	w14, w18
                    0x000003ff845765f4: b.lt	0x000003ff845765cc  ;*aload_0
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
  0.02%    0.07%    0x000003ff845765f8: mov	w18, w17        ;*getfield N
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@26 (line 54)
                    0x000003ff845765fc: add	w5, w5, #0x1    ;*iadd
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@121 (line 54)
  0.09%    0.07%    0x000003ff84576600: str	w5, [x1,#24]    ; OopMap{r15=Oop c_rarg1=Oop off=196}
                                                                  ;*goto
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@125 (line 54)
  0.11%    0.04%    0x000003ff84576604: ldr	wzr, [x3]       ;*goto
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@125 (line 54)
                                                                  ;   {poll}
  0.07%             0x000003ff84576608: ldr	w10, [x1,#12]   ;*getfield N
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@26 (line 54)
                    0x000003ff8457660c: cmp	w5, w18
                    0x000003ff84576610: b.ge	0x000003ff84576594
  0.11%    0.05%    0x000003ff84576614: mov	w18, w17
                    0x000003ff84576618: mov	w17, w10        ;*getfield N
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@60 (line 56)
  0.05%    0.05%    0x000003ff8457661c: ldr	w10, [x1,#40]
                    0x000003ff84576620: lsl	x19, x10, #3    ;*getfield shm
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@34 (line 55)
  0.16%    0.07%    0x000003ff84576624: ldr	w10, [x19,#12]  ; implicit exception: dispatches to 0x000003ff845767f8
                    0x000003ff84576628: add	x11, x19, x7
  0.13%    0.02%    0x000003ff8457662c: cmp	w4, w10
                    0x000003ff84576630: b.cs	0x000003ff8457679c
  0.05%    0.14%    0x000003ff84576634: ldr	w12, [x11,#16]
  0.05%    0.04%    0x000003ff84576638: lsl	x11, x12, #3    ;*aaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@41 (line 55)
                    0x000003ff8457663c: sbfiz	x13, x5, #2, #32  ;*aaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@93 (line 57)
  0.20%    0.25%    0x000003ff84576640: ldr	w12, [x11,#12]  ; implicit exception: dispatches to 0x000003ff84576808
                    0x000003ff84576644: add	x14, x11, x13
  0.09%    0.11%    0x000003ff84576648: cmp	w5, w12
                    0x000003ff8457664c: b.cs	0x000003ff845767b8
  0.04%    0.04%    0x000003ff84576650: ldr	w11, [x14,#16]  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@46 (line 55)
  0.20%    0.09%    0x000003ff84576654: str	w11, [x1,#32]   ;*putfield aik
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@47 (line 55)
  0.20%    0.04%    0x000003ff84576658: str	wzr, [x1,#20]   ;*putfield j
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@52 (line 56)
                    0x000003ff8457665c: cmp	w18, #0x0
                    0x000003ff84576660: b.le	0x000003ff845765fc  ;*if_icmpge
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@63 (line 56)
  0.07%    0.02%    0x000003ff84576664: ldr	w12, [x1,#44]
  0.11%    0.04%    0x000003ff84576668: lsl	x12, x12, #3    ;*getfield res
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@67 (line 57)
  0.05%    0.22%    0x000003ff8457666c: ldr	w16, [x12,#12]  ; implicit exception: dispatches to 0x000003ff845767d4
                    0x000003ff84576670: add	x12, x12, x7
  0.09%    0.04%    0x000003ff84576674: cmp	w4, w16
                    0x000003ff84576678: b.cs	0x000003ff845767d4  ;*aload_0
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
  0.02%    0.04%    0x000003ff8457667c: ldr	w12, [x12,#16]
  0.04%    0.09%    0x000003ff84576680: lsl	x20, x12, #3    ;*aaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@74 (line 57)
  0.16%    0.29%    0x000003ff84576684: ldr	w12, [x20,#12]  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@80 (line 57)
                                                                  ; implicit exception: dispatches to 0x000003ff845767d4
                    0x000003ff84576688: add	x13, x19, x13
  0.09%    0.11%    0x000003ff8457668c: add	x14, x6, w18, sxtw
                    0x000003ff84576690: sxtw	x16, w12
  0.09%    0.11%    0x000003ff84576694: cbz	w12, 0x000003ff845767d4
  0.05%    0.11%    0x000003ff84576698: cmp	x14, x16
                    0x000003ff8457669c: b.cs	0x000003ff845767d4
  0.07%    0.04%    0x000003ff845766a0: cmp	w5, w10
                    0x000003ff845766a4: b.cs	0x000003ff845767d4  ;*aload_0
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
  0.04%    0.11%    0x000003ff845766a8: ldr	w12, [x13,#16]
  0.05%    0.04%    0x000003ff845766ac: lsl	x19, x12, #3    ;*aaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@93 (line 57)
  0.23%    0.05%    0x000003ff845766b0: ldr	w12, [x19,#12]  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
                                                                  ; implicit exception: dispatches to 0x000003ff845767d4
  0.32%    0.07%    0x000003ff845766b4: mov	w10, w20
  0.07%    0.02%    0x000003ff845766b8: ubfx	w13, w10, #2, #2
  0.09%    0.02%    0x000003ff845766bc: sub	w10, w0, w13
                    0x000003ff845766c0: sxtw	x13, w12
  0.05%    0.07%    0x000003ff845766c4: cbz	w12, 0x000003ff845767d4
  0.04%    0.13%    0x000003ff845766c8: cmp	x14, x13
                    0x000003ff845766cc: b.cs	0x000003ff845767d4
                    0x000003ff845766d0: and	w12, w10, #0x3
  0.07%             0x000003ff845766d4: sub	w13, w18, #0x3
  0.11%    0.09%    0x000003ff845766d8: cmp	w18, w13
  0.05%    0.14%    0x000003ff845766dc: csel	w10, w2, w13, lt
                    0x000003ff845766e0: add	w13, w12, #0x1
  0.07%    0.05%    0x000003ff845766e4: cmp	w13, w18
  0.02%    0.07%    0x000003ff845766e8: csel	w12, w13, w18, lt
                    0x000003ff845766ec: mov	w14, wzr        ;*aload_0
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
  0.16%    0.20%    0x000003ff845766f0: sbfiz	x13, x14, #2, #32  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
  0.11%    0.14%    0x000003ff845766f4: add	x21, x20, x13   ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@80 (line 57)
                    0x000003ff845766f8: add	x16, x19, x13
  0.11%    0.13%    0x000003ff845766fc: ldr	w13, [x21,#16]
  0.07%    0.05%    0x000003ff84576700: ldr	w16, [x16,#16]  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
  0.34%    0.31%    0x000003ff84576704: madd	w16, w16, w11, w13
  0.32%    0.20%    0x000003ff84576708: str	w16, [x21,#16]  ;*iastore
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@101 (line 57)
                    0x000003ff8457670c: add	w14, w14, #0x1  ;*iadd
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@108 (line 56)
  0.27%    0.13%    0x000003ff84576710: str	w14, [x1,#20]   ;*putfield j
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@109 (line 56)
                    0x000003ff84576714: cmp	w14, w12
                    0x000003ff84576718: b.lt	0x000003ff845766f0  ;*if_icmpge
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@63 (line 56)
  0.13%             0x000003ff8457671c: cmp	w14, w10
                    0x000003ff84576720: b.ge	0x000003ff84576760
  0.04%    0.05%    0x000003ff84576724: dup	v16.4s, w11
                    0x000003ff84576728: nop
  0.04%    0.02%    0x000003ff8457672c: nop                       ;*aload_0
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
  3.77%    3.00%    0x000003ff84576730: sbfiz	x12, x14, #2, #32  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
  3.34%    4.42%    0x000003ff84576734: add	x13, x19, x12
  3.50%    3.45%    0x000003ff84576738: ldr	q17, [x13,#16]
 15.29%   18.04%    0x000003ff8457673c: add	x12, x20, x12   ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@80 (line 57)
 10.97%   12.83%    0x000003ff84576740: mul	v17.4s, v17.4s, v16.4s
  7.39%   10.50%    0x000003ff84576744: ldr	q18, [x12,#16]
 14.27%   17.33%    0x000003ff84576748: add	v17.4s, v17.4s, v18.4s
 17.91%   12.90%    0x000003ff8457674c: str	q17, [x12,#16]  ;*iastore
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@101 (line 57)
                    0x000003ff84576750: add	w14, w14, #0x4  ;*iadd
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@108 (line 56)
  7.19%    2.79%    0x000003ff84576754: str	w14, [x1,#20]   ;*putfield j
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@109 (line 56)
                    0x000003ff84576758: cmp	w14, w10
                    0x000003ff8457675c: b.lt	0x000003ff84576730  ;*if_icmpge
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@63 (line 56)
  0.48%    0.40%    0x000003ff84576760: cmp	w14, w18
                    0x000003ff84576764: b.lt	0x000003ff845765cc
                    0x000003ff84576768: b	0x000003ff845765f8      ;*if_icmpge
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@13 (line 53)
                    0x000003ff8457676c: ldr	w11, [x1,#44]
                    0x000003ff84576770: lsl	x2, x11, #3     ;*getfield res
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@143 (line 61)
                    0x000003ff84576774: mov	x1, x15
                    0x000003ff84576778: cbz	x15, 0x000003ff845767e8
                    0x000003ff8457677c: bl	0x000003ff840b2140  ; OopMap{off=576}
....................................................................................................
 91.09%   91.52%  <total for region 1>

....[Hottest Regions]...............................................................................
 91.09%   91.52%         C2, level 4  mat_mul.MyBenchmark::loop_ikj, version 587 (404 bytes) 
  1.70%    1.71%   [kernel.kallsyms]  finish_task_switch (0 bytes) 
  0.75%    0.16%   [kernel.kallsyms]  _raw_spin_unlock_irqrestore (0 bytes) 
  0.20%    0.18%   [kernel.kallsyms]  __ll_sc_atomic_sub_return_acquire (48 bytes) 
  0.14%    0.11%   [kernel.kallsyms]  __ll_sc_atomic_add_return_release (16 bytes) 
  0.14%    0.07%   [kernel.kallsyms]  _cond_resched (48 bytes) 
  0.14%    0.13%        libc-2.17.so  _IO_fwrite (0 bytes) 
  0.13%    0.02%   [kernel.kallsyms]  clear_bit (0 bytes) 
  0.11%    0.16%   [kernel.kallsyms]  __ll_sc_atomic64_sub_return (20 bytes) 
  0.11%    0.04%        libc-2.17.so  mempcpy (20 bytes) 
  0.11%    0.09%  libpthread-2.17.so  __libc_write (36 bytes) 
  0.09%    0.22%  libpthread-2.17.so  __pthread_disable_asynccancel (56 bytes) 
  0.07%    0.02%   [kernel.kallsyms]  __find_get_block (20 bytes) 
  0.07%            [kernel.kallsyms]  __ll_sc_atomic_sub (12 bytes) 
  0.07%    0.18%   [kernel.kallsyms]  __ll_sc___cmpxchg_case_mb_8 (0 bytes) 
  0.07%    0.13%           libjvm.so  [unknown] (28 bytes) 
  0.07%    0.04%           libjvm.so  [unknown] (56 bytes) 
  0.07%                 libc-2.17.so  _IO_fflush (4 bytes) 
  0.07%                 libc-2.17.so  _IO_no_init (40 bytes) 
  0.05%            [kernel.kallsyms]  __ext4_journal_start_sb (44 bytes) 
  4.73%    5.25%  <...other 356 warm regions...>
....................................................................................................
100.00%  100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 91.11%   91.52%         C2, level 4  mat_mul.MyBenchmark::loop_ikj, version 587 
  1.70%    1.71%   [kernel.kallsyms]  finish_task_switch 
  1.11%    1.13%           libjvm.so  [unknown] 
  0.75%    0.16%   [kernel.kallsyms]  _raw_spin_unlock_irqrestore 
  0.22%    0.20%        libc-2.17.so  _IO_fwrite 
  0.20%    0.18%   [kernel.kallsyms]  __ll_sc_atomic_sub_return_acquire 
  0.16%    0.25%        libc-2.17.so  vfprintf 
  0.14%    0.07%   [kernel.kallsyms]  _cond_resched 
  0.14%    0.11%   [kernel.kallsyms]  __ll_sc_atomic_add_return_release 
  0.13%    0.04%        libc-2.17.so  mempcpy 
  0.13%    0.02%   [kernel.kallsyms]  clear_bit 
  0.11%    0.09%  libpthread-2.17.so  __libc_write 
  0.11%    0.14%   [kernel.kallsyms]  __block_write_begin 
  0.11%    0.18%   [kernel.kallsyms]  __ll_sc_atomic64_sub_return 
  0.11%    0.02%        libc-2.17.so  _IO_fflush 
  0.09%    0.22%  libpthread-2.17.so  __pthread_disable_asynccancel 
  0.07%            [kernel.kallsyms]  __ll_sc_atomic_sub 
  0.07%    0.04%        libc-2.17.so  _IO_no_init 
  0.07%    0.02%   [kernel.kallsyms]  __find_get_block 
  0.07%    0.04%   [kernel.kallsyms]  __vfs_write 
  3.41%    2.61%  <...other 122 warm methods...>
....................................................................................................
100.00%   98.72%  <totals>

....[Distribution by Source]........................................................................
 91.11%   91.52%         C2, level 4
  6.02%    5.10%   [kernel.kallsyms]
  1.18%    1.15%           libjvm.so
  0.97%    1.11%        libc-2.17.so
  0.32%    0.54%    hsdis-aarch64.so
  0.32%    0.47%  libpthread-2.17.so
  0.04%    0.07%         interpreter
  0.02%             Unknown, level 0
  0.02%    0.02%         C1, level 3
....................................................................................................
100.00%  100.00%  <totals>



# JMH version: 1.19
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.151-1.b12.el7_4.aarch64/jre/bin/java
# VM options: -XX:+UnlockDiagnosticVMOptions -XX:CompileCommand=print,MyBenchmark
# Warmup: 3 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: mat_mul.MyBenchmark.loop_ikj
# Parameters: (N_str = 512)

# Run progress: 80.00% complete, ETA 00:06:26
# Fork: 1 of 2
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 0.406 s/op
# Warmup Iteration   2: 0.421 s/op
# Warmup Iteration   3: 0.421 s/op
Iteration   1: 0.422 s/op
Iteration   2: 0.421 s/op
Iteration   3: 0.421 s/op
Iteration   4: 0.421 s/op
Iteration   5: 0.421 s/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 85.00% complete, ETA 00:04:39
# Fork: 2 of 2
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 0.406 s/op
# Warmup Iteration   2: 0.421 s/op
# Warmup Iteration   3: 0.421 s/op
Iteration   1: 0.421 s/op
Iteration   2: 0.421 s/op
Iteration   3: 0.421 s/op
Iteration   4: 0.422 s/op
Iteration   5: 0.421 s/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "mat_mul.MyBenchmark.loop_ikj":
  0.421 ?(99.9%) 0.001 s/op [Average]
  (min, avg, max) = (0.421, 0.421, 0.422), stdev = 0.001
  CI (99.9%): [0.421, 0.422] (assumes normal distribution)

Secondary result "mat_mul.MyBenchmark.loop_ikj:?asm":
PrintAssembly processed: 195298 total address lines.
Perf output processed (skipped 23.134 seconds):
 Column 1: cycles (6711 events)
 Column 2: instructions (6700 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
C2, level 4, mat_mul.MyBenchmark::loop_ikj, version 582 (396 bytes) 

                    0x000003ffa056fb9c: str	wzr, [x1,#24]   ;*putfield k
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@18 (line 54)
                    0x000003ffa056fba0: cmp	w18, #0x0
                    0x000003ffa056fba4: b.le	0x000003ffa056fd4c  ;*if_icmpge
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@29 (line 54)
                    0x000003ffa056fba8: sbfiz	x7, x4, #2, #32  ;*aaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@74 (line 57)
                    0x000003ffa056fbac: mov	w5, wzr
                    0x000003ffa056fbb0: b	0x000003ffa056fc04      ;*aload_0
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
  0.19%    0.15%    0x000003ffa056fbb4: sbfiz	x10, x14, #2, #32  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
  0.09%    0.06%    0x000003ffa056fbb8: add	x13, x20, x10   ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@80 (line 57)
                    0x000003ffa056fbbc: add	x12, x19, x10
  0.10%    0.01%    0x000003ffa056fbc0: ldr	w10, [x13,#16]
  0.13%    0.10%    0x000003ffa056fbc4: ldr	w12, [x12,#16]  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
  0.22%    0.31%    0x000003ffa056fbc8: madd	w10, w12, w11, w10
  0.10%    0.10%    0x000003ffa056fbcc: str	w10, [x13,#16]  ;*iastore
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@101 (line 57)
                    0x000003ffa056fbd0: add	w14, w14, #0x1  ;*iadd
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@108 (line 56)
  0.13%    0.18%    0x000003ffa056fbd4: str	w14, [x1,#20]   ;*putfield j
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@109 (line 56)
                    0x000003ffa056fbd8: cmp	w14, w18
                    0x000003ffa056fbdc: b.lt	0x000003ffa056fbb4  ;*aload_0
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
  0.01%    0.01%    0x000003ffa056fbe0: mov	w18, w17        ;*getfield N
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@26 (line 54)
                    0x000003ffa056fbe4: add	w5, w5, #0x1    ;*iadd
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@121 (line 54)
  0.03%    0.01%    0x000003ffa056fbe8: str	w5, [x1,#24]    ; OopMap{r15=Oop c_rarg1=Oop off=236}
                                                                  ;*goto
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@125 (line 54)
  0.01%             0x000003ffa056fbec: ldr	wzr, [x3]       ;*goto
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@125 (line 54)
                                                                  ;   {poll}
  0.01%    0.03%    0x000003ffa056fbf0: ldr	w10, [x1,#12]   ;*getfield N
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@26 (line 54)
                    0x000003ffa056fbf4: cmp	w5, w18
                    0x000003ffa056fbf8: b.ge	0x000003ffa056fb7c
  0.03%    0.04%    0x000003ffa056fbfc: mov	w18, w17
                    0x000003ffa056fc00: mov	w17, w10        ;*getfield N
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@60 (line 56)
  0.04%    0.04%    0x000003ffa056fc04: ldr	w10, [x1,#40]
                    0x000003ffa056fc08: lsl	x19, x10, #3    ;*getfield shm
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@34 (line 55)
  0.09%    0.15%    0x000003ffa056fc0c: ldr	w10, [x19,#12]  ; implicit exception: dispatches to 0x000003ffa056fdb0
                    0x000003ffa056fc10: add	x11, x19, x7
  0.01%    0.04%    0x000003ffa056fc14: cmp	w4, w10
                    0x000003ffa056fc18: b.cs	0x000003ffa056fd54
  0.01%    0.07%    0x000003ffa056fc1c: ldr	w12, [x11,#16]
  0.03%    0.01%    0x000003ffa056fc20: lsl	x11, x12, #3    ;*aaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@41 (line 55)
                    0x000003ffa056fc24: sbfiz	x13, x5, #2, #32  ;*aaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@93 (line 57)
  0.09%    0.10%    0x000003ffa056fc28: ldr	w12, [x11,#12]  ; implicit exception: dispatches to 0x000003ffa056fdc0
                    0x000003ffa056fc2c: add	x14, x11, x13
  0.04%    0.01%    0x000003ffa056fc30: cmp	w5, w12
                    0x000003ffa056fc34: b.cs	0x000003ffa056fd70
  0.04%             0x000003ffa056fc38: ldr	w11, [x14,#16]  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@46 (line 55)
  0.10%    0.12%    0x000003ffa056fc3c: str	w11, [x1,#32]   ;*putfield aik
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@47 (line 55)
  0.12%    0.06%    0x000003ffa056fc40: str	wzr, [x1,#20]   ;*putfield j
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@52 (line 56)
                    0x000003ffa056fc44: cmp	w18, #0x0
                    0x000003ffa056fc48: b.le	0x000003ffa056fbe4  ;*if_icmpge
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@63 (line 56)
  0.01%    0.01%    0x000003ffa056fc4c: ldr	w12, [x1,#44]
  0.03%    0.03%    0x000003ffa056fc50: lsl	x12, x12, #3    ;*getfield res
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@67 (line 57)
  0.09%    0.10%    0x000003ffa056fc54: ldr	w16, [x12,#12]  ; implicit exception: dispatches to 0x000003ffa056fd8c
                    0x000003ffa056fc58: add	x12, x12, x7
  0.04%    0.01%    0x000003ffa056fc5c: cmp	w4, w16
                    0x000003ffa056fc60: b.cs	0x000003ffa056fd8c  ;*aload_0
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
  0.06%    0.07%    0x000003ffa056fc64: ldr	w12, [x12,#16]
  0.03%    0.09%    0x000003ffa056fc68: lsl	x20, x12, #3    ;*aaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@74 (line 57)
  0.10%    0.18%    0x000003ffa056fc6c: ldr	w12, [x20,#12]  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@80 (line 57)
                                                                  ; implicit exception: dispatches to 0x000003ffa056fd8c
                    0x000003ffa056fc70: add	x13, x19, x13
           0.03%    0x000003ffa056fc74: add	x14, x6, w18, sxtw
                    0x000003ffa056fc78: sxtw	x16, w12
  0.03%    0.01%    0x000003ffa056fc7c: cbz	w12, 0x000003ffa056fd8c
  0.03%    0.01%    0x000003ffa056fc80: cmp	x14, x16
                    0x000003ffa056fc84: b.cs	0x000003ffa056fd8c
  0.03%    0.04%    0x000003ffa056fc88: cmp	w5, w10
                    0x000003ffa056fc8c: b.cs	0x000003ffa056fd8c  ;*aload_0
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
  0.07%    0.04%    0x000003ffa056fc90: ldr	w12, [x13,#16]
  0.04%    0.04%    0x000003ffa056fc94: lsl	x19, x12, #3    ;*aaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@93 (line 57)
  0.16%    0.06%    0x000003ffa056fc98: ldr	w12, [x19,#12]  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
                                                                  ; implicit exception: dispatches to 0x000003ffa056fd8c
  0.13%    0.01%    0x000003ffa056fc9c: mov	w10, w20
  0.01%    0.01%    0x000003ffa056fca0: ubfx	w13, w10, #2, #2
  0.06%    0.01%    0x000003ffa056fca4: sub	w10, w0, w13
                    0x000003ffa056fca8: sxtw	x13, w12
  0.01%    0.01%    0x000003ffa056fcac: cbz	w12, 0x000003ffa056fd8c
  0.01%    0.04%    0x000003ffa056fcb0: cmp	x14, x13
                    0x000003ffa056fcb4: b.cs	0x000003ffa056fd8c
                    0x000003ffa056fcb8: and	w12, w10, #0x3
  0.01%    0.04%    0x000003ffa056fcbc: sub	w13, w18, #0x3
  0.03%    0.04%    0x000003ffa056fcc0: cmp	w18, w13
  0.04%    0.10%    0x000003ffa056fcc4: csel	w10, w2, w13, lt
                    0x000003ffa056fcc8: add	w13, w12, #0x1
           0.06%    0x000003ffa056fccc: cmp	w13, w18
  0.03%    0.06%    0x000003ffa056fcd0: csel	w12, w13, w18, lt
                    0x000003ffa056fcd4: mov	w14, wzr        ;*aload_0
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
  0.13%    0.09%    0x000003ffa056fcd8: sbfiz	x13, x14, #2, #32  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
  0.15%    0.04%    0x000003ffa056fcdc: add	x21, x20, x13   ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@80 (line 57)
                    0x000003ffa056fce0: add	x16, x19, x13
  0.07%    0.03%    0x000003ffa056fce4: ldr	w13, [x21,#16]
  0.03%    0.03%    0x000003ffa056fce8: ldr	w16, [x16,#16]  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
  0.18%    0.13%    0x000003ffa056fcec: madd	w16, w16, w11, w13
  0.16%    0.25%    0x000003ffa056fcf0: str	w16, [x21,#16]  ;*iastore
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@101 (line 57)
                    0x000003ffa056fcf4: add	w14, w14, #0x1  ;*iadd
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@108 (line 56)
  0.10%    0.04%    0x000003ffa056fcf8: str	w14, [x1,#20]   ;*putfield j
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@109 (line 56)
                    0x000003ffa056fcfc: cmp	w14, w12
                    0x000003ffa056fd00: b.lt	0x000003ffa056fcd8  ;*if_icmpge
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@63 (line 56)
  0.03%    0.01%    0x000003ffa056fd04: cmp	w14, w10
                    0x000003ffa056fd08: b.ge	0x000003ffa056fd40
                    0x000003ffa056fd0c: dup	v16.4s, w11     ;*aload_0
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
  4.08%    3.75%    0x000003ffa056fd10: sbfiz	x12, x14, #2, #32  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
  4.22%    3.51%    0x000003ffa056fd14: add	x13, x19, x12
  4.08%    3.88%    0x000003ffa056fd18: ldr	q17, [x13,#16]
 17.29%   19.84%    0x000003ffa056fd1c: add	x12, x20, x12   ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@80 (line 57)
 10.88%   15.93%    0x000003ffa056fd20: mul	v17.4s, v17.4s, v16.4s
  7.26%    9.85%    0x000003ffa056fd24: ldr	q18, [x12,#16]
 15.06%   15.34%    0x000003ffa056fd28: add	v17.4s, v17.4s, v18.4s
 18.88%   11.48%    0x000003ffa056fd2c: str	q17, [x12,#16]  ;*iastore
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@101 (line 57)
                    0x000003ffa056fd30: add	w14, w14, #0x4  ;*iadd
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@108 (line 56)
  7.26%    5.76%    0x000003ffa056fd34: str	w14, [x1,#20]   ;*putfield j
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@109 (line 56)
                    0x000003ffa056fd38: cmp	w14, w10
                    0x000003ffa056fd3c: b.lt	0x000003ffa056fd10  ;*if_icmpge
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@63 (line 56)
  0.25%    0.36%    0x000003ffa056fd40: cmp	w14, w18
                    0x000003ffa056fd44: b.lt	0x000003ffa056fbb4
                    0x000003ffa056fd48: b	0x000003ffa056fbe0
                    0x000003ffa056fd4c: ldr	w10, [x1,#12]   ;*getfield N
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@26 (line 54)
                    0x000003ffa056fd50: b	0x000003ffa056fb80
                    0x000003ffa056fd54: str	x15, [sp,#8]
                    0x000003ffa056fd58: str	x1, [sp,#16]
                    0x000003ffa056fd5c: str	x19, [sp,#24]
                    0x000003ffa056fd60: str	w4, [sp,#32]
....................................................................................................
 92.91%   93.16%  <total for region 1>

....[Hottest Regions]...............................................................................
 92.91%   93.16%         C2, level 4  mat_mul.MyBenchmark::loop_ikj, version 582 (396 bytes) 
  1.19%    1.19%   [kernel.kallsyms]  finish_task_switch (0 bytes) 
  0.48%    0.13%   [kernel.kallsyms]  _raw_spin_unlock_irqrestore (0 bytes) 
  0.16%    0.06%        libc-2.17.so  _IO_fwrite (40 bytes) 
  0.15%    0.21%   [kernel.kallsyms]  __ll_sc_atomic_add_return_release (28 bytes) 
  0.09%    0.21%   [kernel.kallsyms]  __ll_sc___cmpxchg_case_mb_8 (8 bytes) 
  0.07%            [kernel.kallsyms]  __block_write_begin (32 bytes) 
  0.07%    0.16%   [kernel.kallsyms]  __ll_sc_atomic_sub_return_acquire (28 bytes) 
  0.07%    0.15%   [kernel.kallsyms]  __ll_sc_atomic64_sub_return (20 bytes) 
  0.07%    0.09%   [kernel.kallsyms]  clear_bit (8 bytes) 
  0.07%    0.06%           libjvm.so  [unknown] (12 bytes) 
  0.07%    0.09%           libjvm.so  [unknown] (64 bytes) 
  0.07%    0.06%        libc-2.17.so  vfprintf (100 bytes) 
  0.06%    0.06%   [kernel.kallsyms]  pipe_write (96 bytes) 
  0.06%            [kernel.kallsyms]  __ll_sc_atomic_add (8 bytes) 
  0.06%    0.04%           libjvm.so  [unknown] (40 bytes) 
  0.06%    0.01%        libc-2.17.so  mempcpy (16 bytes) 
  0.06%    0.09%  libpthread-2.17.so  __pthread_disable_asynccancel (12 bytes) 
  0.06%    0.07%  libpthread-2.17.so  __libc_write (48 bytes) 
  0.04%    0.01%   [kernel.kallsyms]  syscall_trace_exit (16 bytes) 
  4.10%    4.10%  <...other 353 warm regions...>
....................................................................................................
100.00%   99.99%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 92.91%   93.16%         C2, level 4  mat_mul.MyBenchmark::loop_ikj, version 582 
  1.19%    1.19%   [kernel.kallsyms]  finish_task_switch 
  0.94%    1.12%           libjvm.so  [unknown] 
  0.48%    0.13%   [kernel.kallsyms]  _raw_spin_unlock_irqrestore 
  0.30%    0.34%        libc-2.17.so  vfprintf 
  0.22%    0.21%        libc-2.17.so  _IO_fwrite 
  0.15%    0.21%   [kernel.kallsyms]  __ll_sc_atomic_add_return_release 
  0.15%    0.13%   [kernel.kallsyms]  pipe_write 
  0.10%    0.16%   [kernel.kallsyms]  vfs_write 
  0.10%    0.21%   [kernel.kallsyms]  __ll_sc___cmpxchg_case_mb_8 
  0.09%    0.01%   [kernel.kallsyms]  syscall_trace_exit 
  0.09%    0.01%   [kernel.kallsyms]  __block_write_begin 
  0.07%    0.16%   [kernel.kallsyms]  __ll_sc_atomic_sub_return_acquire 
  0.07%    0.09%        libc-2.17.so  strlen 
  0.07%    0.15%   [kernel.kallsyms]  __ll_sc_atomic64_sub_return 
  0.07%    0.07%        libc-2.17.so  _IO_fflush 
  0.07%    0.04%   [kernel.kallsyms]  copy_page_from_iter 
  0.07%    0.07%   [kernel.kallsyms]  ext4_do_update_inode 
  0.07%    0.09%   [kernel.kallsyms]  clear_bit 
  0.06%    0.10%  libpthread-2.17.so  __pthread_disable_asynccancel 
  2.70%    1.54%  <...other 119 warm methods...>
....................................................................................................
100.00%   99.24%  <totals>

....[Distribution by Source]........................................................................
 92.91%   93.16%         C2, level 4
  4.44%    3.70%   [kernel.kallsyms]
  1.00%    1.15%           libjvm.so
  0.98%    1.24%        libc-2.17.so
  0.42%    0.45%    hsdis-aarch64.so
  0.16%    0.24%  libpthread-2.17.so
  0.04%    0.03%         interpreter
  0.01%                       [vdso]
  0.01%                libz.so.1.2.7
  0.01%             Unknown, level 0
....................................................................................................
100.00%   99.99%  <totals>

PrintAssembly processed: 194768 total address lines.
Perf output processed (skipped 23.158 seconds):
 Column 1: cycles (6652 events)
 Column 2: instructions (6654 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
C2, level 4, mat_mul.MyBenchmark::loop_ikj, version 584 (396 bytes) 

                    0x000003ff9856ef9c: str	wzr, [x1,#24]   ;*putfield k
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@18 (line 54)
                    0x000003ff9856efa0: cmp	w18, #0x0
                    0x000003ff9856efa4: b.le	0x000003ff9856f14c  ;*if_icmpge
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@29 (line 54)
                    0x000003ff9856efa8: sbfiz	x7, x4, #2, #32  ;*aaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@74 (line 57)
                    0x000003ff9856efac: mov	w5, wzr
                    0x000003ff9856efb0: b	0x000003ff9856f004      ;*aload_0
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
  0.06%    0.14%    0x000003ff9856efb4: sbfiz	x10, x14, #2, #32  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
  0.03%    0.11%    0x000003ff9856efb8: add	x13, x20, x10   ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@80 (line 57)
                    0x000003ff9856efbc: add	x12, x19, x10
  0.05%    0.09%    0x000003ff9856efc0: ldr	w10, [x13,#16]
  0.09%    0.05%    0x000003ff9856efc4: ldr	w12, [x12,#16]  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
  0.29%    0.26%    0x000003ff9856efc8: madd	w10, w12, w11, w10
  0.17%    0.11%    0x000003ff9856efcc: str	w10, [x13,#16]  ;*iastore
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@101 (line 57)
                    0x000003ff9856efd0: add	w14, w14, #0x1  ;*iadd
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@108 (line 56)
  0.12%    0.09%    0x000003ff9856efd4: str	w14, [x1,#20]   ;*putfield j
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@109 (line 56)
                    0x000003ff9856efd8: cmp	w14, w18
                    0x000003ff9856efdc: b.lt	0x000003ff9856efb4  ;*aload_0
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
  0.03%    0.03%    0x000003ff9856efe0: mov	w18, w17        ;*getfield N
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@26 (line 54)
                    0x000003ff9856efe4: add	w5, w5, #0x1    ;*iadd
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@121 (line 54)
  0.02%    0.03%    0x000003ff9856efe8: str	w5, [x1,#24]    ; OopMap{r15=Oop c_rarg1=Oop off=236}
                                                                  ;*goto
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@125 (line 54)
  0.06%             0x000003ff9856efec: ldr	wzr, [x3]       ;*goto
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@125 (line 54)
                                                                  ;   {poll}
           0.03%    0x000003ff9856eff0: ldr	w10, [x1,#12]   ;*getfield N
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@26 (line 54)
                    0x000003ff9856eff4: cmp	w5, w18
                    0x000003ff9856eff8: b.ge	0x000003ff9856ef7c
  0.03%    0.03%    0x000003ff9856effc: mov	w18, w17
                    0x000003ff9856f000: mov	w17, w10        ;*getfield N
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@60 (line 56)
  0.02%             0x000003ff9856f004: ldr	w10, [x1,#40]
                    0x000003ff9856f008: lsl	x19, x10, #3    ;*getfield shm
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@34 (line 55)
  0.14%    0.06%    0x000003ff9856f00c: ldr	w10, [x19,#12]  ; implicit exception: dispatches to 0x000003ff9856f1b0
                    0x000003ff9856f010: add	x11, x19, x7
           0.09%    0x000003ff9856f014: cmp	w4, w10
                    0x000003ff9856f018: b.cs	0x000003ff9856f154
  0.05%    0.09%    0x000003ff9856f01c: ldr	w12, [x11,#16]
  0.03%    0.03%    0x000003ff9856f020: lsl	x11, x12, #3    ;*aaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@41 (line 55)
                    0x000003ff9856f024: sbfiz	x13, x5, #2, #32  ;*aaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@93 (line 57)
  0.14%    0.18%    0x000003ff9856f028: ldr	w12, [x11,#12]  ; implicit exception: dispatches to 0x000003ff9856f1c0
  0.03%             0x000003ff9856f02c: add	x14, x11, x13
  0.02%    0.06%    0x000003ff9856f030: cmp	w5, w12
                    0x000003ff9856f034: b.cs	0x000003ff9856f170
  0.05%    0.02%    0x000003ff9856f038: ldr	w11, [x14,#16]  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@46 (line 55)
  0.24%    0.09%    0x000003ff9856f03c: str	w11, [x1,#32]   ;*putfield aik
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@47 (line 55)
  0.06%    0.03%    0x000003ff9856f040: str	wzr, [x1,#20]   ;*putfield j
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@52 (line 56)
                    0x000003ff9856f044: cmp	w18, #0x0
                    0x000003ff9856f048: b.le	0x000003ff9856efe4  ;*if_icmpge
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@63 (line 56)
  0.03%    0.02%    0x000003ff9856f04c: ldr	w12, [x1,#44]
           0.02%    0x000003ff9856f050: lsl	x12, x12, #3    ;*getfield res
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@67 (line 57)
  0.11%    0.11%    0x000003ff9856f054: ldr	w16, [x12,#12]  ; implicit exception: dispatches to 0x000003ff9856f18c
                    0x000003ff9856f058: add	x12, x12, x7
  0.02%    0.05%    0x000003ff9856f05c: cmp	w4, w16
                    0x000003ff9856f060: b.cs	0x000003ff9856f18c  ;*aload_0
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
  0.05%    0.03%    0x000003ff9856f064: ldr	w12, [x12,#16]
  0.02%    0.06%    0x000003ff9856f068: lsl	x20, x12, #3    ;*aaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@74 (line 57)
  0.12%    0.11%    0x000003ff9856f06c: ldr	w12, [x20,#12]  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@80 (line 57)
                                                                  ; implicit exception: dispatches to 0x000003ff9856f18c
                    0x000003ff9856f070: add	x13, x19, x13
  0.02%    0.05%    0x000003ff9856f074: add	x14, x6, w18, sxtw
                    0x000003ff9856f078: sxtw	x16, w12
  0.02%    0.03%    0x000003ff9856f07c: cbz	w12, 0x000003ff9856f18c
           0.06%    0x000003ff9856f080: cmp	x14, x16
                    0x000003ff9856f084: b.cs	0x000003ff9856f18c
  0.02%    0.03%    0x000003ff9856f088: cmp	w5, w10
                    0x000003ff9856f08c: b.cs	0x000003ff9856f18c  ;*aload_0
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
  0.05%    0.05%    0x000003ff9856f090: ldr	w12, [x13,#16]
  0.05%    0.06%    0x000003ff9856f094: lsl	x19, x12, #3    ;*aaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@93 (line 57)
  0.08%    0.06%    0x000003ff9856f098: ldr	w12, [x19,#12]  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
                                                                  ; implicit exception: dispatches to 0x000003ff9856f18c
  0.12%    0.03%    0x000003ff9856f09c: mov	w10, w20
           0.03%    0x000003ff9856f0a0: ubfx	w13, w10, #2, #2
  0.06%    0.06%    0x000003ff9856f0a4: sub	w10, w0, w13
                    0x000003ff9856f0a8: sxtw	x13, w12
           0.02%    0x000003ff9856f0ac: cbz	w12, 0x000003ff9856f18c
  0.02%    0.05%    0x000003ff9856f0b0: cmp	x14, x13
                    0x000003ff9856f0b4: b.cs	0x000003ff9856f18c
                    0x000003ff9856f0b8: and	w12, w10, #0x3
           0.08%    0x000003ff9856f0bc: sub	w13, w18, #0x3
  0.02%    0.03%    0x000003ff9856f0c0: cmp	w18, w13
  0.11%    0.06%    0x000003ff9856f0c4: csel	w10, w2, w13, lt
                    0x000003ff9856f0c8: add	w13, w12, #0x1
  0.05%    0.06%    0x000003ff9856f0cc: cmp	w13, w18
  0.02%    0.03%    0x000003ff9856f0d0: csel	w12, w13, w18, lt
                    0x000003ff9856f0d4: mov	w14, wzr        ;*aload_0
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
  0.08%    0.03%    0x000003ff9856f0d8: sbfiz	x13, x14, #2, #32  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
  0.02%    0.11%    0x000003ff9856f0dc: add	x21, x20, x13   ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@80 (line 57)
                    0x000003ff9856f0e0: add	x16, x19, x13
  0.09%    0.09%    0x000003ff9856f0e4: ldr	w13, [x21,#16]
  0.05%    0.05%    0x000003ff9856f0e8: ldr	w16, [x16,#16]  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
  0.23%    0.24%    0x000003ff9856f0ec: madd	w16, w16, w11, w13
  0.11%    0.12%    0x000003ff9856f0f0: str	w16, [x21,#16]  ;*iastore
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@101 (line 57)
                    0x000003ff9856f0f4: add	w14, w14, #0x1  ;*iadd
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@108 (line 56)
  0.12%    0.08%    0x000003ff9856f0f8: str	w14, [x1,#20]   ;*putfield j
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@109 (line 56)
                    0x000003ff9856f0fc: cmp	w14, w12
                    0x000003ff9856f100: b.lt	0x000003ff9856f0d8  ;*if_icmpge
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@63 (line 56)
  0.03%    0.02%    0x000003ff9856f104: cmp	w14, w10
                    0x000003ff9856f108: b.ge	0x000003ff9856f140
  0.11%    0.05%    0x000003ff9856f10c: dup	v16.4s, w11     ;*aload_0
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
  3.79%    3.25%    0x000003ff9856f110: sbfiz	x12, x14, #2, #32  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
  4.13%    4.25%    0x000003ff9856f114: add	x13, x19, x12
  3.97%    3.83%    0x000003ff9856f118: ldr	q17, [x13,#16]
 17.84%   20.53%    0x000003ff9856f11c: add	x12, x20, x12   ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@80 (line 57)
 12.00%   15.75%    0x000003ff9856f120: mul	v17.4s, v17.4s, v16.4s
  6.81%    9.96%    0x000003ff9856f124: ldr	q18, [x12,#16]
 15.03%   17.28%    0x000003ff9856f128: add	v17.4s, v17.4s, v18.4s
 19.08%   12.04%    0x000003ff9856f12c: str	q17, [x12,#16]  ;*iastore
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@101 (line 57)
                    0x000003ff9856f130: add	w14, w14, #0x4  ;*iadd
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@108 (line 56)
  7.26%    3.02%    0x000003ff9856f134: str	w14, [x1,#20]   ;*putfield j
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@109 (line 56)
                    0x000003ff9856f138: cmp	w14, w10
                    0x000003ff9856f13c: b.lt	0x000003ff9856f110  ;*if_icmpge
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@63 (line 56)
  0.30%    0.26%    0x000003ff9856f140: cmp	w14, w18
                    0x000003ff9856f144: b.lt	0x000003ff9856efb4
                    0x000003ff9856f148: b	0x000003ff9856efe0
                    0x000003ff9856f14c: ldr	w10, [x1,#12]   ;*getfield N
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@26 (line 54)
                    0x000003ff9856f150: b	0x000003ff9856ef80
                    0x000003ff9856f154: str	x15, [sp,#8]
                    0x000003ff9856f158: str	x1, [sp,#16]
                    0x000003ff9856f15c: str	x19, [sp,#24]
                    0x000003ff9856f160: str	w4, [sp,#32]
....................................................................................................
 93.63%   93.67%  <total for region 1>

....[Hottest Regions]...............................................................................
 93.63%   93.67%         C2, level 4  mat_mul.MyBenchmark::loop_ikj, version 584 (396 bytes) 
  0.32%    0.32%   [kernel.kallsyms]  finish_task_switch (8 bytes) 
  0.26%    0.11%   [kernel.kallsyms]  _raw_spin_unlock_irqrestore (0 bytes) 
  0.15%    0.06%   [kernel.kallsyms]  clear_bit (0 bytes) 
  0.12%    0.24%  libpthread-2.17.so  __pthread_disable_asynccancel (12 bytes) 
  0.11%    0.05%        libc-2.17.so  strlen (92 bytes) 
  0.09%    0.03%   [kernel.kallsyms]  __fget (48 bytes) 
  0.09%    0.06%   [kernel.kallsyms]  __ll_sc___cmpxchg_case_mb_8 (0 bytes) 
  0.09%    0.05%           libjvm.so  JVM_IsInterrupted (44 bytes) 
  0.09%    0.05%  libpthread-2.17.so  __pthread_enable_asynccancel (28 bytes) 
  0.08%    0.06%   [kernel.kallsyms]  vfs_write (72 bytes) 
  0.08%    0.03%   [kernel.kallsyms]  __fget_light (60 bytes) 
  0.08%    0.09%   [kernel.kallsyms]  __ll_sc_atomic_sub_return_acquire (8 bytes) 
  0.08%            [kernel.kallsyms]  copy_page_from_iter (28 bytes) 
  0.08%            [kernel.kallsyms]  copy_page_from_iter (64 bytes) 
  0.06%            [kernel.kallsyms]  syscall_trace_enter (28 bytes) 
  0.06%    0.17%   [kernel.kallsyms]  __ll_sc_atomic_add_return_release (16 bytes) 
  0.06%    0.03%   [kernel.kallsyms]  _raw_spin_lock (8 bytes) 
  0.06%    0.03%           libjvm.so  JVM_IsInterrupted (56 bytes) 
  0.06%    0.12%           libjvm.so  JVM_IsInterrupted (52 bytes) 
  4.39%    4.85%  <...other 359 warm regions...>
....................................................................................................
100.00%  100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 93.63%   93.67%         C2, level 4  mat_mul.MyBenchmark::loop_ikj, version 584 
  0.75%    1.14%           libjvm.so  JVM_IsInterrupted 
  0.32%    0.32%   [kernel.kallsyms]  finish_task_switch 
  0.26%    0.11%   [kernel.kallsyms]  _raw_spin_unlock_irqrestore 
  0.26%    0.20%           libjvm.so  [unknown] 
  0.21%    0.33%        libc-2.17.so  vfprintf 
  0.17%    0.02%   [kernel.kallsyms]  copy_page_from_iter 
  0.15%    0.08%   [kernel.kallsyms]  clear_bit 
  0.14%    0.17%        libc-2.17.so  _IO_fwrite 
  0.12%    0.26%  libpthread-2.17.so  __pthread_disable_asynccancel 
  0.12%    0.03%   [kernel.kallsyms]  __fget 
  0.12%    0.06%        libc-2.17.so  strlen 
  0.12%    0.03%   [kernel.kallsyms]  __audit_syscall_exit 
  0.11%    0.14%   [kernel.kallsyms]  vfs_write 
  0.11%    0.15%        libc-2.17.so  _IO_default_xsputn 
  0.11%    0.08%   [kernel.kallsyms]  pipe_write 
  0.09%    0.05%  libpthread-2.17.so  __pthread_enable_asynccancel 
  0.09%            [kernel.kallsyms]  syscall_trace_enter 
  0.09%    0.06%   [kernel.kallsyms]  __ll_sc___cmpxchg_case_mb_8 
  0.08%    0.09%   [kernel.kallsyms]  __ll_sc_atomic_sub_return_acquire 
  2.99%    1.98%  <...other 117 warm methods...>
....................................................................................................
100.00%   98.93%  <totals>

....[Distribution by Source]........................................................................
 93.63%   93.69%         C2, level 4
  3.55%    2.90%   [kernel.kallsyms]
  1.05%    1.26%        libc-2.17.so
  1.02%    1.37%           libjvm.so
  0.44%    0.42%    hsdis-aarch64.so
  0.27%    0.33%  libpthread-2.17.so
  0.03%    0.03%         interpreter
  0.02%                  C1, level 3
....................................................................................................
100.00%  100.00%  <totals>



# JMH version: 1.19
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.151-1.b12.el7_4.aarch64/jre/bin/java
# VM options: -XX:+UnlockDiagnosticVMOptions -XX:CompileCommand=print,MyBenchmark
# Warmup: 3 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: mat_mul.MyBenchmark.loop_ikj
# Parameters: (N_str = 1024)

# Run progress: 90.00% complete, ETA 00:03:00
# Fork: 1 of 2
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 2.609 s/op
# Warmup Iteration   2: 2.453 s/op
# Warmup Iteration   3: 3.329 s/op
Iteration   1: 3.334 s/op
Iteration   2: 3.333 s/op
Iteration   3: 3.332 s/op
Iteration   4: 3.342 s/op
Iteration   5: 3.346 s/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 95.00% complete, ETA 00:01:28
# Fork: 2 of 2
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 2.611 s/op
# Warmup Iteration   2: 2.472 s/op
# Warmup Iteration   3: 3.348 s/op
Iteration   1: 3.342 s/op
Iteration   2: 3.345 s/op
Iteration   3: 3.332 s/op
Iteration   4: 3.332 s/op
Iteration   5: 3.333 s/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "mat_mul.MyBenchmark.loop_ikj":
  3.337 ?(99.9%) 0.009 s/op [Average]
  (min, avg, max) = (3.332, 3.337, 3.346), stdev = 0.006
  CI (99.9%): [3.328, 3.346] (assumes normal distribution)

Secondary result "mat_mul.MyBenchmark.loop_ikj:?asm":
PrintAssembly processed: 197298 total address lines.
Perf output processed (skipped 27.928 seconds):
 Column 1: cycles (16834 events)
 Column 2: instructions (17036 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
C2, level 4, mat_mul.MyBenchmark::loop_ikj, version 600 (396 bytes) 

                    0x000003ff9c57f45c: str	wzr, [x1,#24]   ;*putfield k
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@18 (line 54)
                    0x000003ff9c57f460: cmp	w0, #0x0
                    0x000003ff9c57f464: b.le	0x000003ff9c57f658  ;*if_icmpge
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@29 (line 54)
                    0x000003ff9c57f468: sbfiz	x7, x2, #2, #32  ;*aaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@74 (line 57)
                    0x000003ff9c57f46c: mov	w4, wzr
                    0x000003ff9c57f470: b	0x000003ff9c57f4c4      ;*aload_0
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
  0.08%    0.08%    0x000003ff9c57f474: sbfiz	x10, x14, #2, #32  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
  0.05%    0.02%    0x000003ff9c57f478: add	x13, x19, x10   ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@80 (line 57)
                    0x000003ff9c57f47c: add	x12, x20, x10
  0.02%    0.04%    0x000003ff9c57f480: ldr	w10, [x13,#16]
  0.04%    0.02%    0x000003ff9c57f484: ldr	w12, [x12,#16]  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
  0.14%    0.23%    0x000003ff9c57f488: madd	w12, w12, w11, w10
  0.10%    0.05%    0x000003ff9c57f48c: str	w12, [x13,#16]  ;*iastore
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@101 (line 57)
                    0x000003ff9c57f490: add	w14, w14, #0x1  ;*iadd
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@108 (line 56)
  0.10%    0.06%    0x000003ff9c57f494: str	w14, [x1,#20]   ;*putfield j
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@109 (line 56)
                    0x000003ff9c57f498: cmp	w14, w0
                    0x000003ff9c57f49c: b.lt	0x000003ff9c57f474  ;*aload_0
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
  0.01%    0.01%    0x000003ff9c57f4a0: mov	w0, w17         ;*getfield N
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@26 (line 54)
                    0x000003ff9c57f4a4: add	w4, w4, #0x1    ;*iadd
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@121 (line 54)
  0.03%    0.01%    0x000003ff9c57f4a8: str	w4, [x1,#24]    ; OopMap{r15=Oop c_rarg1=Oop off=236}
                                                                  ;*goto
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@125 (line 54)
  0.02%    0.02%    0x000003ff9c57f4ac: ldr	wzr, [x5]       ;*goto
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@125 (line 54)
                                                                  ;   {poll}
  0.02%    0.02%    0x000003ff9c57f4b0: ldr	w11, [x1,#12]   ;*getfield N
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@26 (line 54)
                    0x000003ff9c57f4b4: cmp	w4, w0
                    0x000003ff9c57f4b8: b.ge	0x000003ff9c57f43c
                    0x000003ff9c57f4bc: mov	w0, w17
                    0x000003ff9c57f4c0: mov	w17, w11        ;*getfield N
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@60 (line 56)
  0.01%    0.02%    0x000003ff9c57f4c4: ldr	w10, [x1,#40]
                    0x000003ff9c57f4c8: lsl	x16, x10, #3    ;*getfield shm
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@34 (line 55)
  0.04%    0.06%    0x000003ff9c57f4cc: ldr	w10, [x16,#12]  ; implicit exception: dispatches to 0x000003ff9c57f670
                    0x000003ff9c57f4d0: add	x11, x16, x7
  0.01%    0.02%    0x000003ff9c57f4d4: cmp	w2, w10
                    0x000003ff9c57f4d8: b.cs	0x000003ff9c57f60c
  0.02%    0.01%    0x000003ff9c57f4dc: ldr	w11, [x11,#16]
  0.01%    0.02%    0x000003ff9c57f4e0: lsl	x11, x11, #3    ;*aaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@41 (line 55)
                    0x000003ff9c57f4e4: sbfiz	x13, x4, #2, #32  ;*aaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@93 (line 57)
  0.05%    0.09%    0x000003ff9c57f4e8: ldr	w12, [x11,#12]  ; implicit exception: dispatches to 0x000003ff9c57f680
  0.01%             0x000003ff9c57f4ec: add	x14, x11, x13
  0.03%    0.04%    0x000003ff9c57f4f0: cmp	w4, w12
                    0x000003ff9c57f4f4: b.cs	0x000003ff9c57f628
  0.01%    0.02%    0x000003ff9c57f4f8: ldr	w11, [x14,#16]  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@46 (line 55)
  0.07%    0.09%    0x000003ff9c57f4fc: str	w11, [x1,#32]   ;*putfield aik
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@47 (line 55)
  0.06%    0.01%    0x000003ff9c57f500: str	wzr, [x1,#20]   ;*putfield j
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@52 (line 56)
                    0x000003ff9c57f504: cmp	w0, #0x0
                    0x000003ff9c57f508: b.le	0x000003ff9c57f4a4  ;*if_icmpge
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@63 (line 56)
  0.01%    0.01%    0x000003ff9c57f50c: ldr	w14, [x1,#44]
                    0x000003ff9c57f510: lsl	x12, x14, #3    ;*getfield res
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@67 (line 57)
  0.02%    0.03%    0x000003ff9c57f514: ldr	w14, [x12,#12]  ; implicit exception: dispatches to 0x000003ff9c57f644
                    0x000003ff9c57f518: add	x12, x12, x7
  0.01%    0.03%    0x000003ff9c57f51c: cmp	w2, w14
                    0x000003ff9c57f520: b.cs	0x000003ff9c57f644  ;*aload_0
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
  0.01%    0.04%    0x000003ff9c57f524: ldr	w14, [x12,#16]
  0.02%    0.04%    0x000003ff9c57f528: lsl	x19, x14, #3    ;*aaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@74 (line 57)
  0.05%    0.09%    0x000003ff9c57f52c: ldr	w14, [x19,#12]  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@80 (line 57)
                                                                  ; implicit exception: dispatches to 0x000003ff9c57f644
                    0x000003ff9c57f530: add	x12, x16, x13
           0.01%    0x000003ff9c57f534: add	x13, x6, w0, sxtw
                    0x000003ff9c57f538: sxtw	x16, w14
  0.02%    0.04%    0x000003ff9c57f53c: cbz	w14, 0x000003ff9c57f644
  0.01%    0.02%    0x000003ff9c57f540: cmp	x13, x16
                    0x000003ff9c57f544: b.cs	0x000003ff9c57f644
  0.02%    0.01%    0x000003ff9c57f548: cmp	w4, w10
                    0x000003ff9c57f54c: b.cs	0x000003ff9c57f644  ;*aload_0
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
  0.05%    0.02%    0x000003ff9c57f550: ldr	w10, [x12,#16]
  0.04%    0.03%    0x000003ff9c57f554: lsl	x20, x10, #3    ;*aaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@93 (line 57)
  0.05%    0.02%    0x000003ff9c57f558: ldr	w12, [x20,#12]  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
                                                                  ; implicit exception: dispatches to 0x000003ff9c57f644
  0.05%    0.04%    0x000003ff9c57f55c: mov	w14, w19
  0.01%    0.03%    0x000003ff9c57f560: ubfx	w10, w14, #2, #2
  0.04%    0.04%    0x000003ff9c57f564: sub	w14, w3, w10
                    0x000003ff9c57f568: sxtw	x10, w12
  0.02%    0.02%    0x000003ff9c57f56c: cbz	w12, 0x000003ff9c57f644
  0.01%    0.02%    0x000003ff9c57f570: cmp	x13, x10
                    0x000003ff9c57f574: b.cs	0x000003ff9c57f644
                    0x000003ff9c57f578: and	w13, w14, #0x3
  0.02%    0.02%    0x000003ff9c57f57c: sub	w10, w0, #0x3
  0.01%    0.04%    0x000003ff9c57f580: cmp	w0, w10
  0.03%    0.01%    0x000003ff9c57f584: csel	w10, w18, w10, lt
                    0x000003ff9c57f588: add	w12, w13, #0x1
  0.03%    0.03%    0x000003ff9c57f58c: cmp	w12, w0
           0.01%    0x000003ff9c57f590: csel	w12, w12, w0, lt
                    0x000003ff9c57f594: mov	w14, wzr        ;*aload_0
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
  0.02%    0.06%    0x000003ff9c57f598: sbfiz	x13, x14, #2, #32  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
  0.02%    0.03%    0x000003ff9c57f59c: add	x21, x19, x13   ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@80 (line 57)
                    0x000003ff9c57f5a0: add	x16, x20, x13
  0.05%    0.05%    0x000003ff9c57f5a4: ldr	w13, [x21,#16]
  0.04%    0.03%    0x000003ff9c57f5a8: ldr	w16, [x16,#16]  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
  0.09%    0.08%    0x000003ff9c57f5ac: madd	w13, w16, w11, w13
  0.07%    0.08%    0x000003ff9c57f5b0: str	w13, [x21,#16]  ;*iastore
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@101 (line 57)
                    0x000003ff9c57f5b4: add	w14, w14, #0x1  ;*iadd
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@108 (line 56)
  0.04%    0.10%    0x000003ff9c57f5b8: str	w14, [x1,#20]   ;*putfield j
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@109 (line 56)
                    0x000003ff9c57f5bc: cmp	w14, w12
                    0x000003ff9c57f5c0: b.lt	0x000003ff9c57f598  ;*if_icmpge
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@63 (line 56)
           0.01%    0x000003ff9c57f5c4: cmp	w14, w10
                    0x000003ff9c57f5c8: b.ge	0x000003ff9c57f600
  0.02%             0x000003ff9c57f5cc: dup	v16.4s, w11     ;*aload_0
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
  4.47%    4.48%    0x000003ff9c57f5d0: sbfiz	x12, x14, #2, #32  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
  4.11%    3.71%    0x000003ff9c57f5d4: add	x13, x20, x12
  3.74%    4.32%    0x000003ff9c57f5d8: ldr	q17, [x13,#16]
 19.06%   21.68%    0x000003ff9c57f5dc: add	x12, x19, x12   ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@80 (line 57)
 12.62%   17.18%    0x000003ff9c57f5e0: mul	v17.4s, v17.4s, v16.4s
  7.78%   10.03%    0x000003ff9c57f5e4: ldr	q18, [x12,#16]
 15.66%   15.57%    0x000003ff9c57f5e8: add	v17.4s, v17.4s, v18.4s
 20.26%   12.02%    0x000003ff9c57f5ec: str	q17, [x12,#16]  ;*iastore
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@101 (line 57)
  0.01%             0x000003ff9c57f5f0: add	w14, w14, #0x4  ;*iadd
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@108 (line 56)
  7.54%    6.23%    0x000003ff9c57f5f4: str	w14, [x1,#20]   ;*putfield j
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@109 (line 56)
                    0x000003ff9c57f5f8: cmp	w14, w10
                    0x000003ff9c57f5fc: b.lt	0x000003ff9c57f5d0  ;*if_icmpge
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@63 (line 56)
  0.16%    0.16%    0x000003ff9c57f600: cmp	w14, w0
                    0x000003ff9c57f604: b.lt	0x000003ff9c57f474
                    0x000003ff9c57f608: b	0x000003ff9c57f4a0
                    0x000003ff9c57f60c: str	x15, [sp,#8]
                    0x000003ff9c57f610: str	x1, [sp,#16]
                    0x000003ff9c57f614: str	x16, [sp,#24]
                    0x000003ff9c57f618: str	w2, [sp,#32]
                    0x000003ff9c57f61c: mov	w1, #0xffffffe4            	// #-28
                    0x000003ff9c57f620: bl	0x000003ff9c0b15c0  ; OopMap{[8]=Oop [16]=Oop [24]=Oop off=612}
                                                                  ;*aaload
....................................................................................................
 97.19%   97.40%  <total for region 1>

....[Hottest Regions]...............................................................................
 97.19%   97.40%         C2, level 4  mat_mul.MyBenchmark::loop_ikj, version 600 (396 bytes) 
  0.56%    0.56%   [kernel.kallsyms]  finish_task_switch (0 bytes) 
  0.08%    0.02%   [kernel.kallsyms]  _raw_spin_unlock_irqrestore (0 bytes) 
  0.06%    0.05%   [kernel.kallsyms]  __ll_sc_atomic_sub_return_acquire (20 bytes) 
  0.05%    0.06%   [kernel.kallsyms]  __ll_sc_atomic_add_return_release (16 bytes) 
  0.04%    0.02%        libc-2.17.so  _IO_fwrite (0 bytes) 
  0.04%    0.02%  libpthread-2.17.so  __pthread_enable_asynccancel (40 bytes) 
  0.04%    0.06%   [kernel.kallsyms]  __ll_sc_atomic64_sub_return (24 bytes) 
  0.04%    0.01%           libjvm.so  [unknown] (44 bytes) 
  0.03%    0.03%   [kernel.kallsyms]  __block_write_begin (40 bytes) 
  0.03%    0.06%   [kernel.kallsyms]  __ll_sc___cmpxchg_case_mb_8 (16 bytes) 
  0.03%    0.02%   [kernel.kallsyms]  clear_bit (8 bytes) 
  0.02%    0.01%   [kernel.kallsyms]  copy_page (4 bytes) 
  0.02%    0.01%   [kernel.kallsyms]  copy_page_from_iter (32 bytes) 
  0.02%    0.02%           libjvm.so  [unknown] (12 bytes) 
  0.02%    0.05%        libc-2.17.so  __strchrnul (172 bytes) 
  0.02%    0.03%   [kernel.kallsyms]  el0_svc_naked (0 bytes) 
  0.02%    0.01%   [kernel.kallsyms]  syscall_trace_enter (76 bytes) 
  0.02%    0.02%   [kernel.kallsyms]  __do_softirq (0 bytes) 
  0.02%    0.02%   [kernel.kallsyms]  current_kernel_time64 (64 bytes) 
  1.65%    1.54%  <...other 341 warm regions...>
....................................................................................................
100.00%  100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 97.19%   97.40%         C2, level 4  mat_mul.MyBenchmark::loop_ikj, version 600 
  0.56%    0.56%   [kernel.kallsyms]  finish_task_switch 
  0.40%    0.36%           libjvm.so  [unknown] 
  0.14%    0.11%        libc-2.17.so  vfprintf 
  0.08%    0.02%   [kernel.kallsyms]  _raw_spin_unlock_irqrestore 
  0.06%    0.05%   [kernel.kallsyms]  __ll_sc_atomic_sub_return_acquire 
  0.06%    0.05%        libc-2.17.so  _IO_fwrite 
  0.05%    0.06%   [kernel.kallsyms]  __ll_sc_atomic_add_return_release 
  0.04%    0.02%  libpthread-2.17.so  __pthread_enable_asynccancel 
  0.04%    0.04%   [kernel.kallsyms]  __block_write_begin 
  0.04%    0.04%   [kernel.kallsyms]  vfs_write 
  0.04%    0.01%   [kernel.kallsyms]  copy_page_from_iter 
  0.04%    0.04%   [kernel.kallsyms]  pipe_write 
  0.04%    0.06%   [kernel.kallsyms]  __ll_sc_atomic64_sub_return 
  0.04%    0.02%        libc-2.17.so  _IO_fflush 
  0.03%    0.01%   [kernel.kallsyms]  syscall_trace_enter 
  0.03%    0.06%   [kernel.kallsyms]  __ll_sc___cmpxchg_case_mb_8 
  0.03%    0.02%   [kernel.kallsyms]  clear_bit 
  0.02%    0.01%   [kernel.kallsyms]  copy_page 
  0.02%    0.03%        libc-2.17.so  strlen 
  1.05%    0.73%  <...other 112 warm methods...>
....................................................................................................
100.00%   99.70%  <totals>

....[Distribution by Source]........................................................................
 97.20%   97.40%         C2, level 4
  1.76%    1.53%   [kernel.kallsyms]
  0.40%    0.36%           libjvm.so
  0.40%    0.46%        libc-2.17.so
  0.13%    0.12%    hsdis-aarch64.so
  0.09%    0.12%  libpthread-2.17.so
  0.01%                  interpreter
  0.01%                  C1, level 3
....................................................................................................
100.00%  100.00%  <totals>

PrintAssembly processed: 196164 total address lines.
Perf output processed (skipped 27.901 seconds):
 Column 1: cycles (17175 events)
 Column 2: instructions (17156 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
C2, level 4, mat_mul.MyBenchmark::loop_ikj, version 599 (396 bytes) 

                    0x000003ff9857d55c: str	wzr, [x1,#24]   ;*putfield k
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@18 (line 54)
                    0x000003ff9857d560: cmp	w0, #0x0
                    0x000003ff9857d564: b.le	0x000003ff9857d758  ;*if_icmpge
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@29 (line 54)
                    0x000003ff9857d568: sbfiz	x7, x2, #2, #32  ;*aaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@74 (line 57)
                    0x000003ff9857d56c: mov	w4, wzr
                    0x000003ff9857d570: b	0x000003ff9857d5c4      ;*aload_0
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
  0.06%    0.06%    0x000003ff9857d574: sbfiz	x10, x14, #2, #32  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
  0.01%    0.01%    0x000003ff9857d578: add	x13, x19, x10   ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@80 (line 57)
                    0x000003ff9857d57c: add	x12, x20, x10
  0.03%    0.05%    0x000003ff9857d580: ldr	w10, [x13,#16]
           0.02%    0x000003ff9857d584: ldr	w12, [x12,#16]  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
  0.16%    0.13%    0x000003ff9857d588: madd	w12, w12, w11, w10
  0.09%    0.06%    0x000003ff9857d58c: str	w12, [x13,#16]  ;*iastore
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@101 (line 57)
                    0x000003ff9857d590: add	w14, w14, #0x1  ;*iadd
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@108 (line 56)
  0.07%    0.07%    0x000003ff9857d594: str	w14, [x1,#20]   ;*putfield j
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@109 (line 56)
                    0x000003ff9857d598: cmp	w14, w0
                    0x000003ff9857d59c: b.lt	0x000003ff9857d574  ;*aload_0
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
  0.01%             0x000003ff9857d5a0: mov	w0, w17         ;*getfield N
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@26 (line 54)
                    0x000003ff9857d5a4: add	w4, w4, #0x1    ;*iadd
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@121 (line 54)
           0.01%    0x000003ff9857d5a8: str	w4, [x1,#24]    ; OopMap{r15=Oop c_rarg1=Oop off=236}
                                                                  ;*goto
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@125 (line 54)
  0.01%    0.01%    0x000003ff9857d5ac: ldr	wzr, [x5]       ;*goto
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@125 (line 54)
                                                                  ;   {poll}
  0.05%    0.03%    0x000003ff9857d5b0: ldr	w11, [x1,#12]   ;*getfield N
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@26 (line 54)
                    0x000003ff9857d5b4: cmp	w4, w0
                    0x000003ff9857d5b8: b.ge	0x000003ff9857d53c
  0.01%    0.01%    0x000003ff9857d5bc: mov	w0, w17
                    0x000003ff9857d5c0: mov	w17, w11        ;*getfield N
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@60 (line 56)
  0.02%    0.01%    0x000003ff9857d5c4: ldr	w10, [x1,#40]
                    0x000003ff9857d5c8: lsl	x16, x10, #3    ;*getfield shm
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@34 (line 55)
  0.06%    0.05%    0x000003ff9857d5cc: ldr	w10, [x16,#12]  ; implicit exception: dispatches to 0x000003ff9857d770
                    0x000003ff9857d5d0: add	x11, x16, x7
  0.02%    0.01%    0x000003ff9857d5d4: cmp	w2, w10
                    0x000003ff9857d5d8: b.cs	0x000003ff9857d70c
  0.03%    0.05%    0x000003ff9857d5dc: ldr	w11, [x11,#16]
  0.01%    0.02%    0x000003ff9857d5e0: lsl	x11, x11, #3    ;*aaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@41 (line 55)
                    0x000003ff9857d5e4: sbfiz	x13, x4, #2, #32  ;*aaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@93 (line 57)
  0.06%    0.10%    0x000003ff9857d5e8: ldr	w12, [x11,#12]  ; implicit exception: dispatches to 0x000003ff9857d780
                    0x000003ff9857d5ec: add	x14, x11, x13
  0.02%    0.01%    0x000003ff9857d5f0: cmp	w4, w12
                    0x000003ff9857d5f4: b.cs	0x000003ff9857d728
  0.02%    0.02%    0x000003ff9857d5f8: ldr	w11, [x14,#16]  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@46 (line 55)
  0.07%    0.05%    0x000003ff9857d5fc: str	w11, [x1,#32]   ;*putfield aik
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@47 (line 55)
  0.03%    0.02%    0x000003ff9857d600: str	wzr, [x1,#20]   ;*putfield j
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@52 (line 56)
                    0x000003ff9857d604: cmp	w0, #0x0
                    0x000003ff9857d608: b.le	0x000003ff9857d5a4  ;*if_icmpge
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@63 (line 56)
           0.01%    0x000003ff9857d60c: ldr	w14, [x1,#44]
                    0x000003ff9857d610: lsl	x12, x14, #3    ;*getfield res
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@67 (line 57)
  0.05%    0.07%    0x000003ff9857d614: ldr	w14, [x12,#12]  ; implicit exception: dispatches to 0x000003ff9857d744
           0.01%    0x000003ff9857d618: add	x12, x12, x7
  0.02%    0.02%    0x000003ff9857d61c: cmp	w2, w14
                    0x000003ff9857d620: b.cs	0x000003ff9857d744  ;*aload_0
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
  0.03%    0.02%    0x000003ff9857d624: ldr	w14, [x12,#16]
           0.03%    0x000003ff9857d628: lsl	x19, x14, #3    ;*aaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@74 (line 57)
  0.03%    0.06%    0x000003ff9857d62c: ldr	w14, [x19,#12]  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@80 (line 57)
                                                                  ; implicit exception: dispatches to 0x000003ff9857d744
                    0x000003ff9857d630: add	x12, x16, x13
  0.01%    0.03%    0x000003ff9857d634: add	x13, x6, w0, sxtw
                    0x000003ff9857d638: sxtw	x16, w14
  0.03%             0x000003ff9857d63c: cbz	w14, 0x000003ff9857d744
           0.02%    0x000003ff9857d640: cmp	x13, x16
                    0x000003ff9857d644: b.cs	0x000003ff9857d744
  0.02%    0.01%    0x000003ff9857d648: cmp	w4, w10
                    0x000003ff9857d64c: b.cs	0x000003ff9857d744  ;*aload_0
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
  0.02%    0.02%    0x000003ff9857d650: ldr	w10, [x12,#16]
  0.03%    0.03%    0x000003ff9857d654: lsl	x20, x10, #3    ;*aaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@93 (line 57)
  0.04%    0.03%    0x000003ff9857d658: ldr	w12, [x20,#12]  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
                                                                  ; implicit exception: dispatches to 0x000003ff9857d744
  0.03%    0.01%    0x000003ff9857d65c: mov	w14, w19
  0.02%    0.01%    0x000003ff9857d660: ubfx	w10, w14, #2, #2
  0.01%    0.04%    0x000003ff9857d664: sub	w14, w3, w10
                    0x000003ff9857d668: sxtw	x10, w12
           0.02%    0x000003ff9857d66c: cbz	w12, 0x000003ff9857d744
           0.01%    0x000003ff9857d670: cmp	x13, x10
                    0x000003ff9857d674: b.cs	0x000003ff9857d744
                    0x000003ff9857d678: and	w13, w14, #0x3
  0.02%    0.02%    0x000003ff9857d67c: sub	w10, w0, #0x3
  0.02%    0.03%    0x000003ff9857d680: cmp	w0, w10
  0.01%    0.01%    0x000003ff9857d684: csel	w10, w18, w10, lt
                    0x000003ff9857d688: add	w12, w13, #0x1
  0.01%    0.02%    0x000003ff9857d68c: cmp	w12, w0
  0.01%    0.03%    0x000003ff9857d690: csel	w12, w12, w0, lt
                    0x000003ff9857d694: mov	w14, wzr        ;*aload_0
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
  0.02%    0.08%    0x000003ff9857d698: sbfiz	x13, x14, #2, #32  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
  0.02%    0.04%    0x000003ff9857d69c: add	x21, x19, x13   ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@80 (line 57)
                    0x000003ff9857d6a0: add	x16, x20, x13
  0.04%    0.07%    0x000003ff9857d6a4: ldr	w13, [x21,#16]
  0.02%    0.06%    0x000003ff9857d6a8: ldr	w16, [x16,#16]  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
  0.10%    0.12%    0x000003ff9857d6ac: madd	w13, w16, w11, w13
  0.10%    0.10%    0x000003ff9857d6b0: str	w13, [x21,#16]  ;*iastore
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@101 (line 57)
                    0x000003ff9857d6b4: add	w14, w14, #0x1  ;*iadd
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@108 (line 56)
  0.06%    0.04%    0x000003ff9857d6b8: str	w14, [x1,#20]   ;*putfield j
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@109 (line 56)
                    0x000003ff9857d6bc: cmp	w14, w12
                    0x000003ff9857d6c0: b.lt	0x000003ff9857d698  ;*if_icmpge
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@63 (line 56)
  0.02%             0x000003ff9857d6c4: cmp	w14, w10
                    0x000003ff9857d6c8: b.ge	0x000003ff9857d700
  0.01%             0x000003ff9857d6cc: dup	v16.4s, w11     ;*aload_0
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
  4.48%    3.98%    0x000003ff9857d6d0: sbfiz	x12, x14, #2, #32  ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
  3.97%    3.83%    0x000003ff9857d6d4: add	x13, x20, x12
  3.80%    4.24%    0x000003ff9857d6d8: ldr	q17, [x13,#16]
 18.48%   21.86%    0x000003ff9857d6dc: add	x12, x19, x12   ;*iaload
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@80 (line 57)
 12.27%   17.28%    0x000003ff9857d6e0: mul	v17.4s, v17.4s, v16.4s
  7.98%   10.08%    0x000003ff9857d6e4: ldr	q18, [x12,#16]
 16.06%   15.56%    0x000003ff9857d6e8: add	v17.4s, v17.4s, v18.4s
 19.91%   11.72%    0x000003ff9857d6ec: str	q17, [x12,#16]  ;*iastore
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@101 (line 57)
                    0x000003ff9857d6f0: add	w14, w14, #0x4  ;*iadd
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@108 (line 56)
  7.82%    6.07%    0x000003ff9857d6f4: str	w14, [x1,#20]   ;*putfield j
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@109 (line 56)
                    0x000003ff9857d6f8: cmp	w14, w10
                    0x000003ff9857d6fc: b.lt	0x000003ff9857d6d0  ;*if_icmpge
                                                                  ; - mat_mul.MyBenchmark::loop_ikj@63 (line 56)
  0.08%    0.17%    0x000003ff9857d700: cmp	w14, w0
                    0x000003ff9857d704: b.lt	0x000003ff9857d574
                    0x000003ff9857d708: b	0x000003ff9857d5a0
                    0x000003ff9857d70c: str	x15, [sp,#8]
                    0x000003ff9857d710: str	x1, [sp,#16]
                    0x000003ff9857d714: str	x16, [sp,#24]
                    0x000003ff9857d718: str	w2, [sp,#32]
                    0x000003ff9857d71c: mov	w1, #0xffffffe4            	// #-28
                    0x000003ff9857d720: bl	0x000003ff980b15c0  ; OopMap{[8]=Oop [16]=Oop [24]=Oop off=612}
                                                                  ;*aaload
....................................................................................................
 96.52%   96.65%  <total for region 1>

....[Hottest Regions]...............................................................................
 96.52%   96.65%         C2, level 4  mat_mul.MyBenchmark::loop_ikj, version 599 (396 bytes) 
  1.14%    1.14%   [kernel.kallsyms]  finish_task_switch (12 bytes) 
  0.13%    0.06%   [kernel.kallsyms]  _raw_spin_unlock_irqrestore (0 bytes) 
  0.06%    0.03%   [kernel.kallsyms]  clear_bit (16 bytes) 
  0.05%    0.08%  libpthread-2.17.so  __pthread_disable_asynccancel (12 bytes) 
  0.03%    0.03%   [kernel.kallsyms]  __do_softirq (0 bytes) 
  0.03%    0.07%   [kernel.kallsyms]  __ll_sc_atomic_sub_return_acquire (44 bytes) 
  0.03%    0.03%           libjvm.so  [unknown] (12 bytes) 
  0.03%    0.01%   [kernel.kallsyms]  __fsnotify_parent (64 bytes) 
  0.03%    0.02%   [kernel.kallsyms]  __ll_sc_atomic64_sub_return (0 bytes) 
  0.03%    0.02%        libc-2.17.so  strlen (92 bytes) 
  0.03%    0.01%        libc-2.17.so  mempcpy (44 bytes) 
  0.03%    0.03%  libpthread-2.17.so  __pthread_enable_asynccancel (12 bytes) 
  0.02%            [kernel.kallsyms]  sys_write (12 bytes) 
  0.02%    0.03%   [kernel.kallsyms]  __block_write_begin (48 bytes) 
  0.02%    0.08%   [kernel.kallsyms]  __ll_sc___cmpxchg_case_mb_8 (16 bytes) 
  0.02%    0.01%           libjvm.so  [unknown] (20 bytes) 
  0.02%    0.01%   [kernel.kallsyms]  ext4_journal_check_start (16 bytes) 
  0.02%    0.06%   [kernel.kallsyms]  el0_svc_naked (4 bytes) 
  0.02%            [kernel.kallsyms]  get_futex_key_refs.isra.11 (0 bytes) 
  1.70%    1.63%  <...other 356 warm regions...>
....................................................................................................
 99.99%  100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 96.52%   96.65%         C2, level 4  mat_mul.MyBenchmark::loop_ikj, version 599 
  1.14%    1.14%   [kernel.kallsyms]  finish_task_switch 
  0.33%    0.40%           libjvm.so  [unknown] 
  0.13%    0.06%   [kernel.kallsyms]  _raw_spin_unlock_irqrestore 
  0.09%    0.07%        libc-2.17.so  vfprintf 
  0.06%    0.09%  libpthread-2.17.so  __pthread_disable_asynccancel 
  0.06%    0.03%   [kernel.kallsyms]  clear_bit 
  0.05%    0.03%   [kernel.kallsyms]  __block_write_begin 
  0.03%    0.03%   [kernel.kallsyms]  __do_softirq 
  0.03%    0.01%   [kernel.kallsyms]  __audit_syscall_entry 
  0.03%    0.07%   [kernel.kallsyms]  __ll_sc_atomic_sub_return_acquire 
  0.03%    0.02%        libc-2.17.so  strlen 
  0.03%    0.02%   [kernel.kallsyms]  __ll_sc_atomic64_sub_return 
  0.03%    0.08%        libc-2.17.so  _IO_fwrite 
  0.03%    0.02%   [kernel.kallsyms]  sys_write 
  0.03%    0.01%        libc-2.17.so  mempcpy 
  0.03%    0.02%        libc-2.17.so  _IO_fflush 
  0.03%    0.01%   [kernel.kallsyms]  copy_page_from_iter 
  0.03%    0.03%  libpthread-2.17.so  __pthread_enable_asynccancel 
  0.03%    0.01%   [kernel.kallsyms]  __fsnotify_parent 
  1.21%    0.90%  <...other 132 warm methods...>
....................................................................................................
 99.99%   99.73%  <totals>

....[Distribution by Source]........................................................................
 96.52%   96.65%         C2, level 4
  2.36%    2.23%   [kernel.kallsyms]
  0.40%    0.43%        libc-2.17.so
  0.36%    0.41%           libjvm.so
  0.18%    0.13%    hsdis-aarch64.so
  0.13%    0.15%  libpthread-2.17.so
  0.02%    0.01%         interpreter
  0.01%    0.01%         C1, level 3
  0.01%                    libnet.so
....................................................................................................
 99.99%  100.00%  <totals>



# Run complete. Total time: 00:28:48

Benchmark                  (N_str)  Mode  Cnt   Score    Error  Units
MyBenchmark.loop                64  avgt   10   0.002 ?  0.001   s/op
MyBenchmark.loop:?asm           64  avgt          NaN             ---
MyBenchmark.loop               128  avgt   10   0.037 ?  0.001   s/op
MyBenchmark.loop:?asm          128  avgt          NaN             ---
MyBenchmark.loop               256  avgt   10   0.768 ?  0.001   s/op
MyBenchmark.loop:?asm          256  avgt          NaN             ---
MyBenchmark.loop               512  avgt   10   6.366 ?  0.011   s/op
MyBenchmark.loop:?asm          512  avgt          NaN             ---
MyBenchmark.loop              1024  avgt   10  52.161 ?  0.133   s/op
MyBenchmark.loop:?asm         1024  avgt          NaN             ---
MyBenchmark.loop_ikj            64  avgt   10   0.001 ?  0.001   s/op
MyBenchmark.loop_ikj:?asm       64  avgt          NaN             ---
MyBenchmark.loop_ikj           128  avgt   10   0.007 ?  0.001   s/op
MyBenchmark.loop_ikj:?asm      128  avgt          NaN             ---
MyBenchmark.loop_ikj           256  avgt   10   0.054 ?  0.001   s/op
MyBenchmark.loop_ikj:?asm      256  avgt          NaN             ---
MyBenchmark.loop_ikj           512  avgt   10   0.421 ?  0.001   s/op
MyBenchmark.loop_ikj:?asm      512  avgt          NaN             ---
MyBenchmark.loop_ikj          1024  avgt   10   3.337 ?  0.009   s/op
MyBenchmark.loop_ikj:?asm     1024  avgt          NaN             ---
