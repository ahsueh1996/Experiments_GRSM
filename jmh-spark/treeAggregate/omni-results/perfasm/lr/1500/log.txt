CompilerOracle: print *Benchmarks.HiBench_LR
# JMH version: 1.19
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /opt/jdk1.8.0_131/jre/bin/java
# VM options: -Xmx8G -XX:+UnlockDiagnosticVMOptions -XX:CompileCommand=print,*Benchmarks.HiBench_LR
# Warmup: 3 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: grsm.Benchmarks.HiBench_LR

# Run progress: 0.00% complete, ETA 00:00:16
# Fork: 1 of 2
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: Accuracy = 0.7468951813214109
173.295 s/op
# Warmup Iteration   2: Accuracy = 0.7468951813214109
62.904 s/op
# Warmup Iteration   3: Accuracy = 0.7468951813214109
56.658 s/op
Iteration   1: Accuracy = 0.7468951813214109
45.226 s/op
Iteration   2: Accuracy = 0.7468951813214109
42.871 s/op
Iteration   3: Accuracy = 0.7468951813214109
45.588 s/op
Iteration   4: Accuracy = 0.7468951813214109
44.155 s/op
Iteration   5: Accuracy = 0.7468951813214109
44.026 s/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 50.00% complete, ETA 00:10:25
# Fork: 2 of 2
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: <forked VM failed with exit code 134>
<stdout last='20 lines'>
ap'
  # this:     rsi:rsi  0x00007f1c4934498b: cmp    %rbx,%rax
  0x00007f1c4934498e: jne    0x00007f1c4934497b
  0x00007f1c49344990: mov    0x8(%r11) 
                ,%r11d
  0x00007f1c49344994:         = 'scalmov    (%r10,%r11,1),%rbx
  0x00007f1c49344998: ajmpq   *0x40(%rbx)
  0x00007f1c4934499b: /coljmpq   0x00007f1c49057ee0
  0x00007f1c493449a0: fadds  (%rbx)
  0x00007f1c493449a2: add    %al,(%rax)lection
  0x00007f1c493449a4: sub    %al,/mutabl(%rcx)
  0x00007f1c493449a6: e/Linkedadd    %al,(%rax)
  0x00007f1c493449a8: xor    %alHashMap'
  # parm0:    rdx       ,(%rax)
  0x00007f1c493449aa: = int
  #         add    %al,(%rax)
  [sp+0x40]  (sp of caller)
  0x00007f1c49be6be0:   0x00007f1c493449ac: jo     0x00007f1c493449af
  0x00007f1c493449ae: add    %al,(%rax)
  0x00007f1c493449b0: jo     0x00007f1c493449b3
</stdout>
<stderr last='20 lines'>
Java HotSpot(TM) 64-Bit Server VM warning: PrintAssembly is enabled; turning on DebugNonSafepoints to gain additional output
Java HotSpot(TM) 64-Bit Server VM warning: CompileCommand and/or .hotspot_compiler file contains 'print' commands, but PrintAssembly is also enabled
[ perf record: Woken up 22 times to write data ]
[ perf record: Captured and wrote 7.260 MB /tmp/jmh5137729848701755148perfbin (157522 samples) ]
</stderr>

# Run complete. Total time: 00:10:25

Benchmark  Mode  Cnt  Score   Error  Units
