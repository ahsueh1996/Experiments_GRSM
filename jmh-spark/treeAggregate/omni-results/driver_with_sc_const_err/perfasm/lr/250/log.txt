CompilerOracle: print *Benchmarks.HiBench_LR
# JMH version: 1.19
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /opt/jdk1.8.0_131/jre/bin/java
# VM options: -Xmx8G -XX:+UnlockDiagnosticVMOptions -XX:CompileCommand=print,*Benchmarks.HiBench_LR
# Warmup: 3 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: grsm.Benchmarks.HiBench_LR

# Run progress: 0.00% complete, ETA 00:00:16
# Fork: 1 of 2
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: Accuracy = 0.7498758072528564
144.129 s/op
# Warmup Iteration   2: Accuracy = 0.7498758072528564
35.866 s/op
# Warmup Iteration   3: Accuracy = 0.7498758072528564
21.010 s/op
Iteration   1: Accuracy = 0.7498758072528564
14.949 s/op
Iteration   2: Accuracy = 0.7498758072528564
18.879 s/op
Iteration   3: Accuracy = 0.7498758072528564
18.775 s/op
Iteration   4: Accuracy = 0.7498758072528564
10.558 s/op
Iteration   5: Accuracy = 0.7498758072528564
11.298 s/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 50.00% complete, ETA 00:06:05
# Fork: 2 of 2
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: Accuracy = 0.7498758072528564
143.171 s/op
# Warmup Iteration   2: Accuracy = 0.7498758072528564
30.424 s/op
# Warmup Iteration   3: Accuracy = 0.7498758072528564
21.155 s/op
Iteration   1: Accuracy = 0.7498758072528564
13.345 s/op
Iteration   2: Accuracy = 0.7498758072528564
18.965 s/op
Iteration   3: Accuracy = 0.7498758072528564
23.310 s/op
Iteration   4: Accuracy = 0.7498758072528564
11.070 s/op
Iteration   5: Accuracy = 0.7498758072528564
11.364 s/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "grsm.Benchmarks.HiBench_LR":
  15.251 ±(99.9%) 6.729 s/op [Average]
  (min, avg, max) = (10.558, 15.251, 23.310), stdev = 4.451
  CI (99.9%): [8.522, 21.980] (assumes normal distribution)

Secondary result "grsm.Benchmarks.HiBench_LR:·asm":
PrintAssembly processed: 4204360 total address lines.
Perf output processed (skipped 208.143 seconds):
 Column 1: cycles (165656 events)
 Column 2: instructions (160322 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
 [kernel.kallsyms], native_write_msr_safe (13 bytes) 

 <no assembly is recorded, native region>
....................................................................................................
 10.30%   10.60%  <total for region 1>

....[Hottest Regions]...............................................................................
 10.30%   10.60%   [kernel.kallsyms]  native_write_msr_safe (13 bytes) 
  8.60%   11.03%      perf-21441.map  [unknown] (1145 bytes) 
  7.74%    9.57%         C2, level 4  org.apache.spark.mllib.optimization.LogisticGradient::compute, version 5393 (1026 bytes) 
  1.39%    2.41%           libjvm.so  RelocIterator::initialize (526 bytes) 
  0.85%    0.03%   [kernel.kallsyms]  vread_hpet (14 bytes) 
  0.84%    0.60%           libjvm.so  SpinPause (9 bytes) 
  0.80%    0.24%   [kernel.kallsyms]  mutex_unlock (28 bytes) 
  0.78%    0.41%   [kernel.kallsyms]  system_call (277 bytes) 
  0.77%    0.48%   [kernel.kallsyms]  fput_pos_unlock (248 bytes) 
  0.77%    0.45%   [kernel.kallsyms]  copy_user_generic_string (74 bytes) 
  0.72%    0.95%      perf-21441.map  [unknown] (439 bytes) 
  0.70%    0.31%   [kernel.kallsyms]  mutex_lock (72 bytes) 
  0.64%    0.95%                      <unknown> (316 bytes) 
  0.63%    0.78%   [kernel.kallsyms]  vfs_write (352 bytes) 
  0.63%    0.78%           libjvm.so  PhaseIdealLoop::get_late_ctrl (72 bytes) 
  0.55%    0.53%   [kernel.kallsyms]  pipe_write (622 bytes) 
  0.54%    0.84%           libjvm.so  fileStream::write (139 bytes) 
  0.51%    0.20%         C2, level 4  java.io.ObjectInputStream::defaultReadFields, version 3474 (1086 bytes) 
  0.51%    0.37%   [kernel.kallsyms]  _write_trylock (177 bytes) 
  0.49%    0.84%           libjvm.so  outputStream::update_position (91 bytes) 
 61.25%   57.64%  <...other 16813 warm regions...>
....................................................................................................
100.00%  100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 11.35%   13.31%      perf-21441.map  [unknown] 
 10.30%   10.60%   [kernel.kallsyms]  native_write_msr_safe 
  8.26%    9.78%         C2, level 4  org.apache.spark.mllib.optimization.LogisticGradient::compute, version 5393 
  6.60%    7.83%                      <unknown> 
  1.39%    2.41%           libjvm.so  RelocIterator::initialize 
  0.89%    0.89%   [kernel.kallsyms]  pipe_write 
  0.85%    0.03%   [kernel.kallsyms]  vread_hpet 
  0.84%    0.60%           libjvm.so  SpinPause 
  0.82%    1.14%   [kernel.kallsyms]  __audit_syscall_exit 
  0.80%    0.24%   [kernel.kallsyms]  mutex_unlock 
  0.78%    0.41%   [kernel.kallsyms]  system_call 
  0.77%    0.48%   [kernel.kallsyms]  fput_pos_unlock 
  0.77%    0.45%   [kernel.kallsyms]  copy_user_generic_string 
  0.72%    0.92%           libjvm.so  xmlTextStream::write 
  0.71%    0.84%           libjvm.so  PhaseIdealLoop::get_late_ctrl 
  0.70%    0.31%   [kernel.kallsyms]  mutex_lock 
  0.63%    0.78%   [kernel.kallsyms]  vfs_write 
  0.61%    0.32%   libhsdis-amd64.so  print_insn 
  0.60%    0.27%         C2, level 4  java.io.ObjectInputStream::defaultReadFields, version 3474 
  0.54%    0.84%           libjvm.so  fileStream::write 
 51.07%   47.06%  <...other 5102 warm methods...>
....................................................................................................
100.00%   99.48%  <totals>

....[Distribution by Source]........................................................................
 31.98%   29.66%   [kernel.kallsyms]
 24.40%   25.30%           libjvm.so
 18.59%   18.77%         C2, level 4
 11.35%   13.31%      perf-21441.map
  6.60%    7.83%                    
  2.23%    1.11%         C1, level 3
  1.64%    0.64%   libhsdis-amd64.so
  0.92%    0.96%        runtime stub
  0.72%    0.98%          libjava.so
  0.44%    0.22%         interpreter
  0.36%    0.45%           libzip.so
  0.29%    0.39%        libverify.so
  0.27%    0.32%    Unknown, level 0
  0.17%    0.04%         C1, level 1
  0.04%    0.02%              [vdso]
....................................................................................................
100.00%  100.00%  <totals>

PrintAssembly processed: 4207645 total address lines.
Perf output processed (skipped 201.684 seconds):
 Column 1: cycles (172227 events)
 Column 2: instructions (166759 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
 [kernel.kallsyms], native_write_msr_safe (13 bytes) 

 <no assembly is recorded, native region>
....................................................................................................
 10.48%   10.78%  <total for region 1>

....[Hottest Regions]...............................................................................
 10.48%   10.78%                 [kernel.kallsyms]  native_write_msr_safe (13 bytes) 
  8.37%   10.58%                       C2, level 4  scala.Array$::tabulate, version 6989 (1381 bytes) 
  7.35%    9.23%                       C2, level 4  org.apache.spark.mllib.optimization.LogisticGradient::compute, version 5464 (1111 bytes) 
  1.46%    2.50%                         libjvm.so  RelocIterator::initialize (526 bytes) 
  1.06%    0.80%                         libjvm.so  SpinPause (9 bytes) 
  0.89%    0.04%                 [kernel.kallsyms]  vread_hpet (14 bytes) 
  0.88%    1.07%                         libjvm.so  PhaseIdealLoop::get_late_ctrl (72 bytes) 
  0.82%    0.39%                 [kernel.kallsyms]  copy_user_generic_string (72 bytes) 
  0.80%    0.38%                 [kernel.kallsyms]  system_call (277 bytes) 
  0.79%    0.29%                 [kernel.kallsyms]  mutex_unlock (28 bytes) 
  0.72%    0.50%                 [kernel.kallsyms]  fput_pos_unlock (253 bytes) 
  0.69%    0.92%                       C2, level 4  org.apache.spark.mllib.optimization.LogisticGradient::compute, version 5464 (439 bytes) 
  0.69%    0.83%                         libjvm.so  xmlTextStream::write (239 bytes) 
  0.64%    0.90%                      libc-2.12.so  _IO_fwrite (324 bytes) 
  0.63%    0.69%                 [kernel.kallsyms]  avc_has_perm_noaudit (271 bytes) 
  0.63%    0.50%                 [kernel.kallsyms]  selinux_file_permission (256 bytes) 
  0.62%    0.32%                 [kernel.kallsyms]  mutex_lock (72 bytes) 
  0.56%    0.48%                 [kernel.kallsyms]  pipe_write (622 bytes) 
  0.55%    0.89%                         libjvm.so  fileStream::write (139 bytes) 
  0.53%    0.73%                         libjvm.so  IndexSet::free_block (842 bytes) 
 60.85%   57.19%  <...other 16815 warm regions...>
....................................................................................................
100.00%  100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 10.48%   10.78%                 [kernel.kallsyms]  native_write_msr_safe 
  9.11%   10.55%                       C2, level 4  org.apache.spark.mllib.optimization.LogisticGradient::compute, version 5464 
  8.38%   10.59%                       C2, level 4  scala.Array$::tabulate, version 6989 
  1.46%    2.50%                         libjvm.so  RelocIterator::initialize 
  1.36%    0.88%                    perf-22679.map  [unknown] 
  1.08%    1.28%                      libc-2.12.so  vfprintf 
  1.06%    0.80%                         libjvm.so  SpinPause 
  0.97%    1.16%                         libjvm.so  PhaseIdealLoop::get_late_ctrl 
  0.93%    0.82%                 [kernel.kallsyms]  pipe_write 
  0.89%    0.04%                 [kernel.kallsyms]  vread_hpet 
  0.86%    1.14%                 [kernel.kallsyms]  __audit_syscall_exit 
  0.82%    0.39%                 [kernel.kallsyms]  copy_user_generic_string 
  0.80%    0.38%                 [kernel.kallsyms]  system_call 
  0.79%    0.29%                 [kernel.kallsyms]  mutex_unlock 
  0.76%    0.92%                         libjvm.so  xmlTextStream::write 
  0.72%    0.50%                 [kernel.kallsyms]  fput_pos_unlock 
  0.64%    0.90%                      libc-2.12.so  _IO_fwrite 
  0.64%    0.34%                 libhsdis-amd64.so  print_insn 
  0.63%    0.69%                 [kernel.kallsyms]  avc_has_perm_noaudit 
  0.63%    0.50%                 [kernel.kallsyms]  selinux_file_permission 
 57.01%   54.08%  <...other 5297 warm methods...>
....................................................................................................
100.00%   99.52%  <totals>

....[Distribution by Source]........................................................................
 32.57%   29.83%                 [kernel.kallsyms]
 27.25%   29.85%                       C2, level 4
 25.47%   26.40%                         libjvm.so
  5.25%    6.53%                      libc-2.12.so
  2.30%    1.45%                       C1, level 3
  1.36%    0.88%                    perf-22679.map
  1.35%    0.69%                 libhsdis-amd64.so
  1.24%    1.00%                libpthread-2.12.so
  0.85%    0.87%                      runtime stub
  0.65%    0.95%                        libjava.so
  0.42%    0.19%                       interpreter
  0.36%    0.41%                         libzip.so
  0.32%    0.29%                  Unknown, level 0
  0.26%    0.35%                      libverify.so
  0.16%    0.06%                       C1, level 1
  0.10%    0.19%  liblz4-java885913749816216881.so
  0.04%    0.02%                            [vdso]
  0.03%    0.03%                     librt-2.12.so
  0.01%    0.00%                                  
  0.01%    0.00%                  libmanagement.so
  0.01%    0.00%                         libnio.so
  0.00%    0.00%                        ld-2.12.so
....................................................................................................
100.00%  100.00%  <totals>



# Run complete. Total time: 00:12:16

Benchmark                   Mode  Cnt   Score   Error  Units
Benchmarks.HiBench_LR       avgt   10  15.251 ± 6.729   s/op
Benchmarks.HiBench_LR:·asm  avgt          NaN            ---
