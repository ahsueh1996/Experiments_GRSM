<project xmlns = "http://maven.apache.org/POM/4.0.0"
   xmlns:xsi = "http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation = "http://maven.apache.org/POM/4.0.0
   http://maven.apache.org/xsd/maven-4.0.0.xsd">

   <modelVersion>4.0.0</modelVersion>

	<groupId>grsm</groupId>
   	<artifactId>treeAggregate</artifactId>
   	<version>1.0</version>
	<packaging>jar</packaging>	

	<dependencies>
		<dependency>
  			<groupId>org.apache.spark</groupId>
  			<artifactId>spark-core_2.11</artifactId>
  			<version>2.1.0</version>
  			<scope>provided</scope>
		</dependency>
   		<dependency>
        		<groupId>org.apache.spark</groupId>
        		<artifactId>spark-sql_2.11</artifactId>
        		<version>2.1.0</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.spark</groupId>
			<artifactId>spark-mllib_2.11</artifactId>
			<version>2.1.0</version>
			<scope>compile</scope>
		</dependency>
		<!--JMH-->
		<dependency>
			<groupId>org.openjdk.jmh</groupId>
			<artifactId>jmh-core</artifactId>
			<version>${jmh.version}</version>
		</dependency>
	</dependencies>
	
	<!--JMH-->
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<jmh.version>1.19</jmh.version>
		<javac.target>1.8</javac.target>
		<!--<scala.stdLib.version>2.11.0</scala.stdLib.version>-->
		<scala.mavenPlugin.version>3.2.2</scala.mavenPlugin.version>
		<!-- Possible generaotrs: default, asm, reflection -->
		<jmh.generator>default</jmh.generator>
		<uberjar.name>benchmarks</uberjar.name>
	</properties>

  	<repositories>
    		<repository>
      			<id>scala-tools.org</id>
      			<name>Scala-tools Maven2 Repository</name>
      			<url>http://scala-tools.org/repo-releases</url>
    		</repository>
	    	<repository>
      			<id>maven-hadoop</id>
      			<name>Hadoop Releases</name>
      			<url>https://repository.cloudera.com/content/repositories/releases/</url>
    		</repository>
    		<repository>
      			<id>cloudera-repos</id>
      			<name>Cloudera Repos</name>
      			<url>https://repository.cloudera.com/artifactory/cloudera-repos/</url>
    		</repository>
	</repositories>

	<pluginRepositories>
		<pluginRepository>
    			<id>scala-tools.org</id>
    			<name>Scala-tools Maven2 Repository</name>
    			<url>http://scala-tools.org/repo-releases</url>
  		</pluginRepository>
		<!-- necessary for packet2a, reponse to 
			Error resolving version for plugin 'some scala plugin' from the repositories [local (.../.m2/repository), ...]. Plugin not found in any plugin repository -->
  		<pluginRepository>
		      <id>central</id>
		      <name>Maven Plugin Repository</name>
		      <url>http://repo1.maven.org/maven2</url>
		      <layout>default</layout>
		      <snapshots>
			<enabled>false</enabled>
		      </snapshots>
		      <releases>
			<updatePolicy>never</updatePolicy>
		      </releases>
    		</pluginRepository>
	</pluginRepositories>
	
	<build>
	<plugins>
		<plugin>
  			<groupId>org.scala-tools</groupId>
      			<artifactId>maven-scala-plugin</artifactId>
      			<executions>
        		<execution>
          		<goals>
            		<goal>compile</goal>
            		<goal>testCompile</goal>
          		</goals>
        		</execution>
      			</executions>
		</plugin>
		<!--JMH-->
		<!--Add source directories for scalac and javac-->
		<plugin>
			<groupId>org.codehaus.mojo</groupId>
			<artifactId>build-helper-maven-plugin</artifactId>
			<version>1.8</version>
			<executions>
				<execution>
					<id>add-source</id>
					<phase>generate-sources</phase>
					<goals>
						<goal>add-source</goal>
					</goals>
					<configuration>
						<sources>
							<source>${project.basedir}/src/main/scala</source>
							<source>${project.basedir}/target/generated-sources/jmh</source>
						</sources>
					</configuration>
				</execution>
			</executions>
		</plugin>
		<!--Compile Scala sources-->
		<plugin>
			<groupId>net.alchim31.maven</groupId>
			<artifactId>scala-maven-plugin</artifactId>
			<version>${scala.mavenPlugin.version}</version>
			<configuration>
				<recompileMode>incremental</recompileMode>
			</configuration>
			<executions>
				<execution>
					<phase>process-sources</phase>
					<goals>
						<goal>compile</goal>
					</goals>
				</execution>
			</executions>
		</plugin>
		<!--Invoke JMH generators to produce benchmark code-->
            	<plugin>
                	<groupId>org.codehaus.mojo</groupId>
                	<artifactId>exec-maven-plugin</artifactId>
              	  	<version>1.2.1</version>
                	<executions>
                    		<execution>
                        		<phase>process-sources</phase>
                        		<goals>
                            			<goal>java</goal>
                        		</goals>
                        		<configuration>
                            			<includePluginDependencies>true</includePluginDependencies>
                            			<mainClass>org.openjdk.jmh.generators.bytecode.JmhBytecodeGenerator</mainClass>
                            			<arguments>
                                			<argument>${project.basedir}/target/classes/</argument>
                                			<argument>${project.basedir}/target/generated-sources/jmh/</argument>
                                			<argument>${project.basedir}/target/classes/</argument>
                                			<argument>${jmh.generator}</argument>
                            			</arguments>
                       		 	</configuration>
                    		</execution>
                	</executions>
                	<dependencies>
                    		<dependency>
                        		<groupId>org.openjdk.jmh</groupId>
                        		<artifactId>jmh-generator-bytecode</artifactId>
                        		<version>${jmh.version}</version>
                    		</dependency>
               	 	</dependencies>
            	</plugin>
		<!--Compile JMH generated code-->
            	<plugin>
                	<groupId>org.apache.maven.plugins</groupId>
                	<artifactId>maven-compiler-plugin</artifactId>
                	<version>3.1</version>
                	<configuration>
                    		<compilerVersion>${javac.target}</compilerVersion>
                    		<source>${javac.target}</source>
                    		<target>${javac.target}</target>
                    		<compilerArgument>-proc:none</compilerArgument>
                	</configuration>
            	</plugin>
		
		<plugin>
    			<artifactId>maven-dependency-plugin</artifactId>
    			<executions>
        			<execution>
            				<id>build-classpath</id>
            				<goals>
                				<goal>build-classpath</goal>
            				</goals>
            			<configuration>
                			<includeScope>runtime</includeScope>
                			<outputProperty>depClasspath</outputProperty>
            			</configuration>
        			</execution>
    			</executions>
		</plugin>
		<!--Copy all dependencies to a separate lib file -->
		<plugin>
    			<groupId>org.apache.maven.plugins</groupId>
    			<artifactId>maven-dependency-plugin</artifactId>
    			<executions>
        			<execution>
            				<id>copy-dependencies</id>
            				<phase>prepare-package</phase>
            				<goals>
                				<goal>copy-dependencies</goal>
            				</goals>
            				<configuration>
                				<outputDirectory>target/lib</outputDirectory>
                				<overWriteReleases>false</overWriteReleases>
                				<overWriteSnapshots>false</overWriteSnapshots>
                				<overWriteIfNewer>true</overWriteIfNewer>
            				</configuration>
        			</execution>
	    		</executions>
		</plugin>
            	<!--Package all the dependencies into the JAR -->
            	<plugin>
                	<groupId>org.apache.maven.plugins</groupId>
                	<artifactId>maven-shade-plugin</artifactId>
                	<version>2.2</version>
                	<executions>
                    		<execution>
                        		<phase>package</phase>
                        		<goals>
                         			<goal>shade</goal>
                        		</goals>
                        		<configuration>
                            			<finalName>${uberjar.name}</finalName>
                            			<transformers>
                                			<transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                  				<mainClass>org.openjdk.jmh.Main</mainClass>
                                			</transformer>
                            			</transformers>
                            			<filters>
                                			<filter>
                                   				<!--Shading signed JARs will fail without this. http://stackoverflow.com/questions/999489/invalid-signature-file-when-attempting-to-run-a-jar -->
                                    				<artifact>*:*</artifact>
                                    				<excludes>
                                        				<exclude>META-INF/*.SF</exclude>
                                        				<exclude>META-INF/*.DSA</exclude>
                                        				<exclude>META-INF/*.RSA</exclude>
                                    				</excludes>
                                			</filter>
                            			</filters>
                        		</configuration>
                    		</execution>
                	</executions>
		</plugin>
	</plugins>
	</build>
</project>


