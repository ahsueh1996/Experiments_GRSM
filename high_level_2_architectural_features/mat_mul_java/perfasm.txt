CompilerOracle: unrecognized line
  "print MyBenchmark"
  Unrecognized text  MyBenchmark after command 
# JMH version: 1.19
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /opt/jdk1.8.0_131/jre/bin/java
# VM options: -XX:+UnlockDiagnosticVMOptions -XX:CompileCommand=print,MyBenchmark
# Warmup: 3 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: mat_mul.MyBenchmark.loop
# Parameters: (N_str = 64)

# Run progress: 0.00% complete, ETA 00:02:40
# Fork: 1 of 2
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: ≈ 10⁻³ s/op
# Warmup Iteration   2: ≈ 10⁻³ s/op
# Warmup Iteration   3: ≈ 10⁻⁴ s/op
Iteration   1: ≈ 10⁻⁴ s/op
Iteration   2: ≈ 10⁻⁴ s/op
Iteration   3: ≈ 10⁻⁴ s/op
Iteration   4: ≈ 10⁻⁴ s/op
Iteration   5: ≈ 10⁻⁴ s/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 5.00% complete, ETA 00:04:42
# Fork: 2 of 2
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: ≈ 10⁻³ s/op
# Warmup Iteration   2: ≈ 10⁻³ s/op
# Warmup Iteration   3: ≈ 10⁻⁴ s/op
Iteration   1: ≈ 10⁻⁴ s/op
Iteration   2: ≈ 10⁻⁴ s/op
Iteration   3: ≈ 10⁻⁴ s/op
Iteration   4: ≈ 10⁻⁴ s/op
Iteration   5: ≈ 10⁻⁴ s/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "mat_mul.MyBenchmark.loop":
  ≈ 10⁻⁴ s/op

Secondary result "mat_mul.MyBenchmark.loop:·asm":
PrintAssembly processed: 179088 total address lines.
Perf output processed (skipped 8.120 seconds):
 Column 1: cycles (5138 events)
 Column 2: instructions (5135 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
C2, level 4, mat_mul.MyBenchmark::loop, version 575 (293 bytes) 

                                                                       ; - mat_mul.MyBenchmark::loop@32 (line 41)
                         0x00007f1ac148628b: mov    0x10(%r12,%rdx,8),%r14d
                         0x00007f1ac1486290: cmp    %ecx,%r13d
                         0x00007f1ac1486293: mov    $0x80000000,%ebx
                         0x00007f1ac1486298: cmovl  %ebx,%ecx
                         0x00007f1ac148629b: lea    (%r12,%r8,8),%rdi
                         0x00007f1ac148629f: lea    (%r12,%r10,8),%r8
                         0x00007f1ac14862a3: lea    (%r12,%r14,8),%rax  ;*aaload
                                                                       ; - mat_mul.MyBenchmark::loop@80 (line 43)
                         0x00007f1ac14862a7: xor    %ebx,%ebx
  0.02%           ╭      0x00007f1ac14862a9: jmp    0x00007f1ac14862d2
  0.08%    0.18%  │ ↗ ↗  0x00007f1ac14862ab: vmovq  %xmm4,%rdi
                  │ │ │  0x00007f1ac14862b0: mov    %r9d,0x10(%rdi,%rbx,4)  ;*iastore
                  │ │ │                                                ; - mat_mul.MyBenchmark::loop@121 (line 45)
                  │ │ │  0x00007f1ac14862b5: inc    %ebx               ;*iadd
                  │ │ │                                                ; - mat_mul.MyBenchmark::loop@128 (line 40)
  0.18%    0.31%  │ │ │  0x00007f1ac14862b7: mov    %ebx,0x14(%rsi)    ;*putfield j
                  │ │ │                                                ; - mat_mul.MyBenchmark::loop@129 (line 40)
  0.08%    0.06%  │ │ │  0x00007f1ac14862ba: cmp    %r13d,%ebx
                  │ │ │  0x00007f1ac14862bd: jge    0x00007f1ac14861d3  ;*if_icmpge
                  │ │ │                                                ; - mat_mul.MyBenchmark::loop@29 (line 40)
                  │ │ │  0x00007f1ac14862c3: vmovd  %xmm3,%r9d
                  │ │ │  0x00007f1ac14862c8: vmovd  %xmm2,%r10d
  0.51%    0.39%  │ │ │  0x00007f1ac14862cd: vmovq  %xmm5,%rax         ;*aload_0
                  │ │ │                                                ; - mat_mul.MyBenchmark::loop@32 (line 41)
  0.04%    0.06%  ↘ │ │  0x00007f1ac14862d2: movl   $0x0,0x1c(%rsi)    ;*putfield s
                    │ │                                                ; - mat_mul.MyBenchmark::loop@34 (line 41)
                    │ │  0x00007f1ac14862d9: movl   $0x0,0x18(%rsi)    ;*putfield k
                    │ │                                                ; - mat_mul.MyBenchmark::loop@39 (line 42)
                    │ │  0x00007f1ac14862e0: mov    0xc(%r12,%r14,8),%edx  ; implicit exception: dispatches to 0x00007f1ac1486485
  0.31%    0.23%    │ │  0x00007f1ac14862e5: vmovq  %rdi,%xmm4
  0.14%    0.08%    │ │  0x00007f1ac14862ea: vmovd  %r10d,%xmm2
                    │ │  0x00007f1ac14862ef: vmovd  %r9d,%xmm3
                    │ │  0x00007f1ac14862f4: mov    0x10(%r12,%r10,8),%r9d  ;*iaload
                    │ │                                                ; - mat_mul.MyBenchmark::loop@71 (line 43)
  0.19%    0.43%    │ │  0x00007f1ac14862f9: cmp    %edx,%ebx
                    │ │  0x00007f1ac14862fb: jae    0x00007f1ac1486449  ;*iaload
                    │ │                                                ; - mat_mul.MyBenchmark::loop@85 (line 43)
  0.12%    0.12%    │ │  0x00007f1ac1486301: imul   0x10(%rax,%rbx,4),%r9d  ;*imul
                    │ │                                                ; - mat_mul.MyBenchmark::loop@86 (line 43)
  0.02%             │ │  0x00007f1ac1486307: mov    %r9d,0x1c(%rsi)    ;*putfield s
                    │ │                                                ; - mat_mul.MyBenchmark::loop@88 (line 43)
                    │ │  0x00007f1ac148630b: movl   $0x1,0x18(%rsi)    ;*putfield k
                    │ │                                                ; - mat_mul.MyBenchmark::loop@98 (line 42)
  0.39%    0.31%    │ │  0x00007f1ac1486312: cmp    $0x1,%ecx
                    │ │  0x00007f1ac1486315: jle    0x00007f1ac148644d
  0.06%    0.08%    │ │  0x00007f1ac148631b: vmovq  %rax,%xmm5
                    │ │  0x00007f1ac1486320: mov    $0x1,%edx
                    │ │  0x00007f1ac1486325: nopw   0x0(%rax,%rax,1)   ;*aload_0
                    │ │                                                ; - mat_mul.MyBenchmark::loop@53 (line 43)
  0.70%    0.47%   ↗│ │  0x00007f1ac1486330: mov    0x10(%r11,%rdx,4),%r10d  ;*aaload
                   ││ │                                                ; - mat_mul.MyBenchmark::loop@80 (line 43)
 12.20%   11.94%   ││ │  0x00007f1ac1486335: mov    0xc(%r12,%r10,8),%ebp  ; implicit exception: dispatches to 0x00007f1ac1486485
  0.72%    0.49%   ││ │  0x00007f1ac148633a: mov    0x10(%r8,%rdx,4),%edi  ;*iaload
                   ││ │                                                ; - mat_mul.MyBenchmark::loop@71 (line 43)
  0.25%    0.35%   ││ │  0x00007f1ac148633f: lea    (%r12,%r10,8),%rax  ;*aaload
                   ││ │                                                ; - mat_mul.MyBenchmark::loop@80 (line 43)
  0.66%    0.76%   ││ │  0x00007f1ac1486343: cmp    %ebp,%ebx
                   ││ │  0x00007f1ac1486345: jae    0x00007f1ac1486410  ;*iaload
                   ││ │                                                ; - mat_mul.MyBenchmark::loop@85 (line 43)
 10.76%   11.55%   ││ │  0x00007f1ac148634b: imul   0x10(%rax,%rbx,4),%edi
  2.28%    2.84%   ││ │  0x00007f1ac1486350: add    %r9d,%edi          ;*iadd
                   ││ │                                                ; - mat_mul.MyBenchmark::loop@87 (line 43)
  3.29%    3.02%   ││ │  0x00007f1ac1486353: mov    %edi,0x1c(%rsi)    ;*putfield s
                   ││ │                                                ; - mat_mul.MyBenchmark::loop@88 (line 43)
  9.42%    6.74%   ││ │  0x00007f1ac1486356: mov    %edx,%r10d
  2.80%    3.33%   ││ │  0x00007f1ac1486359: inc    %r10d
  0.54%    0.35%   ││ │  0x00007f1ac148635c: mov    %r10d,0x18(%rsi)   ;*putfield k
                   ││ │                                                ; - mat_mul.MyBenchmark::loop@98 (line 42)
  0.27%    0.18%   ││ │  0x00007f1ac1486360: movslq %edx,%r9
  9.11%   10.98%   ││ │  0x00007f1ac1486363: mov    0x14(%r11,%r9,4),%ebp  ;*aaload
                   ││ │                                                ; - mat_mul.MyBenchmark::loop@80 (line 43)
  2.90%    3.39%   ││ │  0x00007f1ac1486368: mov    0xc(%r12,%rbp,8),%r10d  ; implicit exception: dispatches to 0x00007f1ac1486485
  0.41%    0.41%   ││ │  0x00007f1ac148636d: mov    0x14(%r8,%r9,4),%r9d  ;*iaload
                   ││ │                                                ; - mat_mul.MyBenchmark::loop@71 (line 43)
  0.66%    0.72%   ││ │  0x00007f1ac1486372: lea    (%r12,%rbp,8),%rax  ;*aaload
                   ││ │                                                ; - mat_mul.MyBenchmark::loop@80 (line 43)
  8.78%    9.44%   ││ │  0x00007f1ac1486376: cmp    %r10d,%ebx
                   ││ │  0x00007f1ac1486379: jae    0x00007f1ac1486419  ;*iaload
                   ││ │                                                ; - mat_mul.MyBenchmark::loop@85 (line 43)
  2.96%    3.56%   ││ │  0x00007f1ac148637f: imul   0x10(%rax,%rbx,4),%r9d
  1.03%    1.09%   ││ │  0x00007f1ac1486385: add    %edi,%r9d          ;*iadd
                   ││ │                                                ; - mat_mul.MyBenchmark::loop@87 (line 43)
  8.00%    8.61%   ││ │  0x00007f1ac1486388: mov    %r9d,0x1c(%rsi)    ;*putfield s
                   ││ │                                                ; - mat_mul.MyBenchmark::loop@88 (line 43)
 12.16%   11.59%   ││ │  0x00007f1ac148638c: add    $0x2,%edx          ;*iadd
                   ││ │                                                ; - mat_mul.MyBenchmark::loop@97 (line 42)
  0.78%    0.80%   ││ │  0x00007f1ac148638f: mov    %edx,0x18(%rsi)    ;*putfield k
                   ││ │                                                ; - mat_mul.MyBenchmark::loop@98 (line 42)
  0.29%    0.25%   ││ │  0x00007f1ac1486392: cmp    %ecx,%edx
                   ╰│ │  0x00007f1ac1486394: jl     0x00007f1ac1486330  ;*if_icmpge
                    │ │                                                ; - mat_mul.MyBenchmark::loop@50 (line 42)
                    │ │  0x00007f1ac1486396: cmp    %r13d,%edx
                    ╰ │  0x00007f1ac1486399: jge    0x00007f1ac14862ab
  0.43%    0.51%      │  0x00007f1ac148639f: nop                       ;*aload_0
                      │                                                ; - mat_mul.MyBenchmark::loop@53 (line 43)
  0.02%              ↗│  0x00007f1ac14863a0: mov    0x10(%r11,%rdx,4),%edi  ;*aaload
                     ││                                                ; - mat_mul.MyBenchmark::loop@80 (line 43)
                     ││  0x00007f1ac14863a5: mov    0xc(%r12,%rdi,8),%r10d  ; implicit exception: dispatches to 0x00007f1ac1486485
                     ││  0x00007f1ac14863aa: mov    0x10(%r8,%rdx,4),%ebp  ;*iaload
                     ││                                                ; - mat_mul.MyBenchmark::loop@71 (line 43)
  0.54%    0.53%     ││  0x00007f1ac14863af: lea    (%r12,%rdi,8),%rax  ;*aaload
                     ││                                                ; - mat_mul.MyBenchmark::loop@80 (line 43)
  0.06%              ││  0x00007f1ac14863b3: cmp    %r10d,%ebx
                     ││  0x00007f1ac14863b6: jae    0x00007f1ac148641f  ;*iaload
                     ││                                                ; - mat_mul.MyBenchmark::loop@85 (line 43)
                     ││  0x00007f1ac14863b8: imul   0x10(%rax,%rbx,4),%ebp
  0.04%    0.08%     ││  0x00007f1ac14863bd: add    %ebp,%r9d          ;*iadd
                     ││                                                ; - mat_mul.MyBenchmark::loop@87 (line 43)
  0.49%    0.19%     ││  0x00007f1ac14863c0: mov    %r9d,0x1c(%rsi)    ;*putfield s
                     ││                                                ; - mat_mul.MyBenchmark::loop@88 (line 43)
  0.08%    0.14%     ││  0x00007f1ac14863c4: inc    %edx               ;*iadd
                     ││                                                ; - mat_mul.MyBenchmark::loop@97 (line 42)
                     ││  0x00007f1ac14863c6: mov    %edx,0x18(%rsi)    ;*putfield k
                     ││                                                ; - mat_mul.MyBenchmark::loop@98 (line 42)
                     ││  0x00007f1ac14863c9: cmp    %r13d,%edx
                     ╰│  0x00007f1ac14863cc: jl     0x00007f1ac14863a0  ;*if_icmpge
                      │                                                ; - mat_mul.MyBenchmark::loop@50 (line 42)
  0.29%    0.37%      ╰  0x00007f1ac14863ce: jmpq   0x00007f1ac14862ab
                         0x00007f1ac14863d3: vmovd  %xmm0,%r11d
                         0x00007f1ac14863d8: vmovss (%rsp),%xmm0
                         0x00007f1ac14863dd: mov    %r13d,(%rsp)
                         0x00007f1ac14863e1: jmpq   0x00007f1ac14861dc  ;*if_icmpge
                                                                       ; - mat_mul.MyBenchmark::loop@13 (line 39)
                         0x00007f1ac14863e6: mov    0x2c(%rsi),%ebp    ;*getfield res
                                                                       ; - mat_mul.MyBenchmark::loop@150 (line 48)
                         0x00007f1ac14863e9: vmovq  %xmm1,%rsi
                         0x00007f1ac14863ee: test   %rsi,%rsi
....................................................................................................
 95.06%   96.90%  <total for region 1>

....[Hottest Regions]...............................................................................
 95.06%   96.90%         C2, level 4  mat_mul.MyBenchmark::loop, version 575 (293 bytes) 
  1.21%                       kernel  [unknown] (0 bytes) 
  0.68%    0.60%              kernel  [unknown] (0 bytes) 
  0.14%                       kernel  [unknown] (64 bytes) 
  0.12%    0.04%              kernel  [unknown] (0 bytes) 
  0.12%    0.08%         C2, level 4  mat_mul.MyBenchmark::loop, version 575 (36 bytes) 
  0.10%                       kernel  [unknown] (0 bytes) 
  0.06%                       kernel  [unknown] (25 bytes) 
  0.06%    0.02%              kernel  [unknown] (69 bytes) 
  0.06%                       kernel  [unknown] (0 bytes) 
  0.06%           libpthread-2.12.so  pthread_getspecific (27 bytes) 
  0.06%    0.02%           libjvm.so  outputStream::update_position (8 bytes) 
  0.04%                       kernel  [unknown] (27 bytes) 
  0.04%    0.02%              kernel  [unknown] (33 bytes) 
  0.04%    0.02%              kernel  [unknown] (16 bytes) 
  0.04%    0.04%              kernel  [unknown] (0 bytes) 
  0.04%    0.04%              kernel  [unknown] (28 bytes) 
  0.04%    0.04%        libc-2.12.so  _IO_default_xsputn (15 bytes) 
  0.02%                       kernel  [unknown] (0 bytes) 
  0.02%                       kernel  [unknown] (0 bytes) 
  2.00%    2.18%  <...other 179 warm regions...>
....................................................................................................
 99.98%  100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 95.21%   97.02%         C2, level 4  mat_mul.MyBenchmark::loop, version 575 
  3.83%    1.71%              kernel  [unknown] 
  0.06%    0.06%   libhsdis-amd64.so  print_insn 
  0.06%    0.02%           libjvm.so  outputStream::update_position 
  0.06%           libpthread-2.12.so  pthread_getspecific 
  0.06%    0.06%        libc-2.12.so  _IO_default_xsputn 
  0.04%    0.02%        libc-2.12.so  __strchr_sse42 
  0.04%    0.08%           libjvm.so  fileStream::write 
  0.04%    0.04%           libjvm.so  xmlTextStream::write 
  0.02%    0.02%           libjvm.so  jio_print 
  0.02%                  interpreter  invoke return entry points  
  0.02%                  interpreter  bipush  16 bipush  
  0.02%                    libjvm.so  ciBytecodeStream::next 
  0.02%                  interpreter  method entry point (kind = native)  
  0.02%                    libjvm.so  Canonicalizer::do_If 
  0.02%           libpthread-2.12.so  [unknown] 
  0.02%                    libjvm.so  BlockBegin::iterate_preorder 
  0.02%    0.04%        libc-2.12.so  __strlen_sse42 
  0.02%    0.02%        libc-2.12.so  _IO_file_xsputn@@GLIBC_2.2.5 
  0.02%                    libjvm.so  LIR_OpVisitState::visit 
  0.37%    0.23%  <...other 19 warm methods...>
....................................................................................................
 99.98%   99.32%  <totals>

....[Distribution by Source]........................................................................
 95.23%   97.02%         C2, level 4
  3.83%    1.71%              kernel
  0.47%    0.56%           libjvm.so
  0.18%    0.51%        libc-2.12.so
  0.10%    0.06%  libpthread-2.12.so
  0.10%    0.02%         interpreter
  0.08%    0.12%   libhsdis-amd64.so
....................................................................................................
 99.98%  100.00%  <totals>

PrintAssembly processed: 178304 total address lines.
Perf output processed (skipped 7.777 seconds):
 Column 1: cycles (5114 events)
 Column 2: instructions (5117 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
C2, level 4, mat_mul.MyBenchmark::loop, version 574 (293 bytes) 

                                                                       ; - mat_mul.MyBenchmark::loop@32 (line 41)
                         0x00007f3df0e2e84b: mov    0x10(%r12,%rdx,8),%r14d
                         0x00007f3df0e2e850: cmp    %ecx,%r13d
                         0x00007f3df0e2e853: mov    $0x80000000,%ebx
                         0x00007f3df0e2e858: cmovl  %ebx,%ecx
                         0x00007f3df0e2e85b: lea    (%r12,%r8,8),%rdi
                         0x00007f3df0e2e85f: lea    (%r12,%r10,8),%r8
                         0x00007f3df0e2e863: lea    (%r12,%r14,8),%rax  ;*aaload
                                                                       ; - mat_mul.MyBenchmark::loop@80 (line 43)
                         0x00007f3df0e2e867: xor    %ebx,%ebx
           0.02%  ╭      0x00007f3df0e2e869: jmp    0x00007f3df0e2e892
  0.18%    0.18%  │ ↗ ↗  0x00007f3df0e2e86b: vmovq  %xmm4,%rdi
                  │ │ │  0x00007f3df0e2e870: mov    %r9d,0x10(%rdi,%rbx,4)  ;*iastore
                  │ │ │                                                ; - mat_mul.MyBenchmark::loop@121 (line 45)
                  │ │ │  0x00007f3df0e2e875: inc    %ebx               ;*iadd
                  │ │ │                                                ; - mat_mul.MyBenchmark::loop@128 (line 40)
  0.23%    0.41%  │ │ │  0x00007f3df0e2e877: mov    %ebx,0x14(%rsi)    ;*putfield j
                  │ │ │                                                ; - mat_mul.MyBenchmark::loop@129 (line 40)
  0.18%    0.10%  │ │ │  0x00007f3df0e2e87a: cmp    %r13d,%ebx
                  │ │ │  0x00007f3df0e2e87d: jge    0x00007f3df0e2e793  ;*if_icmpge
                  │ │ │                                                ; - mat_mul.MyBenchmark::loop@29 (line 40)
                  │ │ │  0x00007f3df0e2e883: vmovd  %xmm3,%r9d
                  │ │ │  0x00007f3df0e2e888: vmovd  %xmm2,%r10d
  0.20%    0.43%  │ │ │  0x00007f3df0e2e88d: vmovq  %xmm5,%rax         ;*aload_0
                  │ │ │                                                ; - mat_mul.MyBenchmark::loop@32 (line 41)
  0.10%    0.06%  ↘ │ │  0x00007f3df0e2e892: movl   $0x0,0x1c(%rsi)    ;*putfield s
                    │ │                                                ; - mat_mul.MyBenchmark::loop@34 (line 41)
                    │ │  0x00007f3df0e2e899: movl   $0x0,0x18(%rsi)    ;*putfield k
                    │ │                                                ; - mat_mul.MyBenchmark::loop@39 (line 42)
                    │ │  0x00007f3df0e2e8a0: mov    0xc(%r12,%r14,8),%edx  ; implicit exception: dispatches to 0x00007f3df0e2ea45
  0.31%    0.18%    │ │  0x00007f3df0e2e8a5: vmovq  %rdi,%xmm4
  0.16%    0.10%    │ │  0x00007f3df0e2e8aa: vmovd  %r10d,%xmm2
                    │ │  0x00007f3df0e2e8af: vmovd  %r9d,%xmm3
                    │ │  0x00007f3df0e2e8b4: mov    0x10(%r12,%r10,8),%r9d  ;*iaload
                    │ │                                                ; - mat_mul.MyBenchmark::loop@71 (line 43)
  0.29%    0.41%    │ │  0x00007f3df0e2e8b9: cmp    %edx,%ebx
                    │ │  0x00007f3df0e2e8bb: jae    0x00007f3df0e2ea09  ;*iaload
                    │ │                                                ; - mat_mul.MyBenchmark::loop@85 (line 43)
  0.16%    0.14%    │ │  0x00007f3df0e2e8c1: imul   0x10(%rax,%rbx,4),%r9d  ;*imul
                    │ │                                                ; - mat_mul.MyBenchmark::loop@86 (line 43)
           0.02%    │ │  0x00007f3df0e2e8c7: mov    %r9d,0x1c(%rsi)    ;*putfield s
                    │ │                                                ; - mat_mul.MyBenchmark::loop@88 (line 43)
                    │ │  0x00007f3df0e2e8cb: movl   $0x1,0x18(%rsi)    ;*putfield k
                    │ │                                                ; - mat_mul.MyBenchmark::loop@98 (line 42)
  0.23%    0.25%    │ │  0x00007f3df0e2e8d2: cmp    $0x1,%ecx
                    │ │  0x00007f3df0e2e8d5: jle    0x00007f3df0e2ea0d
  0.12%    0.20%    │ │  0x00007f3df0e2e8db: vmovq  %rax,%xmm5
                    │ │  0x00007f3df0e2e8e0: mov    $0x1,%edx
                    │ │  0x00007f3df0e2e8e5: nopw   0x0(%rax,%rax,1)   ;*aload_0
                    │ │                                                ; - mat_mul.MyBenchmark::loop@53 (line 43)
  0.70%    0.49%   ↗│ │  0x00007f3df0e2e8f0: mov    0x10(%r11,%rdx,4),%r10d  ;*aaload
                   ││ │                                                ; - mat_mul.MyBenchmark::loop@80 (line 43)
 11.85%   12.45%   ││ │  0x00007f3df0e2e8f5: mov    0xc(%r12,%r10,8),%ebp  ; implicit exception: dispatches to 0x00007f3df0e2ea45
  0.70%    0.61%   ││ │  0x00007f3df0e2e8fa: mov    0x10(%r8,%rdx,4),%edi  ;*iaload
                   ││ │                                                ; - mat_mul.MyBenchmark::loop@71 (line 43)
  0.31%    0.33%   ││ │  0x00007f3df0e2e8ff: lea    (%r12,%r10,8),%rax  ;*aaload
                   ││ │                                                ; - mat_mul.MyBenchmark::loop@80 (line 43)
  0.43%    0.59%   ││ │  0x00007f3df0e2e903: cmp    %ebp,%ebx
                   ││ │  0x00007f3df0e2e905: jae    0x00007f3df0e2e9d0  ;*iaload
                   ││ │                                                ; - mat_mul.MyBenchmark::loop@85 (line 43)
 11.54%   12.74%   ││ │  0x00007f3df0e2e90b: imul   0x10(%rax,%rbx,4),%edi
  1.99%    2.42%   ││ │  0x00007f3df0e2e910: add    %r9d,%edi          ;*iadd
                   ││ │                                                ; - mat_mul.MyBenchmark::loop@87 (line 43)
  3.70%    2.64%   ││ │  0x00007f3df0e2e913: mov    %edi,0x1c(%rsi)    ;*putfield s
                   ││ │                                                ; - mat_mul.MyBenchmark::loop@88 (line 43)
  9.09%    6.35%   ││ │  0x00007f3df0e2e916: mov    %edx,%r10d
  3.21%    2.83%   ││ │  0x00007f3df0e2e919: inc    %r10d
  0.31%    0.35%   ││ │  0x00007f3df0e2e91c: mov    %r10d,0x18(%rsi)   ;*putfield k
                   ││ │                                                ; - mat_mul.MyBenchmark::loop@98 (line 42)
  0.41%    0.20%   ││ │  0x00007f3df0e2e920: movslq %edx,%r9
 10.70%   11.08%   ││ │  0x00007f3df0e2e923: mov    0x14(%r11,%r9,4),%ebp  ;*aaload
                   ││ │                                                ; - mat_mul.MyBenchmark::loop@80 (line 43)
  3.21%    3.34%   ││ │  0x00007f3df0e2e928: mov    0xc(%r12,%rbp,8),%r10d  ; implicit exception: dispatches to 0x00007f3df0e2ea45
  0.35%    0.23%   ││ │  0x00007f3df0e2e92d: mov    0x14(%r8,%r9,4),%r9d  ;*iaload
                   ││ │                                                ; - mat_mul.MyBenchmark::loop@71 (line 43)
  0.59%    0.45%   ││ │  0x00007f3df0e2e932: lea    (%r12,%rbp,8),%rax  ;*aaload
                   ││ │                                                ; - mat_mul.MyBenchmark::loop@80 (line 43)
  8.94%   10.47%   ││ │  0x00007f3df0e2e936: cmp    %r10d,%ebx
                   ││ │  0x00007f3df0e2e939: jae    0x00007f3df0e2e9d9  ;*iaload
                   ││ │                                                ; - mat_mul.MyBenchmark::loop@85 (line 43)
  3.25%    3.22%   ││ │  0x00007f3df0e2e93f: imul   0x10(%rax,%rbx,4),%r9d
  1.00%    0.70%   ││ │  0x00007f3df0e2e945: add    %edi,%r9d          ;*iadd
                   ││ │                                                ; - mat_mul.MyBenchmark::loop@87 (line 43)
  8.13%    9.20%   ││ │  0x00007f3df0e2e948: mov    %r9d,0x1c(%rsi)    ;*putfield s
                   ││ │                                                ; - mat_mul.MyBenchmark::loop@88 (line 43)
 12.18%   11.76%   ││ │  0x00007f3df0e2e94c: add    $0x2,%edx          ;*iadd
                   ││ │                                                ; - mat_mul.MyBenchmark::loop@97 (line 42)
  0.76%    0.82%   ││ │  0x00007f3df0e2e94f: mov    %edx,0x18(%rsi)    ;*putfield k
                   ││ │                                                ; - mat_mul.MyBenchmark::loop@98 (line 42)
  0.27%    0.25%   ││ │  0x00007f3df0e2e952: cmp    %ecx,%edx
                   ╰│ │  0x00007f3df0e2e954: jl     0x00007f3df0e2e8f0  ;*if_icmpge
                    │ │                                                ; - mat_mul.MyBenchmark::loop@50 (line 42)
                    │ │  0x00007f3df0e2e956: cmp    %r13d,%edx
                    ╰ │  0x00007f3df0e2e959: jge    0x00007f3df0e2e86b
  0.29%    0.43%      │  0x00007f3df0e2e95f: nop                       ;*aload_0
                      │                                                ; - mat_mul.MyBenchmark::loop@53 (line 43)
  0.02%              ↗│  0x00007f3df0e2e960: mov    0x10(%r11,%rdx,4),%edi  ;*aaload
                     ││                                                ; - mat_mul.MyBenchmark::loop@80 (line 43)
                     ││  0x00007f3df0e2e965: mov    0xc(%r12,%rdi,8),%r10d  ; implicit exception: dispatches to 0x00007f3df0e2ea45
                     ││  0x00007f3df0e2e96a: mov    0x10(%r8,%rdx,4),%ebp  ;*iaload
                     ││                                                ; - mat_mul.MyBenchmark::loop@71 (line 43)
  0.41%    0.35%     ││  0x00007f3df0e2e96f: lea    (%r12,%rdi,8),%rax  ;*aaload
                     ││                                                ; - mat_mul.MyBenchmark::loop@80 (line 43)
  0.02%              ││  0x00007f3df0e2e973: cmp    %r10d,%ebx
                     ││  0x00007f3df0e2e976: jae    0x00007f3df0e2e9df  ;*iaload
                     ││                                                ; - mat_mul.MyBenchmark::loop@85 (line 43)
                     ││  0x00007f3df0e2e978: imul   0x10(%rax,%rbx,4),%ebp
  0.14%    0.02%     ││  0x00007f3df0e2e97d: add    %ebp,%r9d          ;*iadd
                     ││                                                ; - mat_mul.MyBenchmark::loop@87 (line 43)
  0.45%    0.10%     ││  0x00007f3df0e2e980: mov    %r9d,0x1c(%rsi)    ;*putfield s
                     ││                                                ; - mat_mul.MyBenchmark::loop@88 (line 43)
  0.10%              ││  0x00007f3df0e2e984: inc    %edx               ;*iadd
                     ││                                                ; - mat_mul.MyBenchmark::loop@97 (line 42)
                     ││  0x00007f3df0e2e986: mov    %edx,0x18(%rsi)    ;*putfield k
                     ││                                                ; - mat_mul.MyBenchmark::loop@98 (line 42)
                     ││  0x00007f3df0e2e989: cmp    %r13d,%edx
                     ╰│  0x00007f3df0e2e98c: jl     0x00007f3df0e2e960  ;*if_icmpge
                      │                                                ; - mat_mul.MyBenchmark::loop@50 (line 42)
  0.22%    0.43%      ╰  0x00007f3df0e2e98e: jmpq   0x00007f3df0e2e86b
                         0x00007f3df0e2e993: vmovd  %xmm0,%r11d
                         0x00007f3df0e2e998: vmovss (%rsp),%xmm0
                         0x00007f3df0e2e99d: mov    %r13d,(%rsp)
                         0x00007f3df0e2e9a1: jmpq   0x00007f3df0e2e79c  ;*if_icmpge
                                                                       ; - mat_mul.MyBenchmark::loop@13 (line 39)
                         0x00007f3df0e2e9a6: mov    0x2c(%rsi),%ebp    ;*getfield res
                                                                       ; - mat_mul.MyBenchmark::loop@150 (line 48)
                         0x00007f3df0e2e9a9: vmovq  %xmm1,%rsi
                         0x00007f3df0e2e9ae: test   %rsi,%rsi
....................................................................................................
 97.42%   97.36%  <total for region 1>

....[Hottest Regions]...............................................................................
 97.42%   97.36%         C2, level 4  mat_mul.MyBenchmark::loop, version 574 (293 bytes) 
  0.23%    0.21%              kernel  [unknown] (0 bytes) 
  0.10%    0.12%         C2, level 4  mat_mul.MyBenchmark::loop, version 574 (18 bytes) 
  0.08%    0.02%              kernel  [unknown] (39 bytes) 
  0.06%                       kernel  [unknown] (0 bytes) 
  0.06%    0.08%        libc-2.12.so  _IO_fwrite (0 bytes) 
  0.04%                       kernel  [unknown] (25 bytes) 
  0.04%    0.02%              kernel  [unknown] (13 bytes) 
  0.04%                       kernel  [unknown] (0 bytes) 
  0.04%                       kernel  [unknown] (28 bytes) 
  0.04%    0.02%              kernel  [unknown] (17 bytes) 
  0.04%    0.02%              kernel  [unknown] (0 bytes) 
  0.04%                       kernel  [unknown] (0 bytes) 
  0.04%    0.02%              kernel  [unknown] (24 bytes) 
  0.04%    0.02%        libc-2.12.so  _IO_default_xsputn (4 bytes) 
  0.04%                 libc-2.12.so  __strlen_sse42 (4 bytes) 
  0.04%                  C2, level 4  mat_mul.MyBenchmark::loop, version 574 (23 bytes) 
  0.04%                    libjvm.so  Monitor::ILock (0 bytes) 
  0.04%    0.06%           libjvm.so  outputStream::update_position (0 bytes) 
  0.02%                       kernel  [unknown] (0 bytes) 
  1.53%    2.05%  <...other 154 warm regions...>
....................................................................................................
100.00%  100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 97.58%   97.52%         C2, level 4  mat_mul.MyBenchmark::loop, version 574 
  1.33%    1.35%              kernel  [unknown] 
  0.08%    0.08%        libc-2.12.so  _IO_fwrite 
  0.06%    0.10%        libc-2.12.so  _IO_default_xsputn 
  0.06%    0.02%        libc-2.12.so  vfprintf 
  0.04%                 libc-2.12.so  __strlen_sse42 
  0.04%    0.06%           libjvm.so  outputStream::update_position 
  0.04%                    libjvm.so  Monitor::ILock 
  0.04%                    libjvm.so  defaultStream::write 
  0.02%                 libc-2.12.so  __strchr_sse42 
  0.02%                    libjvm.so  Constant::visit 
  0.02%    0.04%           libjvm.so  jio_print 
  0.02%                    libjvm.so  InstanceKlass::allocate_objArray 
  0.02%                    libjvm.so  DebugInformationRecorder::describe_scope 
  0.02%                    libjvm.so  Monitor::IWait 
  0.02%    0.02%   libhsdis-amd64.so  print_insn 
  0.02%                 libc-2.12.so  memmove 
  0.02%                    libjvm.so  InstanceKlass::klass_holder 
  0.02%    0.04%           libjvm.so  fileStream::write 
  0.02%            libhsdis-amd64.so  OP_E_memory 
  0.53%    0.23%  <...other 27 warm methods...>
....................................................................................................
100.00%   99.45%  <totals>

....[Distribution by Source]........................................................................
 97.58%   97.52%         C2, level 4
  1.33%    1.35%              kernel
  0.59%    0.64%           libjvm.so
  0.37%    0.37%        libc-2.12.so
  0.06%    0.02%   libhsdis-amd64.so
  0.04%    0.04%         interpreter
  0.02%    0.06%  libpthread-2.12.so
  0.02%                  C1, level 3
....................................................................................................
100.00%  100.00%  <totals>



# JMH version: 1.19
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /opt/jdk1.8.0_131/jre/bin/java
# VM options: -XX:+UnlockDiagnosticVMOptions -XX:CompileCommand=print,MyBenchmark
# Warmup: 3 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: mat_mul.MyBenchmark.loop
# Parameters: (N_str = 128)

# Run progress: 10.00% complete, ETA 00:04:20
# Fork: 1 of 2
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 0.003 s/op
# Warmup Iteration   2: 0.002 s/op
# Warmup Iteration   3: 0.002 s/op
Iteration   1: 0.002 s/op
Iteration   2: 0.002 s/op
Iteration   3: 0.002 s/op
Iteration   4: 0.002 s/op
Iteration   5: 0.002 s/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 15.00% complete, ETA 00:04:04
# Fork: 2 of 2
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 0.003 s/op
# Warmup Iteration   2: 0.003 s/op
# Warmup Iteration   3: 0.002 s/op
Iteration   1: 0.002 s/op
Iteration   2: 0.002 s/op
Iteration   3: 0.002 s/op
Iteration   4: 0.002 s/op
Iteration   5: 0.002 s/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "mat_mul.MyBenchmark.loop":
  0.002 ±(99.9%) 0.001 s/op [Average]
  (min, avg, max) = (0.002, 0.002, 0.002), stdev = 0.001
  CI (99.9%): [0.002, 0.002] (assumes normal distribution)

Secondary result "mat_mul.MyBenchmark.loop:·asm":
PrintAssembly processed: 177339 total address lines.
Perf output processed (skipped 7.922 seconds):
 Column 1: cycles (5165 events)
 Column 2: instructions (5156 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
C2, level 4, mat_mul.MyBenchmark::loop, version 572 (279 bytes) 

                                                                        ; - mat_mul.MyBenchmark::loop@32 (line 41)
                          0x00007f2da9482d8b: mov    0x10(%r12,%rdx,8),%r14d
                          0x00007f2da9482d90: cmp    %ecx,%r13d
                          0x00007f2da9482d93: mov    $0x80000000,%ebx
                          0x00007f2da9482d98: cmovl  %ebx,%ecx
                          0x00007f2da9482d9b: lea    (%r12,%r8,8),%rdi
                          0x00007f2da9482d9f: lea    (%r12,%r10,8),%r8
                          0x00007f2da9482da3: lea    (%r12,%r14,8),%rax  ;*aaload
                                                                        ; - mat_mul.MyBenchmark::loop@80 (line 43)
                          0x00007f2da9482da7: xor    %ebx,%ebx
           0.02%  ╭       0x00007f2da9482da9: jmp    0x00007f2da9482dd2
  0.17%    0.33%  │  ↗ ↗  0x00007f2da9482dab: vmovq  %xmm4,%rdi
                  │  │ │  0x00007f2da9482db0: mov    %r9d,0x10(%rdi,%rbx,4)  ;*iastore
                  │  │ │                                                ; - mat_mul.MyBenchmark::loop@121 (line 45)
                  │  │ │  0x00007f2da9482db5: inc    %ebx               ;*iadd
                  │  │ │                                                ; - mat_mul.MyBenchmark::loop@128 (line 40)
                  │  │ │  0x00007f2da9482db7: mov    %ebx,0x14(%rsi)    ;*putfield j
                  │  │ │                                                ; - mat_mul.MyBenchmark::loop@129 (line 40)
  0.23%    0.29%  │  │ │  0x00007f2da9482dba: cmp    %r13d,%ebx
                  │  │ │  0x00007f2da9482dbd: jge    0x00007f2da9482cd3  ;*if_icmpge
                  │  │ │                                                ; - mat_mul.MyBenchmark::loop@29 (line 40)
                  │  │ │  0x00007f2da9482dc3: vmovd  %xmm3,%r9d
                  │  │ │  0x00007f2da9482dc8: vmovd  %xmm2,%r10d
  0.04%           │  │ │  0x00007f2da9482dcd: vmovq  %xmm5,%rax         ;*aload_0
                  │  │ │                                                ; - mat_mul.MyBenchmark::loop@32 (line 41)
  0.14%    0.25%  ↘  │ │  0x00007f2da9482dd2: movl   $0x0,0x1c(%rsi)    ;*putfield s
                     │ │                                                ; - mat_mul.MyBenchmark::loop@34 (line 41)
                     │ │  0x00007f2da9482dd9: movl   $0x0,0x18(%rsi)    ;*putfield k
                     │ │                                                ; - mat_mul.MyBenchmark::loop@39 (line 42)
                     │ │  0x00007f2da9482de0: mov    0xc(%r12,%r14,8),%edx  ; implicit exception: dispatches to 0x00007f2da9482f85
  0.02%              │ │  0x00007f2da9482de5: vmovq  %rdi,%xmm4
  0.21%    0.12%     │ │  0x00007f2da9482dea: vmovd  %r10d,%xmm2
                     │ │  0x00007f2da9482def: vmovd  %r9d,%xmm3
                     │ │  0x00007f2da9482df4: mov    0x10(%r12,%r10,8),%r9d  ;*iaload
                     │ │                                                ; - mat_mul.MyBenchmark::loop@71 (line 43)
                     │ │  0x00007f2da9482df9: cmp    %edx,%ebx
                     │ │  0x00007f2da9482dfb: jae    0x00007f2da9482f48  ;*iaload
                     │ │                                                ; - mat_mul.MyBenchmark::loop@85 (line 43)
  0.21%    0.08%     │ │  0x00007f2da9482e01: imul   0x10(%rax,%rbx,4),%r9d  ;*imul
                     │ │                                                ; - mat_mul.MyBenchmark::loop@86 (line 43)
  0.04%    0.02%     │ │  0x00007f2da9482e07: mov    %r9d,0x1c(%rsi)    ;*putfield s
                     │ │                                                ; - mat_mul.MyBenchmark::loop@88 (line 43)
  0.02%              │ │  0x00007f2da9482e0b: movl   $0x1,0x18(%rsi)    ;*putfield k
                     │ │                                                ; - mat_mul.MyBenchmark::loop@98 (line 42)
           0.02%     │ │  0x00007f2da9482e12: cmp    $0x1,%ecx
                     │ │  0x00007f2da9482e15: jle    0x00007f2da9482f4c
  0.23%    0.12%     │ │  0x00007f2da9482e1b: vmovq  %rax,%xmm5
                     │ │  0x00007f2da9482e20: mov    $0x1,%edx
  0.02%    0.02%     │ │  0x00007f2da9482e25: nopw   0x0(%rax,%rax,1)   ;*aload_0
                     │ │                                                ; - mat_mul.MyBenchmark::loop@53 (line 43)
  1.57%    1.36%    ↗│ │  0x00007f2da9482e30: mov    0x10(%r11,%rdx,4),%r10d  ;*aaload
                    ││ │                                                ; - mat_mul.MyBenchmark::loop@80 (line 43)
  6.91%    7.16%    ││ │  0x00007f2da9482e35: mov    0xc(%r12,%r10,8),%ebp  ; implicit exception: dispatches to 0x00007f2da9482f85
  5.92%    5.45%    ││ │  0x00007f2da9482e3a: mov    0x10(%r8,%rdx,4),%edi  ;*iaload
                    ││ │                                                ; - mat_mul.MyBenchmark::loop@71 (line 43)
  2.01%    1.67%    ││ │  0x00007f2da9482e3f: lea    (%r12,%r10,8),%rax  ;*aaload
                    ││ │                                                ; - mat_mul.MyBenchmark::loop@80 (line 43)
  1.39%    1.53%    ││ │  0x00007f2da9482e43: cmp    %ebp,%ebx
                   ╭││ │  0x00007f2da9482e45: jae    0x00007f2da9482ecf  ;*iaload
                   │││ │                                                ; - mat_mul.MyBenchmark::loop@85 (line 43)
  6.95%    7.14%   │││ │  0x00007f2da9482e4b: imul   0x10(%rax,%rbx,4),%edi
  5.81%    5.51%   │││ │  0x00007f2da9482e50: add    %r9d,%edi          ;*iadd
                   │││ │                                                ; - mat_mul.MyBenchmark::loop@87 (line 43)
  3.52%    3.82%   │││ │  0x00007f2da9482e53: mov    %edi,0x1c(%rsi)    ;*putfield s
                   │││ │                                                ; - mat_mul.MyBenchmark::loop@88 (line 43)
  5.00%    5.16%   │││ │  0x00007f2da9482e56: mov    %edx,%r10d
  4.07%    4.33%   │││ │  0x00007f2da9482e59: inc    %r10d
  2.48%    2.35%   │││ │  0x00007f2da9482e5c: mov    %r10d,0x18(%rsi)   ;*putfield k
                   │││ │                                                ; - mat_mul.MyBenchmark::loop@98 (line 42)
  1.68%    1.55%   │││ │  0x00007f2da9482e60: movslq %edx,%r9
  4.70%    5.18%   │││ │  0x00007f2da9482e63: mov    0x14(%r11,%r9,4),%ebp  ;*aaload
                   │││ │                                                ; - mat_mul.MyBenchmark::loop@80 (line 43)
  4.47%    5.04%   │││ │  0x00007f2da9482e68: mov    0xc(%r12,%rbp,8),%r10d  ; implicit exception: dispatches to 0x00007f2da9482f85
  2.36%    2.46%   │││ │  0x00007f2da9482e6d: mov    0x14(%r8,%r9,4),%r9d  ;*iaload
                   │││ │                                                ; - mat_mul.MyBenchmark::loop@71 (line 43)
  2.13%    2.00%   │││ │  0x00007f2da9482e72: lea    (%r12,%rbp,8),%rax  ;*aaload
                   │││ │                                                ; - mat_mul.MyBenchmark::loop@80 (line 43)
  5.83%    5.14%   │││ │  0x00007f2da9482e76: cmp    %r10d,%ebx
                   │││ │  0x00007f2da9482e79: jae    0x00007f2da9482ed8  ;*iaload
                   │││ │                                                ; - mat_mul.MyBenchmark::loop@85 (line 43)
  4.78%    4.93%   │││ │  0x00007f2da9482e7b: imul   0x10(%rax,%rbx,4),%r9d
  4.45%    4.64%   │││ │  0x00007f2da9482e81: add    %edi,%r9d          ;*iadd
                   │││ │                                                ; - mat_mul.MyBenchmark::loop@87 (line 43)
  4.18%    4.13%   │││ │  0x00007f2da9482e84: mov    %r9d,0x1c(%rsi)    ;*putfield s
                   │││ │                                                ; - mat_mul.MyBenchmark::loop@88 (line 43)
  6.82%    6.83%   │││ │  0x00007f2da9482e88: add    $0x2,%edx          ;*iadd
                   │││ │                                                ; - mat_mul.MyBenchmark::loop@97 (line 42)
  3.45%    3.32%   │││ │  0x00007f2da9482e8b: mov    %edx,0x18(%rsi)    ;*putfield k
                   │││ │                                                ; - mat_mul.MyBenchmark::loop@98 (line 42)
  1.90%    1.75%   │││ │  0x00007f2da9482e8e: cmp    %ecx,%edx
                   │╰│ │  0x00007f2da9482e90: jl     0x00007f2da9482e30  ;*if_icmpge
                   │ │ │                                                ; - mat_mul.MyBenchmark::loop@50 (line 42)
           0.04%   │ │ │  0x00007f2da9482e92: cmp    %r13d,%edx
                   │ ╰ │  0x00007f2da9482e95: jge    0x00007f2da9482dab
  0.14%    0.21%   │   │  0x00007f2da9482e9b: nop                       ;*aload_0
                   │   │                                                ; - mat_mul.MyBenchmark::loop@53 (line 43)
  0.02%    0.06%   │  ↗│  0x00007f2da9482e9c: mov    0x10(%r11,%rdx,4),%edi  ;*aaload
                   │  ││                                                ; - mat_mul.MyBenchmark::loop@80 (line 43)
  0.58%    0.35%   │  ││  0x00007f2da9482ea1: mov    0xc(%r12,%rdi,8),%r10d  ; implicit exception: dispatches to 0x00007f2da9482f85
  0.60%    1.07%   │  ││  0x00007f2da9482ea6: mov    0x10(%r8,%rdx,4),%ebp  ;*iaload
                   │  ││                                                ; - mat_mul.MyBenchmark::loop@71 (line 43)
  0.02%            │  ││  0x00007f2da9482eab: lea    (%r12,%rdi,8),%rax  ;*aaload
                   │  ││                                                ; - mat_mul.MyBenchmark::loop@80 (line 43)
                   │  ││  0x00007f2da9482eaf: cmp    %r10d,%ebx
                   │  ││  0x00007f2da9482eb2: jae    0x00007f2da9482ede  ;*iaload
                   │  ││                                                ; - mat_mul.MyBenchmark::loop@85 (line 43)
  0.14%    0.27%   │  ││  0x00007f2da9482eb4: imul   0x10(%rax,%rbx,4),%ebp
  0.68%    0.66%   │  ││  0x00007f2da9482eb9: add    %ebp,%r9d          ;*iadd
                   │  ││                                                ; - mat_mul.MyBenchmark::loop@87 (line 43)
  0.29%    0.39%   │  ││  0x00007f2da9482ebc: mov    %r9d,0x1c(%rsi)    ;*putfield s
                   │  ││                                                ; - mat_mul.MyBenchmark::loop@88 (line 43)
  0.17%    0.16%   │  ││  0x00007f2da9482ec0: inc    %edx               ;*iadd
                   │  ││                                                ; - mat_mul.MyBenchmark::loop@97 (line 42)
                   │  ││  0x00007f2da9482ec2: mov    %edx,0x18(%rsi)    ;*putfield k
                   │  ││                                                ; - mat_mul.MyBenchmark::loop@98 (line 42)
                   │  ││  0x00007f2da9482ec5: cmp    %r13d,%edx
                   │  ╰│  0x00007f2da9482ec8: jl     0x00007f2da9482e9c  ;*if_icmpge
                   │   │                                                ; - mat_mul.MyBenchmark::loop@50 (line 42)
                   │   ╰  0x00007f2da9482eca: jmpq   0x00007f2da9482dab
                   ↘      0x00007f2da9482ecf: mov    %edi,%r10d
                          0x00007f2da9482ed2: mov    %r9d,%edi
....................................................................................................
 96.36%   96.88%  <total for region 1>

....[Hottest Regions]...............................................................................
 96.36%   96.88%         C2, level 4  mat_mul.MyBenchmark::loop, version 572 (279 bytes) 
  0.29%                       kernel  [unknown] (0 bytes) 
  0.27%    0.23%              kernel  [unknown] (0 bytes) 
  0.12%    0.08%              kernel  [unknown] (15 bytes) 
  0.08%    0.02%              kernel  [unknown] (0 bytes) 
  0.06%    0.10%              kernel  [unknown] (86 bytes) 
  0.06%    0.02%              kernel  [unknown] (0 bytes) 
  0.06%    0.04%              kernel  [unknown] (0 bytes) 
  0.06%    0.02%              kernel  [unknown] (24 bytes) 
  0.06%    0.02%        libc-2.12.so  _IO_fwrite (0 bytes) 
  0.06%                  C2, level 4  mat_mul.MyBenchmark::loop, version 572 (18 bytes) 
  0.04%    0.02%              kernel  [unknown] (0 bytes) 
  0.04%    0.02%              kernel  [unknown] (25 bytes) 
  0.04%                       kernel  [unknown] (0 bytes) 
  0.04%    0.02%              kernel  [unknown] (24 bytes) 
  0.04%                       kernel  [unknown] (0 bytes) 
  0.04%                       kernel  [unknown] (0 bytes) 
  0.04%    0.04%        libc-2.12.so  vfprintf (51 bytes) 
  0.04%    0.02%        libc-2.12.so  __strchrnul (36 bytes) 
  0.04%    0.04%  libpthread-2.12.so  pthread_getspecific (52 bytes) 
  2.17%    2.42%  <...other 197 warm regions...>
....................................................................................................
 99.98%   99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 96.42%   96.88%         C2, level 4  mat_mul.MyBenchmark::loop, version 572 
  2.11%    1.71%              kernel  [unknown] 
  0.12%    0.12%        libc-2.12.so  vfprintf 
  0.10%    0.02%   libhsdis-amd64.so  print_insn 
  0.10%    0.08%        libc-2.12.so  _IO_fwrite 
  0.04%                    libjvm.so  LIR_OpVisitState::visit 
  0.04%    0.04%        libc-2.12.so  __strchrnul 
  0.04%    0.02%        libc-2.12.so  __strcpy_ssse3 
  0.04%    0.02%           libjvm.so  fileStream::write 
  0.04%    0.10%           libjvm.so  outputStream::update_position 
  0.04%                  interpreter  invokevirtual  182 invokevirtual  
  0.04%    0.02%           libjvm.so  Monitor::unlock 
  0.04%    0.04%  libpthread-2.12.so  pthread_getspecific 
  0.04%                    libjvm.so  defaultStream::write 
  0.04%           libpthread-2.12.so  pthread_cond_timedwait@@GLIBC_2.3.2 
  0.04%           libpthread-2.12.so  __pthread_disable_asynccancel 
  0.04%    0.10%           libjvm.so  RelocIterator::initialize 
  0.04%                    libjvm.so  outputStream::print 
  0.02%                    libjvm.so  ScopeDesc::ScopeDesc 
  0.02%                    libjvm.so  LIR_Assembler::emit_code 
  0.60%    0.19%  <...other 31 warm methods...>
....................................................................................................
 99.98%   99.32%  <totals>

....[Distribution by Source]........................................................................
 96.42%   96.88%         C2, level 4
  2.11%    1.71%              kernel
  0.76%    0.68%           libjvm.so
  0.37%    0.54%        libc-2.12.so
  0.12%    0.06%  libpthread-2.12.so
  0.12%    0.06%   libhsdis-amd64.so
  0.06%                  interpreter
  0.02%                    libzip.so
  0.02%                librt-2.12.so
....................................................................................................
 99.98%   99.98%  <totals>

PrintAssembly processed: 178597 total address lines.
Perf output processed (skipped 8.255 seconds):
 Column 1: cycles (5139 events)
 Column 2: instructions (5136 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
C2, level 4, mat_mul.MyBenchmark::loop, version 572 (287 bytes) 

                            0x00007feb654846cb: mov    0x10(%r12,%rdx,8),%r14d
                            0x00007feb654846d0: cmp    %ecx,%r13d
                            0x00007feb654846d3: mov    $0x80000000,%ebx
                            0x00007feb654846d8: cmovl  %ebx,%ecx
                            0x00007feb654846db: lea    (%r12,%r8,8),%rdi
                            0x00007feb654846df: lea    (%r12,%r10,8),%r8
                            0x00007feb654846e3: lea    (%r12,%r14,8),%rax  ;*aaload
                                                                          ; - mat_mul.MyBenchmark::loop@80 (line 43)
                            0x00007feb654846e7: xor    %ebx,%ebx
                  ╭         0x00007feb654846e9: jmp    0x00007feb65484712
  0.23%    0.18%  │   ↗  ↗  0x00007feb654846eb: vmovq  %xmm4,%rdi
                  │   │  │  0x00007feb654846f0: mov    %r9d,0x10(%rdi,%rbx,4)  ;*iastore
                  │   │  │                                                ; - mat_mul.MyBenchmark::loop@121 (line 45)
                  │   │  │  0x00007feb654846f5: inc    %ebx               ;*iadd
                  │   │  │                                                ; - mat_mul.MyBenchmark::loop@128 (line 40)
                  │   │  │  0x00007feb654846f7: mov    %ebx,0x14(%rsi)    ;*putfield j
                  │   │  │                                                ; - mat_mul.MyBenchmark::loop@129 (line 40)
  0.21%    0.16%  │   │  │  0x00007feb654846fa: cmp    %r13d,%ebx
                  │   │  │  0x00007feb654846fd: jge    0x00007feb65484613  ;*if_icmpge
                  │   │  │                                                ; - mat_mul.MyBenchmark::loop@29 (line 40)
                  │   │  │  0x00007feb65484703: vmovd  %xmm3,%r9d
                  │   │  │  0x00007feb65484708: vmovd  %xmm2,%r10d
                  │   │  │  0x00007feb6548470d: vmovq  %xmm5,%rax         ;*aload_0
                  │   │  │                                                ; - mat_mul.MyBenchmark::loop@32 (line 41)
  0.27%    0.14%  ↘   │  │  0x00007feb65484712: movl   $0x0,0x1c(%rsi)    ;*putfield s
                      │  │                                                ; - mat_mul.MyBenchmark::loop@34 (line 41)
                      │  │  0x00007feb65484719: movl   $0x0,0x18(%rsi)    ;*putfield k
                      │  │                                                ; - mat_mul.MyBenchmark::loop@39 (line 42)
                      │  │  0x00007feb65484720: mov    0xc(%r12,%r14,8),%edx  ; implicit exception: dispatches to 0x00007feb654848c1
  0.02%               │  │  0x00007feb65484725: vmovq  %rdi,%xmm4
  0.16%    0.16%      │  │  0x00007feb6548472a: vmovd  %r10d,%xmm2
                      │  │  0x00007feb6548472f: vmovd  %r9d,%xmm3
  0.02%               │  │  0x00007feb65484734: mov    0x10(%r12,%r10,8),%r9d  ;*iaload
                      │  │                                                ; - mat_mul.MyBenchmark::loop@71 (line 43)
                      │  │  0x00007feb65484739: cmp    %edx,%ebx
                      │  │  0x00007feb6548473b: jae    0x00007feb65484884  ;*iaload
                      │  │                                                ; - mat_mul.MyBenchmark::loop@85 (line 43)
  0.19%    0.14%      │  │  0x00007feb65484741: imul   0x10(%rax,%rbx,4),%r9d  ;*imul
                      │  │                                                ; - mat_mul.MyBenchmark::loop@86 (line 43)
  0.04%    0.02%      │  │  0x00007feb65484747: mov    %r9d,0x1c(%rsi)    ;*putfield s
                      │  │                                                ; - mat_mul.MyBenchmark::loop@88 (line 43)
                      │  │  0x00007feb6548474b: movl   $0x1,0x18(%rsi)    ;*putfield k
                      │  │                                                ; - mat_mul.MyBenchmark::loop@98 (line 42)
  0.02%               │  │  0x00007feb65484752: cmp    $0x1,%ecx
                      │  │  0x00007feb65484755: jle    0x00007feb65484888
  0.23%    0.12%      │  │  0x00007feb6548475b: vmovq  %rax,%xmm5
                      │  │  0x00007feb65484760: mov    $0x1,%edx
  0.02%    0.02%      │  │  0x00007feb65484765: nopw   0x0(%rax,%rax,1)   ;*aload_0
                      │  │                                                ; - mat_mul.MyBenchmark::loop@53 (line 43)
  1.54%    1.85%     ↗│  │  0x00007feb65484770: mov    0x10(%r11,%rdx,4),%r10d  ;*aaload
                     ││  │                                                ; - mat_mul.MyBenchmark::loop@80 (line 43)
  6.97%    6.99%     ││  │  0x00007feb65484775: mov    0xc(%r12,%r10,8),%ebp  ; implicit exception: dispatches to 0x00007feb654848c1
  5.10%    5.32%     ││  │  0x00007feb6548477a: mov    0x10(%r8,%rdx,4),%edi  ;*iaload
                     ││  │                                                ; - mat_mul.MyBenchmark::loop@71 (line 43)
  1.91%    1.83%     ││  │  0x00007feb6548477f: lea    (%r12,%r10,8),%rax  ;*aaload
                     ││  │                                                ; - mat_mul.MyBenchmark::loop@80 (line 43)
  1.65%    1.58%     ││  │  0x00007feb65484783: cmp    %ebp,%ebx
                   ╭ ││  │  0x00007feb65484785: jae    0x00007feb6548480f  ;*iaload
                   │ ││  │                                                ; - mat_mul.MyBenchmark::loop@85 (line 43)
  6.40%    7.17%   │ ││  │  0x00007feb6548478b: imul   0x10(%rax,%rbx,4),%edi
  6.03%    5.92%   │ ││  │  0x00007feb65484790: add    %r9d,%edi          ;*iadd
                   │ ││  │                                                ; - mat_mul.MyBenchmark::loop@87 (line 43)
  4.20%    3.74%   │ ││  │  0x00007feb65484793: mov    %edi,0x1c(%rsi)    ;*putfield s
                   │ ││  │                                                ; - mat_mul.MyBenchmark::loop@88 (line 43)
  4.36%    4.95%   │ ││  │  0x00007feb65484796: mov    %edx,%r10d
  4.36%    4.40%   │ ││  │  0x00007feb65484799: inc    %r10d
  2.78%    2.49%   │ ││  │  0x00007feb6548479c: mov    %r10d,0x18(%rsi)   ;*putfield k
                   │ ││  │                                                ; - mat_mul.MyBenchmark::loop@98 (line 42)
  2.12%    1.48%   │ ││  │  0x00007feb654847a0: movslq %edx,%r9
  4.75%    5.33%   │ ││  │  0x00007feb654847a3: mov    0x14(%r11,%r9,4),%ebp  ;*aaload
                   │ ││  │                                                ; - mat_mul.MyBenchmark::loop@80 (line 43)
  4.67%    4.60%   │ ││  │  0x00007feb654847a8: mov    0xc(%r12,%rbp,8),%r10d  ; implicit exception: dispatches to 0x00007feb654848c1
  2.82%    2.57%   │ ││  │  0x00007feb654847ad: mov    0x14(%r8,%r9,4),%r9d  ;*iaload
                   │ ││  │                                                ; - mat_mul.MyBenchmark::loop@71 (line 43)
  2.06%    1.48%   │ ││  │  0x00007feb654847b2: lea    (%r12,%rbp,8),%rax  ;*aaload
                   │ ││  │                                                ; - mat_mul.MyBenchmark::loop@80 (line 43)
  4.71%    4.65%   │ ││  │  0x00007feb654847b6: cmp    %r10d,%ebx
                   │╭││  │  0x00007feb654847b9: jae    0x00007feb65484818  ;*iaload
                   ││││  │                                                ; - mat_mul.MyBenchmark::loop@85 (line 43)
  4.20%    5.53%   ││││  │  0x00007feb654847bb: imul   0x10(%rax,%rbx,4),%r9d
  4.86%    4.83%   ││││  │  0x00007feb654847c1: add    %edi,%r9d          ;*iadd
                   ││││  │                                                ; - mat_mul.MyBenchmark::loop@87 (line 43)
  4.81%    4.34%   ││││  │  0x00007feb654847c4: mov    %r9d,0x1c(%rsi)    ;*putfield s
                   ││││  │                                                ; - mat_mul.MyBenchmark::loop@88 (line 43)
  7.32%    6.87%   ││││  │  0x00007feb654847c8: add    $0x2,%edx          ;*iadd
                   ││││  │                                                ; - mat_mul.MyBenchmark::loop@97 (line 42)
  3.09%    3.84%   ││││  │  0x00007feb654847cb: mov    %edx,0x18(%rsi)    ;*putfield k
                   ││││  │                                                ; - mat_mul.MyBenchmark::loop@98 (line 42)
  2.00%    1.64%   ││││  │  0x00007feb654847ce: cmp    %ecx,%edx
                   ││╰│  │  0x00007feb654847d0: jl     0x00007feb65484770  ;*if_icmpge
                   ││ │  │                                                ; - mat_mul.MyBenchmark::loop@50 (line 42)
  0.02%    0.04%   ││ │  │  0x00007feb654847d2: cmp    %r13d,%edx
                   ││ ╰  │  0x00007feb654847d5: jge    0x00007feb654846eb
  0.19%    0.19%   ││    │  0x00007feb654847db: nop                       ;*aload_0
                   ││    │                                                ; - mat_mul.MyBenchmark::loop@53 (line 43)
  0.02%    0.02%   ││   ↗│  0x00007feb654847dc: mov    0x10(%r11,%rdx,4),%edi  ;*aaload
                   ││   ││                                                ; - mat_mul.MyBenchmark::loop@80 (line 43)
  0.43%    0.41%   ││   ││  0x00007feb654847e1: mov    0xc(%r12,%rdi,8),%r10d  ; implicit exception: dispatches to 0x00007feb654848c1
  0.88%    0.68%   ││   ││  0x00007feb654847e6: mov    0x10(%r8,%rdx,4),%ebp  ;*iaload
                   ││   ││                                                ; - mat_mul.MyBenchmark::loop@71 (line 43)
                   ││   ││  0x00007feb654847eb: lea    (%r12,%rdi,8),%rax  ;*aaload
                   ││   ││                                                ; - mat_mul.MyBenchmark::loop@80 (line 43)
           0.02%   ││   ││  0x00007feb654847ef: cmp    %r10d,%ebx
                   ││  ╭││  0x00007feb654847f2: jae    0x00007feb6548481e  ;*iaload
                   ││  │││                                                ; - mat_mul.MyBenchmark::loop@85 (line 43)
  0.27%    0.18%   ││  │││  0x00007feb654847f4: imul   0x10(%rax,%rbx,4),%ebp
  0.54%    0.78%   ││  │││  0x00007feb654847f9: add    %ebp,%r9d          ;*iadd
                   ││  │││                                                ; - mat_mul.MyBenchmark::loop@87 (line 43)
  0.31%    0.23%   ││  │││  0x00007feb654847fc: mov    %r9d,0x1c(%rsi)    ;*putfield s
                   ││  │││                                                ; - mat_mul.MyBenchmark::loop@88 (line 43)
  0.23%    0.27%   ││  │││  0x00007feb65484800: inc    %edx               ;*iadd
                   ││  │││                                                ; - mat_mul.MyBenchmark::loop@97 (line 42)
                   ││  │││  0x00007feb65484802: mov    %edx,0x18(%rsi)    ;*putfield k
                   ││  │││                                                ; - mat_mul.MyBenchmark::loop@98 (line 42)
                   ││  │││  0x00007feb65484805: cmp    %r13d,%edx
                   ││  │╰│  0x00007feb65484808: jl     0x00007feb654847dc  ;*if_icmpge
                   ││  │ │                                                ; - mat_mul.MyBenchmark::loop@50 (line 42)
  0.02%            ││  │ ╰  0x00007feb6548480a: jmpq   0x00007feb654846eb
                   ↘│  │    0x00007feb6548480f: mov    %edi,%r10d
                    │  │    0x00007feb65484812: mov    %r9d,%edi
                    │  │    0x00007feb65484815: mov    %r10d,%r9d
                    ↘  │    0x00007feb65484818: mov    %r9d,%ebp
                       │    0x00007feb6548481b: mov    %edi,%r9d
                       ↘    0x00007feb6548481e: mov    %rsi,0x8(%rsp)
                            0x00007feb65484823: mov    %r9d,0x10(%rsp)
                            0x00007feb65484828: mov    %rax,0x18(%rsp)
                            0x00007feb6548482d: mov    %ebx,0x14(%rsp)
....................................................................................................
 97.06%   97.12%  <total for region 1>

....[Hottest Regions]...............................................................................
 97.06%   97.12%         C2, level 4  mat_mul.MyBenchmark::loop, version 572 (287 bytes) 
  0.47%    0.45%              kernel  [unknown] (0 bytes) 
  0.29%    0.02%        libc-2.12.so  vfprintf (6 bytes) 
  0.08%    0.04%              kernel  [unknown] (52 bytes) 
  0.06%    0.02%              kernel  [unknown] (18 bytes) 
  0.04%                       kernel  [unknown] (20 bytes) 
  0.04%    0.04%              kernel  [unknown] (11 bytes) 
  0.04%                       kernel  [unknown] (0 bytes) 
  0.04%                       kernel  [unknown] (0 bytes) 
  0.04%    0.02%        libc-2.12.so  _IO_fwrite (20 bytes) 
  0.04%                  C2, level 4  mat_mul.MyBenchmark::loop, version 572 (28 bytes) 
  0.04%            libhsdis-amd64.so  print_insn (3 bytes) 
  0.04%                    libjvm.so  fileStream::write (9 bytes) 
  0.04%    0.04%           libjvm.so  xmlTextStream::write (35 bytes) 
  0.02%                       kernel  [unknown] (0 bytes) 
  0.02%                       kernel  [unknown] (0 bytes) 
  0.02%                       kernel  [unknown] (0 bytes) 
  0.02%                       kernel  [unknown] (0 bytes) 
  0.02%                       kernel  [unknown] (0 bytes) 
  0.02%                       kernel  [unknown] (0 bytes) 
  1.58%    2.24%  <...other 171 warm regions...>
....................................................................................................
100.00%   99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 97.12%   97.14%         C2, level 4  mat_mul.MyBenchmark::loop, version 572 
  1.56%    1.73%              kernel  [unknown] 
  0.47%    0.10%        libc-2.12.so  vfprintf 
  0.06%    0.04%   libhsdis-amd64.so  print_insn 
  0.06%    0.04%           libjvm.so  xmlTextStream::write 
  0.04%    0.02%        libc-2.12.so  _IO_fwrite 
  0.04%                  interpreter  getstatic  178 getstatic  
  0.04%                    libjvm.so  fileStream::write 
  0.02%                    libjvm.so  metadata_Relocation::metadata_value 
  0.02%                    libjvm.so  ciObjectFactory::get_metadata 
  0.02%    0.04%           libjvm.so  jio_print 
  0.02%            libhsdis-amd64.so  oappend 
  0.02%                    libjvm.so  Symbol::equals 
  0.02%                  interpreter  method entry point (kind = zerolocals)  
  0.02%                    libjvm.so  decode_env::handle_event 
  0.02%                    libjvm.so  nmethod::print_code_comment_on 
  0.02%                    libjvm.so  VMRegImpl::print_on 
  0.02%                    libjvm.so  AdapterHandlerLibrary::get_adapter 
  0.02%    0.02%           libjvm.so  Monitor::ILock 
  0.02%                    libjvm.so  Compilation::emit_code_body 
  0.39%    0.10%  <...other 20 warm methods...>
....................................................................................................
100.00%   99.22%  <totals>

....[Distribution by Source]........................................................................
 97.12%   97.16%         C2, level 4
  1.56%    1.73%              kernel
  0.62%    0.31%        libc-2.12.so
  0.49%    0.51%           libjvm.so
  0.10%    0.08%         interpreter
  0.08%    0.10%   libhsdis-amd64.so
  0.04%    0.06%  libpthread-2.12.so
....................................................................................................
100.00%   99.98%  <totals>



# JMH version: 1.19
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /opt/jdk1.8.0_131/jre/bin/java
# VM options: -XX:+UnlockDiagnosticVMOptions -XX:CompileCommand=print,MyBenchmark
# Warmup: 3 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: mat_mul.MyBenchmark.loop
# Parameters: (N_str = 256)

# Run progress: 20.00% complete, ETA 00:03:50
# Fork: 1 of 2
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 0.023 s/op
# Warmup Iteration   2: 0.022 s/op
# Warmup Iteration   3: 0.021 s/op
Iteration   1: 0.022 s/op
Iteration   2: 0.022 s/op
Iteration   3: 0.021 s/op
Iteration   4: 0.021 s/op
Iteration   5: 0.022 s/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 25.00% complete, ETA 00:03:36
# Fork: 2 of 2
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 0.023 s/op
# Warmup Iteration   2: 0.021 s/op
# Warmup Iteration   3: 0.021 s/op
Iteration   1: 0.021 s/op
Iteration   2: 0.023 s/op
Iteration   3: 0.022 s/op
Iteration   4: 0.023 s/op
Iteration   5: 0.023 s/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "mat_mul.MyBenchmark.loop":
  0.022 ±(99.9%) 0.001 s/op [Average]
  (min, avg, max) = (0.021, 0.022, 0.023), stdev = 0.001
  CI (99.9%): [0.021, 0.023] (assumes normal distribution)

Secondary result "mat_mul.MyBenchmark.loop:·asm":
PrintAssembly processed: 179355 total address lines.
Perf output processed (skipped 8.204 seconds):
 Column 1: cycles (5192 events)
 Column 2: instructions (5185 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
C2, level 4, mat_mul.MyBenchmark::loop, version 578 (286 bytes) 

                           0x00007facc9487d4b: mov    0x10(%r12,%rdx,8),%r14d
                           0x00007facc9487d50: cmp    %ecx,%r13d
                           0x00007facc9487d53: mov    $0x80000000,%ebx
                           0x00007facc9487d58: cmovl  %ebx,%ecx
                           0x00007facc9487d5b: lea    (%r12,%r8,8),%rdi
                           0x00007facc9487d5f: lea    (%r12,%r10,8),%r8
                           0x00007facc9487d63: lea    (%r12,%r14,8),%rax  ;*aaload
                                                                         ; - mat_mul.MyBenchmark::loop@80 (line 43)
                           0x00007facc9487d67: xor    %ebx,%ebx
                  ╭        0x00007facc9487d69: jmp    0x00007facc9487d92
  0.06%    0.10%  │   ↗ ↗  0x00007facc9487d6b: vmovq  %xmm4,%rdi
           0.06%  │   │ │  0x00007facc9487d70: mov    %r9d,0x10(%rdi,%rbx,4)  ;*iastore
                  │   │ │                                                ; - mat_mul.MyBenchmark::loop@121 (line 45)
  0.02%    0.02%  │   │ │  0x00007facc9487d75: inc    %ebx               ;*iadd
                  │   │ │                                                ; - mat_mul.MyBenchmark::loop@128 (line 40)
                  │   │ │  0x00007facc9487d77: mov    %ebx,0x14(%rsi)    ;*putfield j
                  │   │ │                                                ; - mat_mul.MyBenchmark::loop@129 (line 40)
  0.06%    0.04%  │   │ │  0x00007facc9487d7a: cmp    %r13d,%ebx
                  │   │ │  0x00007facc9487d7d: jge    0x00007facc9487c93  ;*if_icmpge
                  │   │ │                                                ; - mat_mul.MyBenchmark::loop@29 (line 40)
  0.02%    0.02%  │   │ │  0x00007facc9487d83: vmovd  %xmm3,%r9d
  0.02%    0.02%  │   │ │  0x00007facc9487d88: vmovd  %xmm2,%r10d
                  │   │ │  0x00007facc9487d8d: vmovq  %xmm5,%rax         ;*aload_0
                  │   │ │                                                ; - mat_mul.MyBenchmark::loop@32 (line 41)
  0.08%    0.08%  ↘   │ │  0x00007facc9487d92: movl   $0x0,0x1c(%rsi)    ;*putfield s
                      │ │                                                ; - mat_mul.MyBenchmark::loop@34 (line 41)
           0.02%      │ │  0x00007facc9487d99: movl   $0x0,0x18(%rsi)    ;*putfield k
                      │ │                                                ; - mat_mul.MyBenchmark::loop@39 (line 42)
                      │ │  0x00007facc9487da0: mov    0xc(%r12,%r14,8),%edx  ; implicit exception: dispatches to 0x00007facc9487f4d
  0.02%               │ │  0x00007facc9487da5: vmovq  %rdi,%xmm4
  0.04%    0.02%      │ │  0x00007facc9487daa: vmovd  %r10d,%xmm2
  0.02%    0.04%      │ │  0x00007facc9487daf: vmovd  %r9d,%xmm3
  0.04%    0.02%      │ │  0x00007facc9487db4: mov    0x10(%r12,%r10,8),%r9d  ;*iaload
                      │ │                                                ; - mat_mul.MyBenchmark::loop@71 (line 43)
  0.02%    0.02%      │ │  0x00007facc9487db9: cmp    %edx,%ebx
                      │ │  0x00007facc9487dbb: jae    0x00007facc9487f08  ;*iaload
                      │ │                                                ; - mat_mul.MyBenchmark::loop@85 (line 43)
  0.06%    0.10%      │ │  0x00007facc9487dc1: imul   0x10(%rax,%rbx,4),%r9d  ;*imul
                      │ │                                                ; - mat_mul.MyBenchmark::loop@86 (line 43)
  0.04%    0.04%      │ │  0x00007facc9487dc7: mov    %r9d,0x1c(%rsi)    ;*putfield s
                      │ │                                                ; - mat_mul.MyBenchmark::loop@88 (line 43)
  0.02%    0.02%      │ │  0x00007facc9487dcb: movl   $0x1,0x18(%rsi)    ;*putfield k
                      │ │                                                ; - mat_mul.MyBenchmark::loop@98 (line 42)
  0.02%               │ │  0x00007facc9487dd2: cmp    $0x1,%ecx
                      │ │  0x00007facc9487dd5: jle    0x00007facc9487f0c
           0.10%      │ │  0x00007facc9487ddb: vmovq  %rax,%xmm5
  0.02%    0.08%      │ │  0x00007facc9487de0: mov    $0x1,%edx
  0.04%    0.04%      │ │  0x00007facc9487de5: nopw   0x0(%rax,%rax,1)   ;*aload_0
                      │ │                                                ; - mat_mul.MyBenchmark::loop@53 (line 43)
  1.54%    1.62%     ↗│ │  0x00007facc9487df0: mov    0x10(%r11,%rdx,4),%r10d  ;*aaload
                     ││ │                                                ; - mat_mul.MyBenchmark::loop@80 (line 43)
  5.18%    6.44%     ││ │  0x00007facc9487df5: mov    0xc(%r12,%r10,8),%ebp  ; implicit exception: dispatches to 0x00007facc9487f4d
  6.26%    5.23%     ││ │  0x00007facc9487dfa: mov    0x10(%r8,%rdx,4),%edi  ;*iaload
                     ││ │                                                ; - mat_mul.MyBenchmark::loop@71 (line 43)
  2.29%    1.29%     ││ │  0x00007facc9487dff: lea    (%r12,%r10,8),%rax  ;*aaload
                     ││ │                                                ; - mat_mul.MyBenchmark::loop@80 (line 43)
  1.14%    1.64%     ││ │  0x00007facc9487e03: cmp    %ebp,%ebx
                   ╭ ││ │  0x00007facc9487e05: jae    0x00007facc9487e93  ;*iaload
                   │ ││ │                                                ; - mat_mul.MyBenchmark::loop@85 (line 43)
  5.35%    6.48%   │ ││ │  0x00007facc9487e0b: imul   0x10(%rax,%rbx,4),%edi
 10.34%    9.26%   │ ││ │  0x00007facc9487e10: add    %r9d,%edi          ;*iadd
                   │ ││ │                                                ; - mat_mul.MyBenchmark::loop@87 (line 43)
  3.45%    2.82%   │ ││ │  0x00007facc9487e13: mov    %edi,0x1c(%rsi)    ;*putfield s
                   │ ││ │                                                ; - mat_mul.MyBenchmark::loop@88 (line 43)
  3.52%    4.76%   │ ││ │  0x00007facc9487e16: mov    %edx,%r10d
  4.76%    4.84%   │ ││ │  0x00007facc9487e19: inc    %r10d
  2.79%    2.53%   │ ││ │  0x00007facc9487e1c: mov    %r10d,0x18(%rsi)   ;*putfield k
                   │ ││ │                                                ; - mat_mul.MyBenchmark::loop@98 (line 42)
  1.75%    1.14%   │ ││ │  0x00007facc9487e20: movslq %edx,%r9
  3.62%    4.01%   │ ││ │  0x00007facc9487e23: mov    0x14(%r11,%r9,4),%ebp  ;*aaload
                   │ ││ │                                                ; - mat_mul.MyBenchmark::loop@80 (line 43)
  4.35%    4.49%   │ ││ │  0x00007facc9487e28: mov    0xc(%r12,%rbp,8),%r10d  ; implicit exception: dispatches to 0x00007facc9487f4d
  4.01%    3.32%   │ ││ │  0x00007facc9487e2d: mov    0x14(%r8,%r9,4),%r9d  ;*iaload
                   │ ││ │                                                ; - mat_mul.MyBenchmark::loop@71 (line 43)
  1.96%    1.35%   │ ││ │  0x00007facc9487e32: lea    (%r12,%rbp,8),%rax  ;*aaload
                   │ ││ │                                                ; - mat_mul.MyBenchmark::loop@80 (line 43)
  3.49%    3.90%   │ ││ │  0x00007facc9487e36: cmp    %r10d,%ebx
                   │╭││ │  0x00007facc9487e39: jae    0x00007facc9487e9c  ;*iaload
                   ││││ │                                                ; - mat_mul.MyBenchmark::loop@85 (line 43)
  5.03%    5.84%   ││││ │  0x00007facc9487e3b: imul   0x10(%rax,%rbx,4),%r9d
  9.57%    8.99%   ││││ │  0x00007facc9487e41: add    %edi,%r9d          ;*iadd
                   ││││ │                                                ; - mat_mul.MyBenchmark::loop@87 (line 43)
  3.64%    3.86%   ││││ │  0x00007facc9487e44: mov    %r9d,0x1c(%rsi)    ;*putfield s
                   ││││ │                                                ; - mat_mul.MyBenchmark::loop@88 (line 43)
  5.57%    5.81%   ││││ │  0x00007facc9487e48: add    $0x2,%edx          ;*iadd
                   ││││ │                                                ; - mat_mul.MyBenchmark::loop@97 (line 42)
  3.83%    4.32%   ││││ │  0x00007facc9487e4b: mov    %edx,0x18(%rsi)    ;*putfield k
                   ││││ │                                                ; - mat_mul.MyBenchmark::loop@98 (line 42)
  2.04%    1.45%   ││││ │  0x00007facc9487e4e: cmp    %ecx,%edx
                   ││╰│ │  0x00007facc9487e50: jl     0x00007facc9487df0  ;*if_icmpge
                   ││ │ │                                                ; - mat_mul.MyBenchmark::loop@50 (line 42)
  0.06%            ││ │ │  0x00007facc9487e52: cmp    %r13d,%edx
                   ││ ╰ │  0x00007facc9487e55: jge    0x00007facc9487d6b
                   ││   │  0x00007facc9487e5b: nop                       ;*aload_0
                   ││   │                                                ; - mat_mul.MyBenchmark::loop@53 (line 43)
  0.02%    0.02%   ││  ↗│  0x00007facc9487e5c: mov    0x10(%r11,%rdx,4),%edi  ;*aaload
                   ││  ││                                                ; - mat_mul.MyBenchmark::loop@80 (line 43)
                   ││  ││  0x00007facc9487e61: mov    0xc(%r12,%rdi,8),%r10d  ; implicit exception: dispatches to 0x00007facc9487f4d
  0.29%    0.31%   ││  ││  0x00007facc9487e66: mov    0x10(%r8,%rdx,4),%ebp  ;*iaload
                   ││  ││                                                ; - mat_mul.MyBenchmark::loop@71 (line 43)
  0.02%            ││  ││  0x00007facc9487e6b: lea    (%r12,%rdi,8),%rax  ;*aaload
                   ││  ││                                                ; - mat_mul.MyBenchmark::loop@80 (line 43)
                   ││  ││  0x00007facc9487e6f: cmp    %r10d,%ebx
                   ││  ││  0x00007facc9487e72: jae    0x00007facc9487f1b  ;*iaload
                   ││  ││                                                ; - mat_mul.MyBenchmark::loop@85 (line 43)
  0.08%    0.15%   ││  ││  0x00007facc9487e78: imul   0x10(%rax,%rbx,4),%ebp
  0.15%    0.44%   ││  ││  0x00007facc9487e7d: add    %ebp,%r9d          ;*iadd
                   ││  ││                                                ; - mat_mul.MyBenchmark::loop@87 (line 43)
           0.06%   ││  ││  0x00007facc9487e80: mov    %r9d,0x1c(%rsi)    ;*putfield s
                   ││  ││                                                ; - mat_mul.MyBenchmark::loop@88 (line 43)
  0.04%    0.08%   ││  ││  0x00007facc9487e84: inc    %edx               ;*iadd
                   ││  ││                                                ; - mat_mul.MyBenchmark::loop@97 (line 42)
  0.02%            ││  ││  0x00007facc9487e86: mov    %edx,0x18(%rsi)    ;*putfield k
                   ││  ││                                                ; - mat_mul.MyBenchmark::loop@98 (line 42)
  0.04%    0.02%   ││  ││  0x00007facc9487e89: cmp    %r13d,%edx
                   ││  ╰│  0x00007facc9487e8c: jl     0x00007facc9487e5c  ;*if_icmpge
                   ││   │                                                ; - mat_mul.MyBenchmark::loop@50 (line 42)
                   ││   ╰  0x00007facc9487e8e: jmpq   0x00007facc9487d6b
                   ↘│      0x00007facc9487e93: mov    %edi,%r10d
                    │      0x00007facc9487e96: mov    %r9d,%edi
                    │      0x00007facc9487e99: mov    %r10d,%r9d
                    ↘      0x00007facc9487e9c: mov    %rsi,(%rsp)
                           0x00007facc9487ea0: mov    %edi,0x8(%rsp)
                           0x00007facc9487ea4: mov    %r9d,0xc(%rsp)
....................................................................................................
 96.78%   97.26%  <total for region 1>

....[Hottest Regions]...............................................................................
 96.78%   97.26%         C2, level 4  mat_mul.MyBenchmark::loop, version 578 (286 bytes) 
  0.37%    0.33%              kernel  [unknown] (0 bytes) 
  0.21%                       kernel  [unknown] (0 bytes) 
  0.12%    0.04%              kernel  [unknown] (32 bytes) 
  0.08%    0.02%              kernel  [unknown] (30 bytes) 
  0.08%                       kernel  [unknown] (24 bytes) 
  0.08%                       kernel  [unknown] (0 bytes) 
  0.06%                       kernel  [unknown] (0 bytes) 
  0.06%                       kernel  [unknown] (0 bytes) 
  0.06%    0.04%              kernel  [unknown] (11 bytes) 
  0.06%    0.06%              kernel  [unknown] (6 bytes) 
  0.04%                       kernel  [unknown] (0 bytes) 
  0.04%                       kernel  [unknown] (0 bytes) 
  0.04%    0.02%              kernel  [unknown] (32 bytes) 
  0.04%    0.02%              kernel  [unknown] (21 bytes) 
  0.04%                       kernel  [unknown] (0 bytes) 
  0.04%                       kernel  [unknown] (9 bytes) 
  0.04%    0.06%              kernel  [unknown] (10 bytes) 
  0.04%                 libc-2.12.so  __strchrnul (4 bytes) 
  0.04%            libhsdis-amd64.so  oappend (0 bytes) 
  1.71%    2.16%  <...other 167 warm regions...>
....................................................................................................
100.00%  100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 96.80%   97.26%         C2, level 4  mat_mul.MyBenchmark::loop, version 578 
  2.23%    1.41%              kernel  [unknown] 
  0.06%    0.04%   libhsdis-amd64.so  print_insn 
  0.06%            libhsdis-amd64.so  oappend 
  0.06%    0.06%           libjvm.so  xmlTextStream::write 
  0.06%    0.12%        libc-2.12.so  vfprintf 
  0.04%    0.08%        libc-2.12.so  _IO_file_xsputn@@GLIBC_2.2.5 
  0.04%                  interpreter  method entry point (kind = zerolocals)  
  0.04%    0.02%        libc-2.12.so  hack_digit.15676 
  0.04%    0.02%        libc-2.12.so  __strchrnul 
  0.02%                  C1, level 3  java.lang.Thread::interrupted, version 601 
  0.02%    0.04%        libc-2.12.so  _IO_fwrite 
  0.02%                    libjvm.so  CriticalEdgeFinder::block_do 
  0.02%                    libjvm.so  outputStream::vprint 
  0.02%    0.02%           libjvm.so  ciSymbol::print_symbol_on 
  0.02%    0.08%           libjvm.so  fileStream::write 
  0.02%                    libjvm.so  CompileQueue::get 
  0.02%           libpthread-2.12.so  pthread_cond_wait@@GLIBC_2.3.2 
  0.02%    0.04%  libpthread-2.12.so  [unknown] 
  0.02%                    libjvm.so  UTF8::quoted_ascii_length 
  0.39%    0.02%  <...other 20 warm methods...>
....................................................................................................
100.00%   99.19%  <totals>

....[Distribution by Source]........................................................................
 96.80%   97.30%         C2, level 4
  2.23%    1.41%              kernel
  0.46%    0.56%           libjvm.so
  0.23%    0.52%        libc-2.12.so
  0.12%    0.04%   libhsdis-amd64.so
  0.08%    0.12%  libpthread-2.12.so
  0.06%    0.04%         interpreter
  0.02%                  C1, level 3
....................................................................................................
100.00%  100.00%  <totals>

PrintAssembly processed: 179676 total address lines.
Perf output processed (skipped 8.070 seconds):
 Column 1: cycles (5294 events)
 Column 2: instructions (5298 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
C2, level 4, mat_mul.MyBenchmark::loop, version 578 (291 bytes) 

                           0x00007f662147f74b: mov    0x10(%r12,%rdx,8),%r14d
                           0x00007f662147f750: cmp    %ecx,%r13d
                           0x00007f662147f753: mov    $0x80000000,%ebx
                           0x00007f662147f758: cmovl  %ebx,%ecx
                           0x00007f662147f75b: lea    (%r12,%r8,8),%rdi
                           0x00007f662147f75f: lea    (%r12,%r10,8),%r8
                           0x00007f662147f763: lea    (%r12,%r14,8),%rax  ;*aaload
                                                                         ; - mat_mul.MyBenchmark::loop@80 (line 43)
                           0x00007f662147f767: xor    %ebx,%ebx
                  ╭        0x00007f662147f769: jmp    0x00007f662147f792
  0.06%           │   ↗ ↗  0x00007f662147f76b: vmovq  %xmm4,%rdi
  0.04%           │   │ │  0x00007f662147f770: mov    %r9d,0x10(%rdi,%rbx,4)  ;*iastore
                  │   │ │                                                ; - mat_mul.MyBenchmark::loop@121 (line 45)
  0.02%    0.02%  │   │ │  0x00007f662147f775: inc    %ebx               ;*iadd
                  │   │ │                                                ; - mat_mul.MyBenchmark::loop@128 (line 40)
                  │   │ │  0x00007f662147f777: mov    %ebx,0x14(%rsi)    ;*putfield j
                  │   │ │                                                ; - mat_mul.MyBenchmark::loop@129 (line 40)
  0.02%    0.04%  │   │ │  0x00007f662147f77a: cmp    %r13d,%ebx
                  │   │ │  0x00007f662147f77d: jge    0x00007f662147f693  ;*if_icmpge
                  │   │ │                                                ; - mat_mul.MyBenchmark::loop@29 (line 40)
           0.02%  │   │ │  0x00007f662147f783: vmovd  %xmm3,%r9d
                  │   │ │  0x00007f662147f788: vmovd  %xmm2,%r10d
                  │   │ │  0x00007f662147f78d: vmovq  %xmm5,%rax         ;*aload_0
                  │   │ │                                                ; - mat_mul.MyBenchmark::loop@32 (line 41)
  0.04%    0.11%  ↘   │ │  0x00007f662147f792: movl   $0x0,0x1c(%rsi)    ;*putfield s
                      │ │                                                ; - mat_mul.MyBenchmark::loop@34 (line 41)
  0.04%    0.04%      │ │  0x00007f662147f799: movl   $0x0,0x18(%rsi)    ;*putfield k
                      │ │                                                ; - mat_mul.MyBenchmark::loop@39 (line 42)
                      │ │  0x00007f662147f7a0: mov    0xc(%r12,%r14,8),%edx  ; implicit exception: dispatches to 0x00007f662147f94d
                      │ │  0x00007f662147f7a5: vmovq  %rdi,%xmm4
  0.02%    0.06%      │ │  0x00007f662147f7aa: vmovd  %r10d,%xmm2
  0.04%               │ │  0x00007f662147f7af: vmovd  %r9d,%xmm3
           0.02%      │ │  0x00007f662147f7b4: mov    0x10(%r12,%r10,8),%r9d  ;*iaload
                      │ │                                                ; - mat_mul.MyBenchmark::loop@71 (line 43)
                      │ │  0x00007f662147f7b9: cmp    %edx,%ebx
                      │ │  0x00007f662147f7bb: jae    0x00007f662147f907  ;*iaload
                      │ │                                                ; - mat_mul.MyBenchmark::loop@85 (line 43)
  0.04%    0.04%      │ │  0x00007f662147f7c1: imul   0x10(%rax,%rbx,4),%r9d  ;*imul
                      │ │                                                ; - mat_mul.MyBenchmark::loop@86 (line 43)
  0.06%    0.09%      │ │  0x00007f662147f7c7: mov    %r9d,0x1c(%rsi)    ;*putfield s
                      │ │                                                ; - mat_mul.MyBenchmark::loop@88 (line 43)
  0.04%    0.02%      │ │  0x00007f662147f7cb: movl   $0x1,0x18(%rsi)    ;*putfield k
                      │ │                                                ; - mat_mul.MyBenchmark::loop@98 (line 42)
  0.02%               │ │  0x00007f662147f7d2: cmp    $0x1,%ecx
                      │ │  0x00007f662147f7d5: jle    0x00007f662147f90b
  0.08%    0.04%      │ │  0x00007f662147f7db: vmovq  %rax,%xmm5
           0.06%      │ │  0x00007f662147f7e0: mov    $0x1,%edx
  0.02%               │ │  0x00007f662147f7e5: nopw   0x0(%rax,%rax,1)   ;*aload_0
                      │ │                                                ; - mat_mul.MyBenchmark::loop@53 (line 43)
  1.11%    1.49%     ↗│ │  0x00007f662147f7f0: mov    0x10(%r11,%rdx,4),%r10d  ;*aaload
                     ││ │                                                ; - mat_mul.MyBenchmark::loop@80 (line 43)
  5.78%    6.25%     ││ │  0x00007f662147f7f5: mov    0xc(%r12,%r10,8),%ebp  ; implicit exception: dispatches to 0x00007f662147f94d
  5.80%    5.95%     ││ │  0x00007f662147f7fa: mov    0x10(%r8,%rdx,4),%edi  ;*iaload
                     ││ │                                                ; - mat_mul.MyBenchmark::loop@71 (line 43)
  1.87%    1.26%     ││ │  0x00007f662147f7ff: lea    (%r12,%r10,8),%rax  ;*aaload
                     ││ │                                                ; - mat_mul.MyBenchmark::loop@80 (line 43)
  1.34%    1.40%     ││ │  0x00007f662147f803: cmp    %ebp,%ebx
                   ╭ ││ │  0x00007f662147f805: jae    0x00007f662147f893  ;*iaload
                   │ ││ │                                                ; - mat_mul.MyBenchmark::loop@85 (line 43)
  5.57%    6.30%   │ ││ │  0x00007f662147f80b: imul   0x10(%rax,%rbx,4),%edi
 10.56%    9.65%   │ ││ │  0x00007f662147f810: add    %r9d,%edi          ;*iadd
                   │ ││ │                                                ; - mat_mul.MyBenchmark::loop@87 (line 43)
  3.87%    2.87%   │ ││ │  0x00007f662147f813: mov    %edi,0x1c(%rsi)    ;*putfield s
                   │ ││ │                                                ; - mat_mul.MyBenchmark::loop@88 (line 43)
  3.49%    3.94%   │ ││ │  0x00007f662147f816: mov    %edx,%r10d
  4.51%    4.68%   │ ││ │  0x00007f662147f819: inc    %r10d
  2.51%    2.49%   │ ││ │  0x00007f662147f81c: mov    %r10d,0x18(%rsi)   ;*putfield k
                   │ ││ │                                                ; - mat_mul.MyBenchmark::loop@98 (line 42)
  1.53%    1.06%   │ ││ │  0x00007f662147f820: movslq %edx,%r9
  3.91%    3.66%   │ ││ │  0x00007f662147f823: mov    0x14(%r11,%r9,4),%ebp  ;*aaload
                   │ ││ │                                                ; - mat_mul.MyBenchmark::loop@80 (line 43)
  4.23%    4.38%   │ ││ │  0x00007f662147f828: mov    0xc(%r12,%rbp,8),%r10d  ; implicit exception: dispatches to 0x00007f662147f94d
  3.82%    4.04%   │ ││ │  0x00007f662147f82d: mov    0x14(%r8,%r9,4),%r9d  ;*iaload
                   │ ││ │                                                ; - mat_mul.MyBenchmark::loop@71 (line 43)
  1.78%    1.45%   │ ││ │  0x00007f662147f832: lea    (%r12,%rbp,8),%rax  ;*aaload
                   │ ││ │                                                ; - mat_mul.MyBenchmark::loop@80 (line 43)
  3.25%    3.66%   │ ││ │  0x00007f662147f836: cmp    %r10d,%ebx
                   │╭││ │  0x00007f662147f839: jae    0x00007f662147f89c  ;*iaload
                   ││││ │                                                ; - mat_mul.MyBenchmark::loop@85 (line 43)
  4.48%    5.91%   ││││ │  0x00007f662147f83b: imul   0x10(%rax,%rbx,4),%r9d
 10.07%    9.02%   ││││ │  0x00007f662147f841: add    %edi,%r9d          ;*iadd
                   ││││ │                                                ; - mat_mul.MyBenchmark::loop@87 (line 43)
  3.91%    3.66%   ││││ │  0x00007f662147f844: mov    %r9d,0x1c(%rsi)    ;*putfield s
                   ││││ │                                                ; - mat_mul.MyBenchmark::loop@88 (line 43)
  5.02%    6.10%   ││││ │  0x00007f662147f848: add    $0x2,%edx          ;*iadd
                   ││││ │                                                ; - mat_mul.MyBenchmark::loop@97 (line 42)
  3.55%    4.13%   ││││ │  0x00007f662147f84b: mov    %edx,0x18(%rsi)    ;*putfield k
                   ││││ │                                                ; - mat_mul.MyBenchmark::loop@98 (line 42)
  1.87%    1.34%   ││││ │  0x00007f662147f84e: cmp    %ecx,%edx
                   ││╰│ │  0x00007f662147f850: jl     0x00007f662147f7f0  ;*if_icmpge
                   ││ │ │                                                ; - mat_mul.MyBenchmark::loop@50 (line 42)
  0.11%            ││ │ │  0x00007f662147f852: cmp    %r13d,%edx
                   ││ ╰ │  0x00007f662147f855: jge    0x00007f662147f76b
  0.02%    0.02%   ││   │  0x00007f662147f85b: nop                       ;*aload_0
                   ││   │                                                ; - mat_mul.MyBenchmark::loop@53 (line 43)
                   ││  ↗│  0x00007f662147f85c: mov    0x10(%r11,%rdx,4),%edi  ;*aaload
                   ││  ││                                                ; - mat_mul.MyBenchmark::loop@80 (line 43)
  0.02%    0.02%   ││  ││  0x00007f662147f861: mov    0xc(%r12,%rdi,8),%r10d  ; implicit exception: dispatches to 0x00007f662147f94d
  0.26%    0.28%   ││  ││  0x00007f662147f866: mov    0x10(%r8,%rdx,4),%ebp  ;*iaload
                   ││  ││                                                ; - mat_mul.MyBenchmark::loop@71 (line 43)
  0.02%            ││  ││  0x00007f662147f86b: lea    (%r12,%rdi,8),%rax  ;*aaload
                   ││  ││                                                ; - mat_mul.MyBenchmark::loop@80 (line 43)
                   ││  ││  0x00007f662147f86f: cmp    %r10d,%ebx
                   ││  ││  0x00007f662147f872: jae    0x00007f662147f91a  ;*iaload
                   ││  ││                                                ; - mat_mul.MyBenchmark::loop@85 (line 43)
  0.02%    0.06%   ││  ││  0x00007f662147f878: imul   0x10(%rax,%rbx,4),%ebp
  0.17%    0.25%   ││  ││  0x00007f662147f87d: add    %ebp,%r9d          ;*iadd
                   ││  ││                                                ; - mat_mul.MyBenchmark::loop@87 (line 43)
  0.08%    0.02%   ││  ││  0x00007f662147f880: mov    %r9d,0x1c(%rsi)    ;*putfield s
                   ││  ││                                                ; - mat_mul.MyBenchmark::loop@88 (line 43)
  0.04%    0.02%   ││  ││  0x00007f662147f884: inc    %edx               ;*iadd
                   ││  ││                                                ; - mat_mul.MyBenchmark::loop@97 (line 42)
  0.06%            ││  ││  0x00007f662147f886: mov    %edx,0x18(%rsi)    ;*putfield k
                   ││  ││                                                ; - mat_mul.MyBenchmark::loop@98 (line 42)
  0.04%            ││  ││  0x00007f662147f889: cmp    %r13d,%edx
                   ││  ╰│  0x00007f662147f88c: jl     0x00007f662147f85c  ;*if_icmpge
                   ││   │                                                ; - mat_mul.MyBenchmark::loop@50 (line 42)
  0.02%    0.02%   ││   ╰  0x00007f662147f88e: jmpq   0x00007f662147f76b
                   ↘│      0x00007f662147f893: mov    %edi,%r10d
                    │      0x00007f662147f896: mov    %r9d,%edi
                    │      0x00007f662147f899: mov    %r10d,%r9d
                    ↘      0x00007f662147f89c: mov    %rsi,(%rsp)
                           0x00007f662147f8a0: mov    %edi,0x8(%rsp)
                           0x00007f662147f8a4: mov    %r9d,0xc(%rsp)
                           0x00007f662147f8a9: mov    %rax,0x10(%rsp)
                           0x00007f662147f8ae: mov    %ebx,0x18(%rsp)
                           0x00007f662147f8b2: vmovsd %xmm1,0x20(%rsp)
....................................................................................................
 95.20%   95.92%  <total for region 1>

....[Hottest Regions]...............................................................................
 95.20%   95.92%         C2, level 4  mat_mul.MyBenchmark::loop, version 578 (291 bytes) 
  1.02%    0.96%              kernel  [unknown] (0 bytes) 
  0.47%                       kernel  [unknown] (0 bytes) 
  0.13%    0.04%              kernel  [unknown] (0 bytes) 
  0.11%                       kernel  [unknown] (16 bytes) 
  0.08%    0.04%              kernel  [unknown] (4 bytes) 
  0.08%    0.06%              kernel  [unknown] (14 bytes) 
  0.08%                 libc-2.12.so  vfprintf (0 bytes) 
  0.08%    0.11%           libjvm.so  outputStream::update_position (40 bytes) 
  0.08%                    libjvm.so  fileStream::write (15 bytes) 
  0.06%    0.06%              kernel  [unknown] (29 bytes) 
  0.06%    0.04%              kernel  [unknown] (0 bytes) 
  0.04%    0.02%              kernel  [unknown] (51 bytes) 
  0.04%                       kernel  [unknown] (0 bytes) 
  0.04%                       kernel  [unknown] (16 bytes) 
  0.04%                       kernel  [unknown] (0 bytes) 
  0.04%                       kernel  [unknown] (0 bytes) 
  0.04%    0.02%              kernel  [unknown] (40 bytes) 
  0.04%                       kernel  [unknown] (6 bytes) 
  0.04%                       kernel  [unknown] (12 bytes) 
  2.25%    2.74%  <...other 200 warm regions...>
....................................................................................................
 99.98%  100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 95.20%   95.92%         C2, level 4  mat_mul.MyBenchmark::loop, version 578 
  3.55%    2.68%              kernel  [unknown] 
  0.15%    0.09%        libc-2.12.so  vfprintf 
  0.08%            libhsdis-amd64.so  print_insn 
  0.08%    0.06%           libjvm.so  fileStream::write 
  0.08%    0.11%           libjvm.so  outputStream::update_position 
  0.06%    0.08%        libc-2.12.so  _IO_fwrite 
  0.06%    0.06%           libjvm.so  xmlTextStream::write 
  0.04%    0.02%       librt-2.12.so  clock_gettime 
  0.04%                    libjvm.so  Monitor::unlock 
  0.04%                    libjvm.so  LinearScan::eliminate_spill_moves 
  0.02%                    libjvm.so  nmethod::cleanup_inline_caches 
  0.02%                  C1, level 3  sun.net.www.ParseUtil::encodePath, version 466 
  0.02%                    libjvm.so  Dependencies::assert_leaf_type 
  0.02%                    libjvm.so  os::javaTimeNanos 
  0.02%    0.02%   libhsdis-amd64.so  oappend 
  0.02%                    libjvm.so  MethodData::initialize_data 
  0.02%    0.06%  libpthread-2.12.so  [unknown] 
  0.02%                    libjvm.so  SafepointSynchronize::begin 
  0.02%                               <unknown> 
  0.45%    0.13%  <...other 24 warm methods...>
....................................................................................................
 99.98%   99.23%  <totals>

....[Distribution by Source]........................................................................
 95.20%   95.92%         C2, level 4
  3.55%    2.68%              kernel
  0.57%    0.76%           libjvm.so
  0.28%    0.53%        libc-2.12.so
  0.11%    0.02%   libhsdis-amd64.so
  0.09%                  interpreter
  0.08%    0.06%  libpthread-2.12.so
  0.04%    0.02%       librt-2.12.so
  0.02%                             
  0.02%    0.02%              [vdso]
  0.02%                  C1, level 3
....................................................................................................
 99.98%  100.00%  <totals>



# JMH version: 1.19
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /opt/jdk1.8.0_131/jre/bin/java
# VM options: -XX:+UnlockDiagnosticVMOptions -XX:CompileCommand=print,MyBenchmark
# Warmup: 3 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: mat_mul.MyBenchmark.loop
# Parameters: (N_str = 512)

# Run progress: 30.00% complete, ETA 00:03:22
# Fork: 1 of 2
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 0.261 s/op
# Warmup Iteration   2: 0.244 s/op
# Warmup Iteration   3: 0.244 s/op
Iteration   1: 0.244 s/op
Iteration   2: 0.244 s/op
Iteration   3: 0.244 s/op
Iteration   4: 0.244 s/op
Iteration   5: 0.245 s/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 35.00% complete, ETA 00:03:10
# Fork: 2 of 2
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 0.265 s/op
# Warmup Iteration   2: 0.245 s/op
# Warmup Iteration   3: 0.245 s/op
Iteration   1: 0.244 s/op
Iteration   2: 0.246 s/op
Iteration   3: 0.244 s/op
Iteration   4: 0.245 s/op
Iteration   5: 0.244 s/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "mat_mul.MyBenchmark.loop":
  0.244 ±(99.9%) 0.001 s/op [Average]
  (min, avg, max) = (0.244, 0.244, 0.246), stdev = 0.001
  CI (99.9%): [0.243, 0.245] (assumes normal distribution)

Secondary result "mat_mul.MyBenchmark.loop:·asm":
PrintAssembly processed: 178892 total address lines.
Perf output processed (skipped 8.397 seconds):
 Column 1: cycles (6199 events)
 Column 2: instructions (6192 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
C2, level 4, mat_mul.MyBenchmark::loop, version 577 (268 bytes) 

                          0x00007fdfb9480ac3: callq  0x00007fdfb9046020  ; OopMap{off=328}
                                                                        ;*invokevirtual consume
                                                                        ; - mat_mul.MyBenchmark::loop@153 (line 48)
                                                                        ;   {optimized virtual_call}
                          0x00007fdfb9480ac8: add    $0x40,%rsp
                          0x00007fdfb9480acc: pop    %rbp
                          0x00007fdfb9480acd: test   %eax,0x1656452d(%rip)        # 0x00007fdfcf9e5000
                                                                        ;   {poll_return}
                          0x00007fdfb9480ad3: retq   
                     ↗ ↗  0x00007fdfb9480ad4: vmovq  %xmm4,%rdi
  0.02%              │ │  0x00007fdfb9480ad9: mov    %r9d,0x10(%rdi,%rbx,4)  ;*iastore
                     │ │                                                ; - mat_mul.MyBenchmark::loop@121 (line 45)
                     │ │  0x00007fdfb9480ade: inc    %ebx               ;*iadd
                     │ │                                                ; - mat_mul.MyBenchmark::loop@128 (line 40)
                     │ │  0x00007fdfb9480ae0: mov    %ebx,0x14(%rsi)    ;*putfield j
                     │ │                                                ; - mat_mul.MyBenchmark::loop@129 (line 40)
           0.06%     │ │  0x00007fdfb9480ae3: cmp    %r13d,%ebx
                     │ │  0x00007fdfb9480ae6: jge    0x00007fdfb94809d3  ;*if_icmpge
                     │ │                                                ; - mat_mul.MyBenchmark::loop@29 (line 40)
  0.02%              │ │  0x00007fdfb9480aec: vmovd  %xmm3,%r9d
           0.02%     │ │  0x00007fdfb9480af1: vmovd  %xmm2,%r10d
           0.03%     │ │  0x00007fdfb9480af6: vmovq  %xmm5,%rax         ;*aload_0
                     │ │                                                ; - mat_mul.MyBenchmark::loop@32 (line 41)
  0.03%    0.02%     │ │  0x00007fdfb9480afb: movl   $0x0,0x1c(%rsi)    ;*putfield s
                     │ │                                                ; - mat_mul.MyBenchmark::loop@34 (line 41)
  0.02%              │ │  0x00007fdfb9480b02: movl   $0x0,0x18(%rsi)    ;*putfield k
                     │ │                                                ; - mat_mul.MyBenchmark::loop@39 (line 42)
           0.02%     │ │  0x00007fdfb9480b09: mov    0xc(%r12,%r14,8),%edx  ; implicit exception: dispatches to 0x00007fdfb9480c7d
           0.02%     │ │  0x00007fdfb9480b0e: vmovq  %rdi,%xmm4
  0.02%    0.02%     │ │  0x00007fdfb9480b13: vmovd  %r10d,%xmm2
                     │ │  0x00007fdfb9480b18: vmovd  %r9d,%xmm3
                     │ │  0x00007fdfb9480b1d: mov    0x10(%r12,%r10,8),%r9d  ;*iaload
                     │ │                                                ; - mat_mul.MyBenchmark::loop@71 (line 43)
                     │ │  0x00007fdfb9480b22: cmp    %edx,%ebx
                     │ │  0x00007fdfb9480b24: jae    0x00007fdfb9480c38  ;*iaload
                     │ │                                                ; - mat_mul.MyBenchmark::loop@85 (line 43)
  0.03%              │ │  0x00007fdfb9480b2a: imul   0x10(%rax,%rbx,4),%r9d  ;*imul
                     │ │                                                ; - mat_mul.MyBenchmark::loop@86 (line 43)
  0.05%    0.05%     │ │  0x00007fdfb9480b30: mov    %r9d,0x1c(%rsi)    ;*putfield s
                     │ │                                                ; - mat_mul.MyBenchmark::loop@88 (line 43)
                     │ │  0x00007fdfb9480b34: movl   $0x1,0x18(%rsi)    ;*putfield k
                     │ │                                                ; - mat_mul.MyBenchmark::loop@98 (line 42)
  0.02%    0.02%     │ │  0x00007fdfb9480b3b: cmp    $0x1,%ecx
                     │ │  0x00007fdfb9480b3e: jle    0x00007fdfb9480c3c
  0.02%    0.03%     │ │  0x00007fdfb9480b44: vmovq  %rax,%xmm5
           0.02%     │ │  0x00007fdfb9480b49: mov    $0x1,%edx
                     │ │  0x00007fdfb9480b4e: xchg   %ax,%ax            ;*aload_0
                     │ │                                                ; - mat_mul.MyBenchmark::loop@53 (line 43)
  0.97%    1.50%    ↗│ │  0x00007fdfb9480b50: mov    0x10(%r11,%rdx,4),%r10d  ;*aaload
                    ││ │                                                ; - mat_mul.MyBenchmark::loop@80 (line 43)
  3.89%    4.17%    ││ │  0x00007fdfb9480b55: mov    0xc(%r12,%r10,8),%ebp  ; implicit exception: dispatches to 0x00007fdfb9480c7d
  7.84%    8.12%    ││ │  0x00007fdfb9480b5a: mov    0x10(%r8,%rdx,4),%edi  ;*iaload
                    ││ │                                                ; - mat_mul.MyBenchmark::loop@71 (line 43)
  1.50%    0.61%    ││ │  0x00007fdfb9480b5f: lea    (%r12,%r10,8),%rax  ;*aaload
                    ││ │                                                ; - mat_mul.MyBenchmark::loop@80 (line 43)
  0.69%    1.37%    ││ │  0x00007fdfb9480b63: cmp    %ebp,%ebx
                  ╭ ││ │  0x00007fdfb9480b65: jae    0x00007fdfb9480bef  ;*iaload
                  │ ││ │                                                ; - mat_mul.MyBenchmark::loop@85 (line 43)
  4.37%    4.43%  │ ││ │  0x00007fdfb9480b6b: imul   0x10(%rax,%rbx,4),%edi
 16.74%   16.44%  │ ││ │  0x00007fdfb9480b70: add    %r9d,%edi          ;*iadd
                  │ ││ │                                                ; - mat_mul.MyBenchmark::loop@87 (line 43)
  3.19%    2.65%  │ ││ │  0x00007fdfb9480b73: mov    %edi,0x1c(%rsi)    ;*putfield s
                  │ ││ │                                                ; - mat_mul.MyBenchmark::loop@88 (line 43)
  2.19%    3.25%  │ ││ │  0x00007fdfb9480b76: mov    %edx,%r10d
  3.08%    3.42%  │ ││ │  0x00007fdfb9480b79: inc    %r10d
  1.97%    1.29%  │ ││ │  0x00007fdfb9480b7c: mov    %r10d,0x18(%rsi)   ;*putfield k
                  │ ││ │                                                ; - mat_mul.MyBenchmark::loop@98 (line 42)
  1.18%    0.89%  │ ││ │  0x00007fdfb9480b80: movslq %edx,%r9
  2.40%    2.78%  │ ││ │  0x00007fdfb9480b83: mov    0x14(%r11,%r9,4),%ebp  ;*aaload
                  │ ││ │                                                ; - mat_mul.MyBenchmark::loop@80 (line 43)
  3.45%    3.52%  │ ││ │  0x00007fdfb9480b88: mov    0xc(%r12,%rbp,8),%r10d  ; implicit exception: dispatches to 0x00007fdfb9480c7d
  7.10%    6.54%  │ ││ │  0x00007fdfb9480b8d: mov    0x14(%r8,%r9,4),%r9d  ;*iaload
                  │ ││ │                                                ; - mat_mul.MyBenchmark::loop@71 (line 43)
  1.18%    1.18%  │ ││ │  0x00007fdfb9480b92: lea    (%r12,%rbp,8),%rax  ;*aaload
                  │ ││ │                                                ; - mat_mul.MyBenchmark::loop@80 (line 43)
  2.21%    2.91%  │ ││ │  0x00007fdfb9480b96: cmp    %r10d,%ebx
                  │╭││ │  0x00007fdfb9480b99: jae    0x00007fdfb9480bf8  ;*iaload
                  ││││ │                                                ; - mat_mul.MyBenchmark::loop@85 (line 43)
  3.74%    4.44%  ││││ │  0x00007fdfb9480b9b: imul   0x10(%rax,%rbx,4),%r9d
 17.86%   17.39%  ││││ │  0x00007fdfb9480ba1: add    %edi,%r9d          ;*iadd
                  ││││ │                                                ; - mat_mul.MyBenchmark::loop@87 (line 43)
  2.95%    2.81%  ││││ │  0x00007fdfb9480ba4: mov    %r9d,0x1c(%rsi)    ;*putfield s
                  ││││ │                                                ; - mat_mul.MyBenchmark::loop@88 (line 43)
  3.47%    4.86%  ││││ │  0x00007fdfb9480ba8: add    $0x2,%edx          ;*iadd
                  ││││ │                                                ; - mat_mul.MyBenchmark::loop@97 (line 42)
  2.84%    2.65%  ││││ │  0x00007fdfb9480bab: mov    %edx,0x18(%rsi)    ;*putfield k
                  ││││ │                                                ; - mat_mul.MyBenchmark::loop@98 (line 42)
  1.63%    0.58%  ││││ │  0x00007fdfb9480bae: cmp    %ecx,%edx
                  ││╰│ │  0x00007fdfb9480bb0: jl     0x00007fdfb9480b50  ;*if_icmpge
                  ││ │ │                                                ; - mat_mul.MyBenchmark::loop@50 (line 42)
           0.03%  ││ │ │  0x00007fdfb9480bb2: cmp    %r13d,%edx
                  ││ ╰ │  0x00007fdfb9480bb5: jge    0x00007fdfb9480ad4
  0.02%           ││   │  0x00007fdfb9480bbb: nop                       ;*aload_0
                  ││   │                                                ; - mat_mul.MyBenchmark::loop@53 (line 43)
  0.03%           ││  ↗│  0x00007fdfb9480bbc: mov    0x10(%r11,%rdx,4),%edi  ;*aaload
                  ││  ││                                                ; - mat_mul.MyBenchmark::loop@80 (line 43)
           0.02%  ││  ││  0x00007fdfb9480bc1: mov    0xc(%r12,%rdi,8),%r10d  ; implicit exception: dispatches to 0x00007fdfb9480c7d
  0.08%    0.02%  ││  ││  0x00007fdfb9480bc6: mov    0x10(%r8,%rdx,4),%ebp  ;*iaload
                  ││  ││                                                ; - mat_mul.MyBenchmark::loop@71 (line 43)
           0.02%  ││  ││  0x00007fdfb9480bcb: lea    (%r12,%rdi,8),%rax  ;*aaload
                  ││  ││                                                ; - mat_mul.MyBenchmark::loop@80 (line 43)
                  ││  ││  0x00007fdfb9480bcf: cmp    %r10d,%ebx
                  ││  ││  0x00007fdfb9480bd2: jae    0x00007fdfb9480c4b  ;*iaload
                  ││  ││                                                ; - mat_mul.MyBenchmark::loop@85 (line 43)
  0.03%    0.02%  ││  ││  0x00007fdfb9480bd4: imul   0x10(%rax,%rbx,4),%ebp
  0.10%    0.02%  ││  ││  0x00007fdfb9480bd9: add    %ebp,%r9d          ;*iadd
                  ││  ││                                                ; - mat_mul.MyBenchmark::loop@87 (line 43)
  0.03%           ││  ││  0x00007fdfb9480bdc: mov    %r9d,0x1c(%rsi)    ;*putfield s
                  ││  ││                                                ; - mat_mul.MyBenchmark::loop@88 (line 43)
  0.05%    0.03%  ││  ││  0x00007fdfb9480be0: inc    %edx               ;*iadd
                  ││  ││                                                ; - mat_mul.MyBenchmark::loop@97 (line 42)
  0.02%           ││  ││  0x00007fdfb9480be2: mov    %edx,0x18(%rsi)    ;*putfield k
                  ││  ││                                                ; - mat_mul.MyBenchmark::loop@98 (line 42)
           0.03%  ││  ││  0x00007fdfb9480be5: cmp    %r13d,%edx
                  ││  ╰│  0x00007fdfb9480be8: jl     0x00007fdfb9480bbc  ;*if_icmpge
                  ││   │                                                ; - mat_mul.MyBenchmark::loop@50 (line 42)
                  ││   ╰  0x00007fdfb9480bea: jmpq   0x00007fdfb9480ad4
                  ↘│      0x00007fdfb9480bef: mov    %edi,%r10d
                   │      0x00007fdfb9480bf2: mov    %r9d,%edi
                   │      0x00007fdfb9480bf5: mov    %r10d,%r9d
                   ↘      0x00007fdfb9480bf8: vmovsd %xmm1,(%rsp)
                          0x00007fdfb9480bfd: mov    %rsi,0x8(%rsp)
                          0x00007fdfb9480c02: mov    %edi,0x10(%rsp)
....................................................................................................
 97.02%   98.27%  <total for region 1>

....[Hottest Regions]...............................................................................
 97.02%   98.27%         C2, level 4  mat_mul.MyBenchmark::loop, version 577 (268 bytes) 
  0.65%                       kernel  [unknown] (0 bytes) 
  0.18%    0.16%              kernel  [unknown] (0 bytes) 
  0.16%    0.02%              kernel  [unknown] (0 bytes) 
  0.11%    0.02%              kernel  [unknown] (0 bytes) 
  0.10%    0.08%              kernel  [unknown] (0 bytes) 
  0.08%                       kernel  [unknown] (0 bytes) 
  0.06%                       kernel  [unknown] (20 bytes) 
  0.06%    0.02%              kernel  [unknown] (0 bytes) 
  0.05%    0.05%              kernel  [unknown] (51 bytes) 
  0.05%    0.02%              kernel  [unknown] (0 bytes) 
  0.03%                       kernel  [unknown] (0 bytes) 
  0.03%                       kernel  [unknown] (0 bytes) 
  0.03%                       kernel  [unknown] (22 bytes) 
  0.03%            libhsdis-amd64.so  print_insn (0 bytes) 
  0.03%                    libjvm.so  defaultStream::write (14 bytes) 
  0.02%                       kernel  [unknown] (0 bytes) 
  0.02%                       kernel  [unknown] (0 bytes) 
  0.02%                       kernel  [unknown] (0 bytes) 
  0.02%                       kernel  [unknown] (0 bytes) 
  1.26%    1.37%  <...other 140 warm regions...>
....................................................................................................
100.00%  100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 97.03%   98.27%         C2, level 4  mat_mul.MyBenchmark::loop, version 577 
  2.37%    1.07%              kernel  [unknown] 
  0.05%            libhsdis-amd64.so  print_insn 
  0.05%                 libc-2.12.so  vfprintf 
  0.03%    0.02%           libjvm.so  fileStream::write 
  0.03%    0.03%        libc-2.12.so  _IO_file_xsputn@@GLIBC_2.2.5 
  0.03%                    libjvm.so  defaultStream::write 
  0.03%    0.03%        libc-2.12.so  _IO_default_xsputn 
  0.02%                  interpreter  invoke return entry points  
  0.02%                 libc-2.12.so  msort_with_tmp 
  0.02%                    libjvm.so  ClassFileParser::parse_exception_table 
  0.02%                    libjvm.so  Monitor::IWait 
  0.02%    0.02%           libjvm.so  DebugInformationRecorder::find_sharable_decode_offset 
  0.02%           libpthread-2.12.so  pthread_cond_wait@@GLIBC_2.3.2 
  0.02%    0.02%  libpthread-2.12.so  [unknown] 
  0.02%                    libjvm.so  SignatureStream::SignatureStream 
  0.02%                    libjvm.so  Monitor::wait 
  0.02%                               <unknown> 
  0.02%                    libjvm.so  Assembler::movl 
  0.02%                 libc-2.12.so  __strncpy_ssse3 
  0.18%    0.03%  <...other 11 warm methods...>
....................................................................................................
100.00%   99.48%  <totals>

....[Distribution by Source]........................................................................
 97.03%   98.27%         C2, level 4
  2.37%    1.07%              kernel
  0.21%    0.32%           libjvm.so
  0.19%    0.21%        libc-2.12.so
  0.06%    0.10%  libpthread-2.12.so
  0.05%    0.03%         interpreter
  0.05%            libhsdis-amd64.so
  0.02%                             
  0.02%                    libzip.so
....................................................................................................
100.00%  100.00%  <totals>

PrintAssembly processed: 177688 total address lines.
Perf output processed (skipped 8.751 seconds):
 Column 1: cycles (6266 events)
 Column 2: instructions (6273 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
C2, level 4, mat_mul.MyBenchmark::loop, version 574 (278 bytes) 

                          0x00007fccc1484bff: shl    $0x3,%rdx
                          0x00007fccc1484c03: callq  0x00007fccc1046020  ; OopMap{off=328}
                                                                        ;*invokevirtual consume
                                                                        ; - mat_mul.MyBenchmark::loop@153 (line 48)
                                                                        ;   {optimized virtual_call}
                          0x00007fccc1484c08: add    $0x40,%rsp
                          0x00007fccc1484c0c: pop    %rbp
                          0x00007fccc1484c0d: test   %eax,0x16fc13ed(%rip)        # 0x00007fccd8446000
                                                                        ;   {poll_return}
                          0x00007fccc1484c13: retq   
           0.02%     ↗ ↗  0x00007fccc1484c14: vmovq  %xmm4,%rdi
                     │ │  0x00007fccc1484c19: mov    %r9d,0x10(%rdi,%rbx,4)  ;*iastore
                     │ │                                                ; - mat_mul.MyBenchmark::loop@121 (line 45)
                     │ │  0x00007fccc1484c1e: inc    %ebx               ;*iadd
                     │ │                                                ; - mat_mul.MyBenchmark::loop@128 (line 40)
                     │ │  0x00007fccc1484c20: mov    %ebx,0x14(%rsi)    ;*putfield j
                     │ │                                                ; - mat_mul.MyBenchmark::loop@129 (line 40)
  0.02%              │ │  0x00007fccc1484c23: cmp    %r13d,%ebx
                     │ │  0x00007fccc1484c26: jge    0x00007fccc1484b13  ;*if_icmpge
                     │ │                                                ; - mat_mul.MyBenchmark::loop@29 (line 40)
                     │ │  0x00007fccc1484c2c: vmovd  %xmm3,%r9d
                     │ │  0x00007fccc1484c31: vmovd  %xmm2,%r10d
                     │ │  0x00007fccc1484c36: vmovq  %xmm5,%rax         ;*aload_0
                     │ │                                                ; - mat_mul.MyBenchmark::loop@32 (line 41)
           0.03%     │ │  0x00007fccc1484c3b: movl   $0x0,0x1c(%rsi)    ;*putfield s
                     │ │                                                ; - mat_mul.MyBenchmark::loop@34 (line 41)
                     │ │  0x00007fccc1484c42: movl   $0x0,0x18(%rsi)    ;*putfield k
                     │ │                                                ; - mat_mul.MyBenchmark::loop@39 (line 42)
  0.02%              │ │  0x00007fccc1484c49: mov    0xc(%r12,%r14,8),%edx  ; implicit exception: dispatches to 0x00007fccc1484dbd
           0.02%     │ │  0x00007fccc1484c4e: vmovq  %rdi,%xmm4
           0.02%     │ │  0x00007fccc1484c53: vmovd  %r10d,%xmm2
           0.02%     │ │  0x00007fccc1484c58: vmovd  %r9d,%xmm3
                     │ │  0x00007fccc1484c5d: mov    0x10(%r12,%r10,8),%r9d  ;*iaload
                     │ │                                                ; - mat_mul.MyBenchmark::loop@71 (line 43)
  0.02%    0.02%     │ │  0x00007fccc1484c62: cmp    %edx,%ebx
                     │ │  0x00007fccc1484c64: jae    0x00007fccc1484d78  ;*iaload
                     │ │                                                ; - mat_mul.MyBenchmark::loop@85 (line 43)
  0.05%    0.02%     │ │  0x00007fccc1484c6a: imul   0x10(%rax,%rbx,4),%r9d  ;*imul
                     │ │                                                ; - mat_mul.MyBenchmark::loop@86 (line 43)
  0.06%    0.02%     │ │  0x00007fccc1484c70: mov    %r9d,0x1c(%rsi)    ;*putfield s
                     │ │                                                ; - mat_mul.MyBenchmark::loop@88 (line 43)
                     │ │  0x00007fccc1484c74: movl   $0x1,0x18(%rsi)    ;*putfield k
                     │ │                                                ; - mat_mul.MyBenchmark::loop@98 (line 42)
                     │ │  0x00007fccc1484c7b: cmp    $0x1,%ecx
                     │ │  0x00007fccc1484c7e: jle    0x00007fccc1484d7c
  0.03%    0.02%     │ │  0x00007fccc1484c84: vmovq  %rax,%xmm5
  0.02%    0.02%     │ │  0x00007fccc1484c89: mov    $0x1,%edx
  0.02%              │ │  0x00007fccc1484c8e: xchg   %ax,%ax            ;*aload_0
                     │ │                                                ; - mat_mul.MyBenchmark::loop@53 (line 43)
  1.07%    1.56%    ↗│ │  0x00007fccc1484c90: mov    0x10(%r11,%rdx,4),%r10d  ;*aaload
                    ││ │                                                ; - mat_mul.MyBenchmark::loop@80 (line 43)
  3.83%    3.95%    ││ │  0x00007fccc1484c95: mov    0xc(%r12,%r10,8),%ebp  ; implicit exception: dispatches to 0x00007fccc1484dbd
  7.55%    7.73%    ││ │  0x00007fccc1484c9a: mov    0x10(%r8,%rdx,4),%edi  ;*iaload
                    ││ │                                                ; - mat_mul.MyBenchmark::loop@71 (line 43)
  1.47%    0.81%    ││ │  0x00007fccc1484c9f: lea    (%r12,%r10,8),%rax  ;*aaload
                    ││ │                                                ; - mat_mul.MyBenchmark::loop@80 (line 43)
  0.65%    1.08%    ││ │  0x00007fccc1484ca3: cmp    %ebp,%ebx
                  ╭ ││ │  0x00007fccc1484ca5: jae    0x00007fccc1484d2f  ;*iaload
                  │ ││ │                                                ; - mat_mul.MyBenchmark::loop@85 (line 43)
  4.26%    4.38%  │ ││ │  0x00007fccc1484cab: imul   0x10(%rax,%rbx,4),%edi
 16.28%   17.60%  │ ││ │  0x00007fccc1484cb0: add    %r9d,%edi          ;*iadd
                  │ ││ │                                                ; - mat_mul.MyBenchmark::loop@87 (line 43)
  2.79%    2.36%  │ ││ │  0x00007fccc1484cb3: mov    %edi,0x1c(%rsi)    ;*putfield s
                  │ ││ │                                                ; - mat_mul.MyBenchmark::loop@88 (line 43)
  2.65%    3.12%  │ ││ │  0x00007fccc1484cb6: mov    %edx,%r10d
  3.32%    3.48%  │ ││ │  0x00007fccc1484cb9: inc    %r10d
  2.15%    1.43%  │ ││ │  0x00007fccc1484cbc: mov    %r10d,0x18(%rsi)   ;*putfield k
                  │ ││ │                                                ; - mat_mul.MyBenchmark::loop@98 (line 42)
  1.04%    0.89%  │ ││ │  0x00007fccc1484cc0: movslq %edx,%r9
  2.51%    2.68%  │ ││ │  0x00007fccc1484cc3: mov    0x14(%r11,%r9,4),%ebp  ;*aaload
                  │ ││ │                                                ; - mat_mul.MyBenchmark::loop@80 (line 43)
  3.27%    3.49%  │ ││ │  0x00007fccc1484cc8: mov    0xc(%r12,%rbp,8),%r10d  ; implicit exception: dispatches to 0x00007fccc1484dbd
  7.33%    7.81%  │ ││ │  0x00007fccc1484ccd: mov    0x14(%r8,%r9,4),%r9d  ;*iaload
                  │ ││ │                                                ; - mat_mul.MyBenchmark::loop@71 (line 43)
  1.28%    1.24%  │ ││ │  0x00007fccc1484cd2: lea    (%r12,%rbp,8),%rax  ;*aaload
                  │ ││ │                                                ; - mat_mul.MyBenchmark::loop@80 (line 43)
  2.15%    2.61%  │ ││ │  0x00007fccc1484cd6: cmp    %r10d,%ebx
                  │╭││ │  0x00007fccc1484cd9: jae    0x00007fccc1484d38  ;*iaload
                  ││││ │                                                ; - mat_mul.MyBenchmark::loop@85 (line 43)
  3.99%    3.78%  ││││ │  0x00007fccc1484cdb: imul   0x10(%rax,%rbx,4),%r9d
 16.84%   16.63%  ││││ │  0x00007fccc1484ce1: add    %edi,%r9d          ;*iadd
                  ││││ │                                                ; - mat_mul.MyBenchmark::loop@87 (line 43)
  2.89%    2.66%  ││││ │  0x00007fccc1484ce4: mov    %r9d,0x1c(%rsi)    ;*putfield s
                  ││││ │                                                ; - mat_mul.MyBenchmark::loop@88 (line 43)
  3.73%    4.50%  ││││ │  0x00007fccc1484ce8: add    $0x2,%edx          ;*iadd
                  ││││ │                                                ; - mat_mul.MyBenchmark::loop@97 (line 42)
  2.57%    2.39%  ││││ │  0x00007fccc1484ceb: mov    %edx,0x18(%rsi)    ;*putfield k
                  ││││ │                                                ; - mat_mul.MyBenchmark::loop@98 (line 42)
  1.55%    0.64%  ││││ │  0x00007fccc1484cee: cmp    %ecx,%edx
                  ││╰│ │  0x00007fccc1484cf0: jl     0x00007fccc1484c90  ;*if_icmpge
                  ││ │ │                                                ; - mat_mul.MyBenchmark::loop@50 (line 42)
           0.03%  ││ │ │  0x00007fccc1484cf2: cmp    %r13d,%edx
                  ││ ╰ │  0x00007fccc1484cf5: jge    0x00007fccc1484c14
  0.02%    0.05%  ││   │  0x00007fccc1484cfb: nop                       ;*aload_0
                  ││   │                                                ; - mat_mul.MyBenchmark::loop@53 (line 43)
                  ││  ↗│  0x00007fccc1484cfc: mov    0x10(%r11,%rdx,4),%edi  ;*aaload
                  ││  ││                                                ; - mat_mul.MyBenchmark::loop@80 (line 43)
  0.02%           ││  ││  0x00007fccc1484d01: mov    0xc(%r12,%rdi,8),%r10d  ; implicit exception: dispatches to 0x00007fccc1484dbd
  0.02%    0.03%  ││  ││  0x00007fccc1484d06: mov    0x10(%r8,%rdx,4),%ebp  ;*iaload
                  ││  ││                                                ; - mat_mul.MyBenchmark::loop@71 (line 43)
           0.03%  ││  ││  0x00007fccc1484d0b: lea    (%r12,%rdi,8),%rax  ;*aaload
                  ││  ││                                                ; - mat_mul.MyBenchmark::loop@80 (line 43)
                  ││  ││  0x00007fccc1484d0f: cmp    %r10d,%ebx
                  ││  ││  0x00007fccc1484d12: jae    0x00007fccc1484d8b  ;*iaload
                  ││  ││                                                ; - mat_mul.MyBenchmark::loop@85 (line 43)
  0.03%           ││  ││  0x00007fccc1484d14: imul   0x10(%rax,%rbx,4),%ebp
  0.02%    0.10%  ││  ││  0x00007fccc1484d19: add    %ebp,%r9d          ;*iadd
                  ││  ││                                                ; - mat_mul.MyBenchmark::loop@87 (line 43)
           0.03%  ││  ││  0x00007fccc1484d1c: mov    %r9d,0x1c(%rsi)    ;*putfield s
                  ││  ││                                                ; - mat_mul.MyBenchmark::loop@88 (line 43)
  0.02%    0.06%  ││  ││  0x00007fccc1484d20: inc    %edx               ;*iadd
                  ││  ││                                                ; - mat_mul.MyBenchmark::loop@97 (line 42)
                  ││  ││  0x00007fccc1484d22: mov    %edx,0x18(%rsi)    ;*putfield k
                  ││  ││                                                ; - mat_mul.MyBenchmark::loop@98 (line 42)
  0.02%           ││  ││  0x00007fccc1484d25: cmp    %r13d,%edx
                  ││  ╰│  0x00007fccc1484d28: jl     0x00007fccc1484cfc  ;*if_icmpge
                  ││   │                                                ; - mat_mul.MyBenchmark::loop@50 (line 42)
  0.02%    0.03%  ││   ╰  0x00007fccc1484d2a: jmpq   0x00007fccc1484c14
                  ↘│      0x00007fccc1484d2f: mov    %edi,%r10d
                   │      0x00007fccc1484d32: mov    %r9d,%edi
                   │      0x00007fccc1484d35: mov    %r10d,%r9d
                   ↘      0x00007fccc1484d38: vmovsd %xmm1,(%rsp)
                          0x00007fccc1484d3d: mov    %rsi,0x8(%rsp)
                          0x00007fccc1484d42: mov    %edi,0x10(%rsp)
                          0x00007fccc1484d46: mov    %r9d,0x14(%rsp)
                          0x00007fccc1484d4b: mov    %rax,0x18(%rsp)
                          0x00007fccc1484d50: mov    %ebx,0x20(%rsp)
....................................................................................................
 95.53%   97.39%  <total for region 1>

....[Hottest Regions]...............................................................................
 95.53%   97.39%         C2, level 4  mat_mul.MyBenchmark::loop, version 574 (278 bytes) 
  1.18%                       kernel  [unknown] (0 bytes) 
  0.70%    0.69%              kernel  [unknown] (0 bytes) 
  0.10%                       kernel  [unknown] (0 bytes) 
  0.08%                       kernel  [unknown] (25 bytes) 
  0.06%    0.02%              kernel  [unknown] (0 bytes) 
  0.06%    0.05%              kernel  [unknown] (24 bytes) 
  0.05%    0.02%              kernel  [unknown] (36 bytes) 
  0.05%                       kernel  [unknown] (11 bytes) 
  0.03%                       kernel  [unknown] (3 bytes) 
  0.03%                       kernel  [unknown] (16 bytes) 
  0.03%                       kernel  [unknown] (15 bytes) 
  0.03%                       kernel  [unknown] (29 bytes) 
  0.03%                       kernel  [unknown] (31 bytes) 
  0.03%    0.03%              kernel  [unknown] (35 bytes) 
  0.03%                       kernel  [unknown] (0 bytes) 
  0.03%                       kernel  [unknown] (25 bytes) 
  0.03%    0.02%              kernel  [unknown] (10 bytes) 
  0.03%                       kernel  [unknown] (0 bytes) 
  0.03%                       kernel  [unknown] (16 bytes) 
  1.84%    1.79%  <...other 187 warm regions...>
....................................................................................................
100.00%   99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 95.53%   97.39%         C2, level 4  mat_mul.MyBenchmark::loop, version 574 
  3.64%    1.56%              kernel  [unknown] 
  0.05%    0.03%   libhsdis-amd64.so  print_insn 
  0.05%    0.03%        libc-2.12.so  _IO_file_xsputn@@GLIBC_2.2.5 
  0.05%                    libjvm.so  outputStream::do_vsnprintf 
  0.03%    0.08%        libc-2.12.so  _IO_fwrite 
  0.03%                 libc-2.12.so  _IO_vsnprintf 
  0.03%    0.02%        libc-2.12.so  __strchrnul 
  0.03%    0.02%           libjvm.so  defaultStream::write 
  0.03%    0.03%           libjvm.so  xmlTextStream::write 
  0.02%                    libjvm.so  Node::Ideal 
  0.02%    0.02%           libjvm.so  Monitor::IWait 
  0.02%            libhsdis-amd64.so  oappend 
  0.02%    0.06%           libjvm.so  fileStream::write 
  0.02%                    libjvm.so  Assembler::emit_operand 
  0.02%    0.02%  libpthread-2.12.so  [unknown] 
  0.02%                    libjvm.so  ciMethodData::set_would_profile 
  0.02%                    libjvm.so  nmethod::print_block_comment 
  0.02%                               <unknown> 
  0.02%                    libjvm.so  LIR_OpVisitState::visit 
  0.37%    0.10%  <...other 23 warm methods...>
....................................................................................................
100.00%   99.35%  <totals>

....[Distribution by Source]........................................................................
 95.53%   97.39%         C2, level 4
  3.64%    1.56%              kernel
  0.48%    0.46%           libjvm.so
  0.19%    0.40%        libc-2.12.so
  0.08%    0.03%   libhsdis-amd64.so
  0.03%    0.10%  libpthread-2.12.so
  0.02%                             
  0.02%    0.02%           libzip.so
  0.02%    0.03%         interpreter
....................................................................................................
100.00%   99.98%  <totals>



# JMH version: 1.19
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /opt/jdk1.8.0_131/jre/bin/java
# VM options: -XX:+UnlockDiagnosticVMOptions -XX:CompileCommand=print,MyBenchmark
# Warmup: 3 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: mat_mul.MyBenchmark.loop
# Parameters: (N_str = 1024)

# Run progress: 40.00% complete, ETA 00:02:57
# Fork: 1 of 2
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 2.108 s/op
# Warmup Iteration   2: 2.071 s/op
# Warmup Iteration   3: 2.066 s/op
Iteration   1: 2.057 s/op
Iteration   2: 2.063 s/op
Iteration   3: 2.056 s/op
Iteration   4: 2.059 s/op
Iteration   5: 2.062 s/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 45.00% complete, ETA 00:02:53
# Fork: 2 of 2
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 2.098 s/op
# Warmup Iteration   2: 2.057 s/op
# Warmup Iteration   3: 2.061 s/op
Iteration   1: 2.063 s/op
Iteration   2: 2.060 s/op
Iteration   3: 2.057 s/op
Iteration   4: 2.058 s/op
Iteration   5: 2.060 s/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "mat_mul.MyBenchmark.loop":
  2.060 ±(99.9%) 0.004 s/op [Average]
  (min, avg, max) = (2.056, 2.060, 2.063), stdev = 0.003
  CI (99.9%): [2.056, 2.063] (assumes normal distribution)

Secondary result "mat_mul.MyBenchmark.loop:·asm":
PrintAssembly processed: 179951 total address lines.
Perf output processed (skipped 11.283 seconds):
 Column 1: cycles (10438 events)
 Column 2: instructions (10435 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
C2, level 4, mat_mul.MyBenchmark::loop, version 591 (281 bytes) 

                          0x00007f46b948fc4b: shl    $0x3,%rdx
                          0x00007f46b948fc4f: callq  0x00007f46b9046020  ; OopMap{off=276}
                                                                        ;*invokevirtual consume
                                                                        ; - mat_mul.MyBenchmark::loop@153 (line 48)
                                                                        ;   {optimized virtual_call}
                          0x00007f46b948fc54: add    $0x40,%rsp
                          0x00007f46b948fc58: pop    %rbp
                          0x00007f46b948fc59: test   %eax,0x1497e3a1(%rip)        # 0x00007f46cde0e000
                                                                        ;   {poll_return}
                          0x00007f46b948fc5f: retq   
           0.02%     ↗ ↗  0x00007f46b948fc60: vmovq  %xmm4,%rdi
                     │ │  0x00007f46b948fc65: mov    %r9d,0x10(%rdi,%rbx,4)  ;*iastore
                     │ │                                                ; - mat_mul.MyBenchmark::loop@121 (line 45)
  0.02%    0.01%     │ │  0x00007f46b948fc6a: inc    %ebx               ;*iadd
                     │ │                                                ; - mat_mul.MyBenchmark::loop@128 (line 40)
           0.01%     │ │  0x00007f46b948fc6c: mov    %ebx,0x14(%rsi)    ;*putfield j
                     │ │                                                ; - mat_mul.MyBenchmark::loop@129 (line 40)
                     │ │  0x00007f46b948fc6f: cmp    %r13d,%ebx
                     │ │  0x00007f46b948fc72: jge    0x00007f46b948fdb9  ;*if_icmpge
                     │ │                                                ; - mat_mul.MyBenchmark::loop@29 (line 40)
                     │ │  0x00007f46b948fc78: vmovd  %xmm3,%r9d
  0.01%              │ │  0x00007f46b948fc7d: vmovd  %xmm2,%r10d
                     │ │  0x00007f46b948fc82: vmovq  %xmm5,%rax         ;*aload_0
                     │ │                                                ; - mat_mul.MyBenchmark::loop@32 (line 41)
  0.01%              │ │  0x00007f46b948fc87: movl   $0x0,0x1c(%rsi)    ;*putfield s
                     │ │                                                ; - mat_mul.MyBenchmark::loop@34 (line 41)
                     │ │  0x00007f46b948fc8e: movl   $0x0,0x18(%rsi)    ;*putfield k
                     │ │                                                ; - mat_mul.MyBenchmark::loop@39 (line 42)
           0.03%     │ │  0x00007f46b948fc95: mov    0xc(%r12,%r14,8),%edx  ; implicit exception: dispatches to 0x00007f46b948fe45
                     │ │  0x00007f46b948fc9a: vmovq  %rdi,%xmm4
           0.02%     │ │  0x00007f46b948fc9f: vmovd  %r10d,%xmm2
                     │ │  0x00007f46b948fca4: vmovd  %r9d,%xmm3
  0.01%    0.01%     │ │  0x00007f46b948fca9: mov    0x10(%r12,%r10,8),%r9d  ;*iaload
                     │ │                                                ; - mat_mul.MyBenchmark::loop@71 (line 43)
  0.01%    0.01%     │ │  0x00007f46b948fcae: cmp    %edx,%ebx
                     │ │  0x00007f46b948fcb0: jae    0x00007f46b948fe00  ;*iaload
                     │ │                                                ; - mat_mul.MyBenchmark::loop@85 (line 43)
  0.01%    0.01%     │ │  0x00007f46b948fcb6: imul   0x10(%rax,%rbx,4),%r9d  ;*imul
                     │ │                                                ; - mat_mul.MyBenchmark::loop@86 (line 43)
  0.03%    0.01%     │ │  0x00007f46b948fcbc: mov    %r9d,0x1c(%rsi)    ;*putfield s
                     │ │                                                ; - mat_mul.MyBenchmark::loop@88 (line 43)
           0.02%     │ │  0x00007f46b948fcc0: movl   $0x1,0x18(%rsi)    ;*putfield k
                     │ │                                                ; - mat_mul.MyBenchmark::loop@98 (line 42)
                     │ │  0x00007f46b948fcc7: cmp    $0x1,%ecx
                     │ │  0x00007f46b948fcca: jle    0x00007f46b948fe04
                     │ │  0x00007f46b948fcd0: vmovq  %rax,%xmm5
                     │ │  0x00007f46b948fcd5: mov    $0x1,%edx
  0.01%    0.02%     │ │  0x00007f46b948fcda: nopw   0x0(%rax,%rax,1)   ;*aload_0
                     │ │                                                ; - mat_mul.MyBenchmark::loop@53 (line 43)
  6.68%    6.33%    ↗│ │  0x00007f46b948fce0: mov    0x10(%r11,%rdx,4),%r10d  ;*aaload
                    ││ │                                                ; - mat_mul.MyBenchmark::loop@80 (line 43)
  1.86%    1.88%    ││ │  0x00007f46b948fce5: mov    0xc(%r12,%r10,8),%ebp  ; implicit exception: dispatches to 0x00007f46b948fe45
  5.32%    6.08%    ││ │  0x00007f46b948fcea: mov    0x10(%r8,%rdx,4),%edi  ;*iaload
                    ││ │                                                ; - mat_mul.MyBenchmark::loop@71 (line 43)
  0.03%    0.11%    ││ │  0x00007f46b948fcef: lea    (%r12,%r10,8),%rax  ;*aaload
                    ││ │                                                ; - mat_mul.MyBenchmark::loop@80 (line 43)
  6.43%    6.08%    ││ │  0x00007f46b948fcf3: cmp    %ebp,%ebx
                  ╭ ││ │  0x00007f46b948fcf5: jae    0x00007f46b948fd83  ;*iaload
                  │ ││ │                                                ; - mat_mul.MyBenchmark::loop@85 (line 43)
  2.35%    2.14%  │ ││ │  0x00007f46b948fcfb: imul   0x10(%rax,%rbx,4),%edi
 14.47%   15.69%  │ ││ │  0x00007f46b948fd00: add    %r9d,%edi          ;*iadd
                  │ ││ │                                                ; - mat_mul.MyBenchmark::loop@87 (line 43)
  1.83%    1.68%  │ ││ │  0x00007f46b948fd03: mov    %edi,0x1c(%rsi)    ;*putfield s
                  │ ││ │                                                ; - mat_mul.MyBenchmark::loop@88 (line 43)
  6.78%    6.84%  │ ││ │  0x00007f46b948fd06: mov    %edx,%r10d
  1.90%    1.46%  │ ││ │  0x00007f46b948fd09: inc    %r10d
                  │ ││ │  0x00007f46b948fd0c: mov    %r10d,0x18(%rsi)   ;*putfield k
                  │ ││ │                                                ; - mat_mul.MyBenchmark::loop@98 (line 42)
  0.01%    0.02%  │ ││ │  0x00007f46b948fd10: movslq %edx,%r9
  6.47%    6.18%  │ ││ │  0x00007f46b948fd13: mov    0x14(%r11,%r9,4),%ebp  ;*aaload
                  │ ││ │                                                ; - mat_mul.MyBenchmark::loop@80 (line 43)
  1.90%    1.85%  │ ││ │  0x00007f46b948fd18: mov    0xc(%r12,%rbp,8),%r10d  ; implicit exception: dispatches to 0x00007f46b948fe45
  6.20%    7.25%  │ ││ │  0x00007f46b948fd1d: mov    0x14(%r8,%r9,4),%r9d  ;*iaload
                  │ ││ │                                                ; - mat_mul.MyBenchmark::loop@71 (line 43)
  0.17%    0.26%  │ ││ │  0x00007f46b948fd22: lea    (%r12,%rbp,8),%rax  ;*aaload
                  │ ││ │                                                ; - mat_mul.MyBenchmark::loop@80 (line 43)
  6.65%    5.93%  │ ││ │  0x00007f46b948fd26: cmp    %r10d,%ebx
                  │╭││ │  0x00007f46b948fd29: jae    0x00007f46b948fd8c  ;*iaload
                  ││││ │                                                ; - mat_mul.MyBenchmark::loop@85 (line 43)
  2.47%    2.53%  ││││ │  0x00007f46b948fd2b: imul   0x10(%rax,%rbx,4),%r9d
 16.33%   16.33%  ││││ │  0x00007f46b948fd31: add    %edi,%r9d          ;*iadd
                  ││││ │                                                ; - mat_mul.MyBenchmark::loop@87 (line 43)
  1.84%    1.98%  ││││ │  0x00007f46b948fd34: mov    %r9d,0x1c(%rsi)    ;*putfield s
                  ││││ │                                                ; - mat_mul.MyBenchmark::loop@88 (line 43)
  6.82%    6.01%  ││││ │  0x00007f46b948fd38: add    $0x2,%edx          ;*iadd
                  ││││ │                                                ; - mat_mul.MyBenchmark::loop@97 (line 42)
  1.76%    1.55%  ││││ │  0x00007f46b948fd3b: mov    %edx,0x18(%rsi)    ;*putfield k
                  ││││ │                                                ; - mat_mul.MyBenchmark::loop@98 (line 42)
                  ││││ │  0x00007f46b948fd3e: cmp    %ecx,%edx
  0.03%    0.03%  ││╰│ │  0x00007f46b948fd40: jl     0x00007f46b948fce0  ;*if_icmpge
                  ││ │ │                                                ; - mat_mul.MyBenchmark::loop@50 (line 42)
  0.03%    0.03%  ││ │ │  0x00007f46b948fd42: cmp    %r13d,%edx
                  ││ ╰ │  0x00007f46b948fd45: jge    0x00007f46b948fc60
           0.02%  ││   │  0x00007f46b948fd4b: nop                       ;*aload_0
                  ││   │                                                ; - mat_mul.MyBenchmark::loop@53 (line 43)
                  ││  ↗│  0x00007f46b948fd4c: mov    0x10(%r11,%rdx,4),%edi  ;*aaload
                  ││  ││                                                ; - mat_mul.MyBenchmark::loop@80 (line 43)
                  ││  ││  0x00007f46b948fd51: mov    0xc(%r12,%rdi,8),%r10d  ; implicit exception: dispatches to 0x00007f46b948fe45
  0.04%    0.03%  ││  ││  0x00007f46b948fd56: mov    0x10(%r8,%rdx,4),%ebp  ;*iaload
                  ││  ││                                                ; - mat_mul.MyBenchmark::loop@71 (line 43)
                  ││  ││  0x00007f46b948fd5b: lea    (%r12,%rdi,8),%rax  ;*aaload
                  ││  ││                                                ; - mat_mul.MyBenchmark::loop@80 (line 43)
                  ││  ││  0x00007f46b948fd5f: cmp    %r10d,%ebx
                  ││  ││  0x00007f46b948fd62: jae    0x00007f46b948fe13  ;*iaload
                  ││  ││                                                ; - mat_mul.MyBenchmark::loop@85 (line 43)
                  ││  ││  0x00007f46b948fd68: imul   0x10(%rax,%rbx,4),%ebp
  0.03%    0.07%  ││  ││  0x00007f46b948fd6d: add    %ebp,%r9d          ;*iadd
                  ││  ││                                                ; - mat_mul.MyBenchmark::loop@87 (line 43)
           0.02%  ││  ││  0x00007f46b948fd70: mov    %r9d,0x1c(%rsi)    ;*putfield s
                  ││  ││                                                ; - mat_mul.MyBenchmark::loop@88 (line 43)
  0.03%           ││  ││  0x00007f46b948fd74: inc    %edx               ;*iadd
                  ││  ││                                                ; - mat_mul.MyBenchmark::loop@97 (line 42)
                  ││  ││  0x00007f46b948fd76: mov    %edx,0x18(%rsi)    ;*putfield k
                  ││  ││                                                ; - mat_mul.MyBenchmark::loop@98 (line 42)
  0.01%    0.02%  ││  ││  0x00007f46b948fd79: cmp    %r13d,%edx
                  ││  ╰│  0x00007f46b948fd7c: jl     0x00007f46b948fd4c  ;*if_icmpge
                  ││   │                                                ; - mat_mul.MyBenchmark::loop@50 (line 42)
                  ││   ╰  0x00007f46b948fd7e: jmpq   0x00007f46b948fc60
                  ↘│      0x00007f46b948fd83: mov    %edi,%r10d
                   │      0x00007f46b948fd86: mov    %r9d,%edi
                   │      0x00007f46b948fd89: mov    %r10d,%r9d
                   ↘      0x00007f46b948fd8c: vmovsd %xmm1,(%rsp)
                          0x00007f46b948fd91: mov    %rsi,0x8(%rsp)
                          0x00007f46b948fd96: mov    %edi,0x10(%rsp)
....................................................................................................
 98.52%   98.54%  <total for region 1>

....[Hottest Regions]...............................................................................
 98.52%   98.54%         C2, level 4  mat_mul.MyBenchmark::loop, version 591 (281 bytes) 
  0.38%    0.37%              kernel  [unknown] (0 bytes) 
  0.04%                       kernel  [unknown] (0 bytes) 
  0.04%                       kernel  [unknown] (0 bytes) 
  0.03%                 libc-2.12.so  _IO_default_xsputn (9 bytes) 
  0.02%                       kernel  [unknown] (20 bytes) 
  0.02%                       kernel  [unknown] (16 bytes) 
  0.02%    0.01%              kernel  [unknown] (0 bytes) 
  0.02%                       kernel  [unknown] (8 bytes) 
  0.02%    0.01%              kernel  [unknown] (56 bytes) 
  0.02%    0.01%              kernel  [unknown] (0 bytes) 
  0.02%    0.01%              kernel  [unknown] (24 bytes) 
  0.02%                 libc-2.12.so  _IO_fflush (0 bytes) 
  0.02%                 libc-2.12.so  _IO_fwrite (21 bytes) 
  0.02%    0.02%        libc-2.12.so  __strlen_sse42 (55 bytes) 
  0.02%                  interpreter  method entry point (kind = zerolocals)  (8 bytes) 
  0.02%    0.03%           libjvm.so  RelocIterator::initialize (66 bytes) 
  0.01%                       kernel  [unknown] (0 bytes) 
  0.01%    0.01%              kernel  [unknown] (1 bytes) 
  0.01%                       kernel  [unknown] (0 bytes) 
  0.71%    0.99%  <...other 153 warm regions...>
....................................................................................................
 99.98%  100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 98.52%   98.55%         C2, level 4  mat_mul.MyBenchmark::loop, version 591 
  0.98%    0.89%              kernel  [unknown] 
  0.04%                 libc-2.12.so  _IO_default_xsputn 
  0.03%    0.02%        libc-2.12.so  _IO_fwrite 
  0.02%    0.03%   libhsdis-amd64.so  print_insn 
  0.02%            libhsdis-amd64.so  OP_E_memory 
  0.02%    0.02%        libc-2.12.so  __strlen_sse42 
  0.02%    0.02%        libc-2.12.so  _IO_file_xsputn@@GLIBC_2.2.5 
  0.02%                  interpreter  method entry point (kind = zerolocals)  
  0.02%    0.03%           libjvm.so  RelocIterator::initialize 
  0.02%    0.03%           libjvm.so  outputStream::print 
  0.02%                 libc-2.12.so  _IO_fflush 
  0.01%                  C1, level 3  sun.misc.Launcher$AppClassLoader::loadClass, version 456 
  0.01%                    libjvm.so  LinearScan::add_def 
  0.01%                    libjvm.so  ciSignature::ciSignature 
  0.01%                    libjvm.so  outputStream::vprint 
  0.01%                    libjvm.so  ciSymbol::ciSymbol 
  0.01%                  interpreter  invokespecial  183 invokespecial  
  0.01%    0.02%           libjvm.so  fileStream::write 
  0.01%                    libjvm.so  GraphBuilder::profile_call 
  0.18%    0.07%  <...other 19 warm methods...>
....................................................................................................
 99.98%   99.67%  <totals>

....[Distribution by Source]........................................................................
 98.52%   98.55%         C2, level 4
  0.98%    0.89%              kernel
  0.20%    0.30%           libjvm.so
  0.15%    0.13%        libc-2.12.so
  0.06%    0.05%   libhsdis-amd64.so
  0.04%    0.01%         interpreter
  0.01%    0.05%  libpthread-2.12.so
  0.01%                    libzip.so
  0.01%    0.02%         C1, level 3
....................................................................................................
 99.98%  100.00%  <totals>

PrintAssembly processed: 178740 total address lines.
Perf output processed (skipped 11.176 seconds):
 Column 1: cycles (10422 events)
 Column 2: instructions (10423 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
C2, level 4, mat_mul.MyBenchmark::loop, version 575 (281 bytes) 

                          0x00007fd85948688b: shl    $0x3,%rdx
                          0x00007fd85948688f: callq  0x00007fd859046020  ; OopMap{off=276}
                                                                        ;*invokevirtual consume
                                                                        ; - mat_mul.MyBenchmark::loop@153 (line 48)
                                                                        ;   {optimized virtual_call}
                          0x00007fd859486894: add    $0x40,%rsp
                          0x00007fd859486898: pop    %rbp
                          0x00007fd859486899: test   %eax,0x157dd761(%rip)        # 0x00007fd86ec64000
                                                                        ;   {poll_return}
                          0x00007fd85948689f: retq   
           0.01%     ↗ ↗  0x00007fd8594868a0: vmovq  %xmm4,%rdi
                     │ │  0x00007fd8594868a5: mov    %r9d,0x10(%rdi,%rbx,4)  ;*iastore
                     │ │                                                ; - mat_mul.MyBenchmark::loop@121 (line 45)
  0.01%    0.03%     │ │  0x00007fd8594868aa: inc    %ebx               ;*iadd
                     │ │                                                ; - mat_mul.MyBenchmark::loop@128 (line 40)
                     │ │  0x00007fd8594868ac: mov    %ebx,0x14(%rsi)    ;*putfield j
                     │ │                                                ; - mat_mul.MyBenchmark::loop@129 (line 40)
                     │ │  0x00007fd8594868af: cmp    %r13d,%ebx
                     │ │  0x00007fd8594868b2: jge    0x00007fd8594869f9  ;*if_icmpge
                     │ │                                                ; - mat_mul.MyBenchmark::loop@29 (line 40)
                     │ │  0x00007fd8594868b8: vmovd  %xmm3,%r9d
           0.01%     │ │  0x00007fd8594868bd: vmovd  %xmm2,%r10d
                     │ │  0x00007fd8594868c2: vmovq  %xmm5,%rax         ;*aload_0
                     │ │                                                ; - mat_mul.MyBenchmark::loop@32 (line 41)
  0.02%              │ │  0x00007fd8594868c7: movl   $0x0,0x1c(%rsi)    ;*putfield s
                     │ │                                                ; - mat_mul.MyBenchmark::loop@34 (line 41)
           0.01%     │ │  0x00007fd8594868ce: movl   $0x0,0x18(%rsi)    ;*putfield k
                     │ │                                                ; - mat_mul.MyBenchmark::loop@39 (line 42)
                     │ │  0x00007fd8594868d5: mov    0xc(%r12,%r14,8),%edx  ; implicit exception: dispatches to 0x00007fd859486a85
                     │ │  0x00007fd8594868da: vmovq  %rdi,%xmm4
           0.01%     │ │  0x00007fd8594868df: vmovd  %r10d,%xmm2
                     │ │  0x00007fd8594868e4: vmovd  %r9d,%xmm3
  0.02%              │ │  0x00007fd8594868e9: mov    0x10(%r12,%r10,8),%r9d  ;*iaload
                     │ │                                                ; - mat_mul.MyBenchmark::loop@71 (line 43)
                     │ │  0x00007fd8594868ee: cmp    %edx,%ebx
                     │ │  0x00007fd8594868f0: jae    0x00007fd859486a40  ;*iaload
                     │ │                                                ; - mat_mul.MyBenchmark::loop@85 (line 43)
           0.01%     │ │  0x00007fd8594868f6: imul   0x10(%rax,%rbx,4),%r9d  ;*imul
                     │ │                                                ; - mat_mul.MyBenchmark::loop@86 (line 43)
  0.05%    0.02%     │ │  0x00007fd8594868fc: mov    %r9d,0x1c(%rsi)    ;*putfield s
                     │ │                                                ; - mat_mul.MyBenchmark::loop@88 (line 43)
           0.01%     │ │  0x00007fd859486900: movl   $0x1,0x18(%rsi)    ;*putfield k
                     │ │                                                ; - mat_mul.MyBenchmark::loop@98 (line 42)
                     │ │  0x00007fd859486907: cmp    $0x1,%ecx
                     │ │  0x00007fd85948690a: jle    0x00007fd859486a44
           0.01%     │ │  0x00007fd859486910: vmovq  %rax,%xmm5
                     │ │  0x00007fd859486915: mov    $0x1,%edx
  0.01%    0.04%     │ │  0x00007fd85948691a: nopw   0x0(%rax,%rax,1)   ;*aload_0
                     │ │                                                ; - mat_mul.MyBenchmark::loop@53 (line 43)
  7.00%    6.26%    ↗│ │  0x00007fd859486920: mov    0x10(%r11,%rdx,4),%r10d  ;*aaload
                    ││ │                                                ; - mat_mul.MyBenchmark::loop@80 (line 43)
  1.75%    1.46%    ││ │  0x00007fd859486925: mov    0xc(%r12,%r10,8),%ebp  ; implicit exception: dispatches to 0x00007fd859486a85
  5.02%    6.26%    ││ │  0x00007fd85948692a: mov    0x10(%r8,%rdx,4),%edi  ;*iaload
                    ││ │                                                ; - mat_mul.MyBenchmark::loop@71 (line 43)
  0.11%    0.11%    ││ │  0x00007fd85948692f: lea    (%r12,%r10,8),%rax  ;*aaload
                    ││ │                                                ; - mat_mul.MyBenchmark::loop@80 (line 43)
  6.39%    6.01%    ││ │  0x00007fd859486933: cmp    %ebp,%ebx
                  ╭ ││ │  0x00007fd859486935: jae    0x00007fd8594869c3  ;*iaload
                  │ ││ │                                                ; - mat_mul.MyBenchmark::loop@85 (line 43)
  2.26%    2.23%  │ ││ │  0x00007fd85948693b: imul   0x10(%rax,%rbx,4),%edi
 15.20%   16.01%  │ ││ │  0x00007fd859486940: add    %r9d,%edi          ;*iadd
                  │ ││ │                                                ; - mat_mul.MyBenchmark::loop@87 (line 43)
  1.44%    1.63%  │ ││ │  0x00007fd859486943: mov    %edi,0x1c(%rsi)    ;*putfield s
                  │ ││ │                                                ; - mat_mul.MyBenchmark::loop@88 (line 43)
  6.91%    6.48%  │ ││ │  0x00007fd859486946: mov    %edx,%r10d
  1.67%    1.64%  │ ││ │  0x00007fd859486949: inc    %r10d
  0.01%           │ ││ │  0x00007fd85948694c: mov    %r10d,0x18(%rsi)   ;*putfield k
                  │ ││ │                                                ; - mat_mul.MyBenchmark::loop@98 (line 42)
  0.05%    0.02%  │ ││ │  0x00007fd859486950: movslq %edx,%r9
  6.99%    6.35%  │ ││ │  0x00007fd859486953: mov    0x14(%r11,%r9,4),%ebp  ;*aaload
                  │ ││ │                                                ; - mat_mul.MyBenchmark::loop@80 (line 43)
  2.01%    1.97%  │ ││ │  0x00007fd859486958: mov    0xc(%r12,%rbp,8),%r10d  ; implicit exception: dispatches to 0x00007fd859486a85
  5.89%    6.44%  │ ││ │  0x00007fd85948695d: mov    0x14(%r8,%r9,4),%r9d  ;*iaload
                  │ ││ │                                                ; - mat_mul.MyBenchmark::loop@71 (line 43)
  0.24%    0.33%  │ ││ │  0x00007fd859486962: lea    (%r12,%rbp,8),%rax  ;*aaload
                  │ ││ │                                                ; - mat_mul.MyBenchmark::loop@80 (line 43)
  6.05%    5.93%  │ ││ │  0x00007fd859486966: cmp    %r10d,%ebx
                  │╭││ │  0x00007fd859486969: jae    0x00007fd8594869cc  ;*iaload
                  ││││ │                                                ; - mat_mul.MyBenchmark::loop@85 (line 43)
  2.30%    2.54%  ││││ │  0x00007fd85948696b: imul   0x10(%rax,%rbx,4),%r9d
 16.34%   16.94%  ││││ │  0x00007fd859486971: add    %edi,%r9d          ;*iadd
                  ││││ │                                                ; - mat_mul.MyBenchmark::loop@87 (line 43)
  1.94%    1.76%  ││││ │  0x00007fd859486974: mov    %r9d,0x1c(%rsi)    ;*putfield s
                  ││││ │                                                ; - mat_mul.MyBenchmark::loop@88 (line 43)
  6.65%    6.55%  ││││ │  0x00007fd859486978: add    $0x2,%edx          ;*iadd
                  ││││ │                                                ; - mat_mul.MyBenchmark::loop@97 (line 42)
  1.52%    1.41%  ││││ │  0x00007fd85948697b: mov    %edx,0x18(%rsi)    ;*putfield k
                  ││││ │                                                ; - mat_mul.MyBenchmark::loop@98 (line 42)
                  ││││ │  0x00007fd85948697e: cmp    %ecx,%edx
  0.01%    0.01%  ││╰│ │  0x00007fd859486980: jl     0x00007fd859486920  ;*if_icmpge
                  ││ │ │                                                ; - mat_mul.MyBenchmark::loop@50 (line 42)
  0.01%    0.02%  ││ │ │  0x00007fd859486982: cmp    %r13d,%edx
                  ││ ╰ │  0x00007fd859486985: jge    0x00007fd8594868a0
           0.01%  ││   │  0x00007fd85948698b: nop                       ;*aload_0
                  ││   │                                                ; - mat_mul.MyBenchmark::loop@53 (line 43)
                  ││  ↗│  0x00007fd85948698c: mov    0x10(%r11,%rdx,4),%edi  ;*aaload
                  ││  ││                                                ; - mat_mul.MyBenchmark::loop@80 (line 43)
                  ││  ││  0x00007fd859486991: mov    0xc(%r12,%rdi,8),%r10d  ; implicit exception: dispatches to 0x00007fd859486a85
  0.01%    0.01%  ││  ││  0x00007fd859486996: mov    0x10(%r8,%rdx,4),%ebp  ;*iaload
                  ││  ││                                                ; - mat_mul.MyBenchmark::loop@71 (line 43)
                  ││  ││  0x00007fd85948699b: lea    (%r12,%rdi,8),%rax  ;*aaload
                  ││  ││                                                ; - mat_mul.MyBenchmark::loop@80 (line 43)
                  ││  ││  0x00007fd85948699f: cmp    %r10d,%ebx
                  ││  ││  0x00007fd8594869a2: jae    0x00007fd859486a53  ;*iaload
                  ││  ││                                                ; - mat_mul.MyBenchmark::loop@85 (line 43)
           0.01%  ││  ││  0x00007fd8594869a8: imul   0x10(%rax,%rbx,4),%ebp
  0.06%    0.05%  ││  ││  0x00007fd8594869ad: add    %ebp,%r9d          ;*iadd
                  ││  ││                                                ; - mat_mul.MyBenchmark::loop@87 (line 43)
  0.02%           ││  ││  0x00007fd8594869b0: mov    %r9d,0x1c(%rsi)    ;*putfield s
                  ││  ││                                                ; - mat_mul.MyBenchmark::loop@88 (line 43)
                  ││  ││  0x00007fd8594869b4: inc    %edx               ;*iadd
                  ││  ││                                                ; - mat_mul.MyBenchmark::loop@97 (line 42)
                  ││  ││  0x00007fd8594869b6: mov    %edx,0x18(%rsi)    ;*putfield k
                  ││  ││                                                ; - mat_mul.MyBenchmark::loop@98 (line 42)
           0.02%  ││  ││  0x00007fd8594869b9: cmp    %r13d,%edx
                  ││  ╰│  0x00007fd8594869bc: jl     0x00007fd85948698c  ;*if_icmpge
                  ││   │                                                ; - mat_mul.MyBenchmark::loop@50 (line 42)
                  ││   ╰  0x00007fd8594869be: jmpq   0x00007fd8594868a0
                  ↘│      0x00007fd8594869c3: mov    %edi,%r10d
                   │      0x00007fd8594869c6: mov    %r9d,%edi
                   │      0x00007fd8594869c9: mov    %r10d,%r9d
                   ↘      0x00007fd8594869cc: vmovsd %xmm1,(%rsp)
                          0x00007fd8594869d1: mov    %rsi,0x8(%rsp)
                          0x00007fd8594869d6: mov    %edi,0x10(%rsp)
....................................................................................................
 97.94%   98.58%  <total for region 1>

....[Hottest Regions]...............................................................................
 97.94%   98.58%         C2, level 4  mat_mul.MyBenchmark::loop, version 575 (281 bytes) 
  0.42%                       kernel  [unknown] (0 bytes) 
  0.28%    0.25%              kernel  [unknown] (0 bytes) 
  0.09%    0.03%              kernel  [unknown] (0 bytes) 
  0.04%    0.01%              kernel  [unknown] (42 bytes) 
  0.04%    0.01%              kernel  [unknown] (0 bytes) 
  0.03%                       kernel  [unknown] (0 bytes) 
  0.03%    0.01%              kernel  [unknown] (0 bytes) 
  0.03%    0.02%              kernel  [unknown] (0 bytes) 
  0.03%                       kernel  [unknown] (11 bytes) 
  0.03%           libpthread-2.12.so  [unknown] (0 bytes) 
  0.02%    0.01%              kernel  [unknown] (13 bytes) 
  0.02%                       kernel  [unknown] (0 bytes) 
  0.02%                       kernel  [unknown] (0 bytes) 
  0.02%                       kernel  [unknown] (0 bytes) 
  0.02%                       kernel  [unknown] (5 bytes) 
  0.02%    0.02%              kernel  [unknown] (29 bytes) 
  0.02%                       kernel  [unknown] (9 bytes) 
  0.02%                       kernel  [unknown] (9 bytes) 
  0.02%    0.03%              kernel  [unknown] (4 bytes) 
  0.87%    1.04%  <...other 166 warm regions...>
....................................................................................................
 99.99%  100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 97.94%   98.58%         C2, level 4  mat_mul.MyBenchmark::loop, version 575 
  1.65%    1.03%              kernel  [unknown] 
  0.11%    0.09%         C1, level 3  java.lang.Class::argumentTypesToString, version 609 
  0.04%    0.02%        libc-2.12.so  vfprintf 
  0.03%           libpthread-2.12.so  [unknown] 
  0.03%    0.02%           libjvm.so  RelocIterator::initialize 
  0.02%                 libc-2.12.so  _IO_fwrite 
  0.02%                  interpreter  invokevirtual  182 invokevirtual  
  0.01%    0.01%        libc-2.12.so  __strchr_sse42 
  0.01%                  interpreter  ifgt  157 ifgt  
  0.01%                    libjvm.so  Monitor::wait 
  0.01%    0.02%        libc-2.12.so  __strlen_sse42 
  0.01%    0.01%        libc-2.12.so  _IO_file_xsputn@@GLIBC_2.2.5 
  0.01%                 libc-2.12.so  _IO_file_sync@@GLIBC_2.2.5 
  0.01%                  interpreter  method entry point (kind = zerolocals)  
  0.01%                 libc-2.12.so  _IO_do_write@@GLIBC_2.2.5 
  0.01%    0.01%           libjvm.so  nmethod::print_code_comment_on 
  0.01%                 libc-2.12.so  memcpy 
  0.01%                    libjvm.so  Monitor::ILock 
  0.01%                    libjvm.so  os::current_thread_id 
  0.05%           <...other 5 warm methods...>
....................................................................................................
 99.99%   99.78%  <totals>

....[Distribution by Source]........................................................................
 97.94%   98.59%         C2, level 4
  1.65%    1.03%              kernel
  0.12%    0.12%        libc-2.12.so
  0.11%    0.13%           libjvm.so
  0.11%    0.09%         C1, level 3
  0.05%    0.02%         interpreter
  0.03%    0.02%  libpthread-2.12.so
....................................................................................................
 99.99%  100.00%  <totals>



# JMH version: 1.19
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /opt/jdk1.8.0_131/jre/bin/java
# VM options: -XX:+UnlockDiagnosticVMOptions -XX:CompileCommand=print,MyBenchmark
# Warmup: 3 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: mat_mul.MyBenchmark.loop_ikj
# Parameters: (N_str = 64)

# Run progress: 50.00% complete, ETA 00:02:44
# Fork: 1 of 2
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: ≈ 10⁻⁴ s/op
# Warmup Iteration   2: ≈ 10⁻⁴ s/op
# Warmup Iteration   3: ≈ 10⁻⁴ s/op
Iteration   1: ≈ 10⁻⁴ s/op
Iteration   2: ≈ 10⁻⁴ s/op
Iteration   3: ≈ 10⁻⁴ s/op
Iteration   4: ≈ 10⁻⁴ s/op
Iteration   5: ≈ 10⁻⁴ s/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 55.00% complete, ETA 00:02:26
# Fork: 2 of 2
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: ≈ 10⁻⁴ s/op
# Warmup Iteration   2: ≈ 10⁻⁴ s/op
# Warmup Iteration   3: ≈ 10⁻⁴ s/op
Iteration   1: ≈ 10⁻⁴ s/op
Iteration   2: ≈ 10⁻⁴ s/op
Iteration   3: ≈ 10⁻⁴ s/op
Iteration   4: ≈ 10⁻⁴ s/op
Iteration   5: ≈ 10⁻⁴ s/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "mat_mul.MyBenchmark.loop_ikj":
  ≈ 10⁻⁴ s/op

Secondary result "mat_mul.MyBenchmark.loop_ikj:·asm":
PrintAssembly processed: 178516 total address lines.
Perf output processed (skipped 7.951 seconds):
 Column 1: cycles (5130 events)
 Column 2: instructions (5124 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
C2, level 4, mat_mul.MyBenchmark::loop_ikj, version 572 (435 bytes) 

                               0x00007f2d3548444e: xor    %r9d,%r9d
                  ╭            0x00007f2d35484451: jmp    0x00007f2d35484477
                  │    ↗       0x00007f2d35484453: mov    %r14d,%edi         ;*getfield N
                  │    │                                                     ; - mat_mul.MyBenchmark::loop_ikj@10 (line 53)
                  │    │    ↗  0x00007f2d35484456: inc    %r9d               ;*iadd
                  │    │    │                                                ; - mat_mul.MyBenchmark::loop_ikj@134 (line 53)
                  │    │    │  0x00007f2d35484459: vmovq  %xmm0,%r10
                  │    │    │  0x00007f2d3548445e: mov    %r9d,0x10(%r10)    ; OopMap{r13=Oop xmm0=Oop off=98}
                  │    │    │                                                ;*goto
                  │    │    │                                                ; - mat_mul.MyBenchmark::loop_ikj@138 (line 53)
  0.10%    0.04%  │    │    │  0x00007f2d35484462: test   %eax,0x172ccb98(%rip)        # 0x00007f2d4c751000
                  │    │    │                                                ;*goto
                  │    │    │                                                ; - mat_mul.MyBenchmark::loop_ikj@138 (line 53)
                  │    │    │                                                ;   {poll}
  0.04%    0.04%  │    │    │  0x00007f2d35484468: cmp    %edi,%r9d
                  │╭   │    │  0x00007f2d3548446b: jge    0x00007f2d3548462b
                  ││   │    │  0x00007f2d35484471: mov    %r14d,%edi
                  ││   │    │  0x00007f2d35484474: mov    %r11d,%r14d        ;*aload_0
                  ││   │    │                                                ; - mat_mul.MyBenchmark::loop_ikj@16 (line 54)
                  ↘│   │    │  0x00007f2d35484477: vmovq  %xmm0,%r10
  0.04%            │   │    │  0x00007f2d3548447c: movl   $0x0,0x18(%r10)    ;*putfield k
                   │   │    │                                                ; - mat_mul.MyBenchmark::loop_ikj@18 (line 54)
  0.02%    0.06%   │   │    │  0x00007f2d35484484: test   %edi,%edi
                   │╭  │    │  0x00007f2d35484486: jle    0x00007f2d35484622  ;*if_icmpge
                   ││  │    │                                                ; - mat_mul.MyBenchmark::loop_ikj@29 (line 54)
                   ││  │    │  0x00007f2d3548448c: xor    %ecx,%ecx
                   ││╭ │    │  0x00007f2d3548448e: jmp    0x00007f2d354844cf  ;*aload_0
                   │││ │    │                                                ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
  0.68%    0.43%   │││↗│  ↗ │  0x00007f2d35484490: mov    0x10(%rax,%rsi,4),%r10d  ;*iaload
                   │││││  │ │                                                ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
  0.37%    0.64%   │││││  │ │  0x00007f2d35484495: imul   %edx,%r10d
  0.72%    0.72%   │││││  │ │  0x00007f2d35484499: add    %r10d,0x10(%r11,%rsi,4)  ;*iastore
                   │││││  │ │                                                ; - mat_mul.MyBenchmark::loop_ikj@101 (line 57)
  1.75%    1.52%   │││││  │ │  0x00007f2d3548449e: inc    %esi               ;*iadd
                   │││││  │ │                                                ; - mat_mul.MyBenchmark::loop_ikj@108 (line 56)
  0.70%    0.55%   │││││  │ │  0x00007f2d354844a0: vmovq  %xmm0,%r10
  0.47%    0.16%   │││││  │ │  0x00007f2d354844a5: mov    %esi,0x14(%r10)    ;*putfield j
                   │││││  │ │                                                ; - mat_mul.MyBenchmark::loop_ikj@109 (line 56)
  0.57%    0.66%   │││││  │ │  0x00007f2d354844a9: cmp    %edi,%esi
                   │││╰│  │ │  0x00007f2d354844ab: jl     0x00007f2d35484490  ;*aload_0
                   │││ │  │ │                                                ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
  0.02%            │││ │  │↗│  0x00007f2d354844ad: mov    %r14d,%edi
  0.23%    0.21%   │││ │↗ │││  0x00007f2d354844b0: vmovq  %xmm0,%r10
  0.04%            │││ ││ │││  0x00007f2d354844b5: mov    0xc(%r10),%r11d    ;*getfield N
                   │││ ││ │││                                                ; - mat_mul.MyBenchmark::loop_ikj@26 (line 54)
  0.45%    0.29%   │││ ││ │││  0x00007f2d354844b9: inc    %ecx               ;*iadd
                   │││ ││ │││                                                ; - mat_mul.MyBenchmark::loop_ikj@121 (line 54)
  0.08%            │││ ││ │││  0x00007f2d354844bb: mov    %ecx,0x18(%r10)    ; OopMap{r13=Oop xmm0=Oop off=191}
                   │││ ││ │││                                                ;*goto
                   │││ ││ │││                                                ; - mat_mul.MyBenchmark::loop_ikj@125 (line 54)
  0.41%    0.23%   │││ ││ │││  0x00007f2d354844bf: test   %eax,0x172ccb3b(%rip)        # 0x00007f2d4c751000
                   │││ ││ │││                                                ;*goto
                   │││ ││ │││                                                ; - mat_mul.MyBenchmark::loop_ikj@125 (line 54)
                   │││ ││ │││                                                ;   {poll}
                   │││ ││ │││  0x00007f2d354844c5: cmp    %edi,%ecx
                   │││ ╰│ │││  0x00007f2d354844c7: jge    0x00007f2d35484453
  0.41%    0.23%   │││  │ │││  0x00007f2d354844c9: mov    %r14d,%edi
  0.02%            │││  │ │││  0x00007f2d354844cc: mov    %r11d,%r14d        ;*getfield N
                   │││  │ │││                                                ; - mat_mul.MyBenchmark::loop_ikj@60 (line 56)
  0.37%    0.39%   ││↘  │ │││  0x00007f2d354844cf: vmovq  %xmm0,%r10
  0.04%            ││   │ │││  0x00007f2d354844d4: mov    0x28(%r10),%r10d   ;*getfield shm
                   ││   │ │││                                                ; - mat_mul.MyBenchmark::loop_ikj@34 (line 55)
  0.55%    0.47%   ││   │ │││  0x00007f2d354844d8: mov    0xc(%r12,%r10,8),%ebp  ; implicit exception: dispatches to 0x00007f2d354846d5
  0.04%    0.04%   ││   │ │││  0x00007f2d354844dd: cmp    %ebp,%r9d
                   ││   │ │││  0x00007f2d354844e0: jae    0x00007f2d35484658
  0.31%    0.51%   ││   │ │││  0x00007f2d354844e6: lea    (%r12,%r10,8),%rax
  0.02%    0.02%   ││   │ │││  0x00007f2d354844ea: mov    0x10(%rax,%r9,4),%r10d  ;*aaload
                   ││   │ │││                                                ; - mat_mul.MyBenchmark::loop_ikj@41 (line 55)
  0.29%    0.49%   ││   │ │││  0x00007f2d354844ef: mov    0xc(%r12,%r10,8),%r8d  ; implicit exception: dispatches to 0x00007f2d354846e9
  0.31%    0.16%   ││   │ │││  0x00007f2d354844f4: cmp    %r8d,%ecx
                   ││   │ │││  0x00007f2d354844f7: jae    0x00007f2d3548467d  ;*iaload
                   ││   │ │││                                                ; - mat_mul.MyBenchmark::loop_ikj@46 (line 55)
  0.31%    0.25%   ││   │ │││  0x00007f2d354844fd: vmovq  %xmm0,%r11
                   ││   │ │││  0x00007f2d35484502: movl   $0x0,0x14(%r11)    ;*putfield j
                   ││   │ │││                                                ; - mat_mul.MyBenchmark::loop_ikj@52 (line 56)
  0.27%    0.16%   ││   │ │││  0x00007f2d3548450a: shl    $0x3,%r10
  0.04%    0.02%   ││   │ │││  0x00007f2d3548450e: mov    0x10(%r10,%rcx,4),%edx  ;*iaload
                   ││   │ │││                                                ; - mat_mul.MyBenchmark::loop_ikj@46 (line 55)
  0.66%    0.60%   ││   │ │││  0x00007f2d35484513: mov    %edx,0x20(%r11)    ;*putfield aik
                   ││   │ │││                                                ; - mat_mul.MyBenchmark::loop_ikj@47 (line 55)
                   ││   │ │││  0x00007f2d35484517: test   %edi,%edi
                   ││   ╰ │││  0x00007f2d35484519: jle    0x00007f2d354844b0  ;*if_icmpge
                   ││     │││                                                ; - mat_mul.MyBenchmark::loop_ikj@63 (line 56)
  0.37%    0.10%   ││     │││  0x00007f2d3548451b: mov    0x2c(%r11),%r11d   ;*getfield res
                   ││     │││                                                ; - mat_mul.MyBenchmark::loop_ikj@67 (line 57)
                   ││     │││  0x00007f2d3548451f: mov    0xc(%r12,%r11,8),%r10d  ; implicit exception: dispatches to 0x00007f2d354846a1
  0.58%    0.27%   ││     │││  0x00007f2d35484524: cmp    %r10d,%r9d
                   ││     │││  0x00007f2d35484527: jae    0x00007f2d354846a1  ;*aload_0
                   ││     │││                                                ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
                   ││     │││  0x00007f2d3548452d: lea    (%r12,%r11,8),%r10
  0.31%    0.20%   ││     │││  0x00007f2d35484531: mov    0x10(%r10,%r9,4),%esi  ;*aaload
                   ││     │││                                                ; - mat_mul.MyBenchmark::loop_ikj@74 (line 57)
                   ││     │││  0x00007f2d35484536: mov    0xc(%r12,%rsi,8),%r10d  ;*iaload
                   ││     │││                                                ; - mat_mul.MyBenchmark::loop_ikj@80 (line 57)
                   ││     │││                                                ; implicit exception: dispatches to 0x00007f2d354846a1
  1.03%    0.92%   ││     │││  0x00007f2d3548453b: test   %r10d,%r10d
                   ││     │││  0x00007f2d3548453e: jbe    0x00007f2d354846a1
  0.33%    0.47%   ││     │││  0x00007f2d35484544: mov    %edi,%r11d
  0.16%    0.18%   ││     │││  0x00007f2d35484547: dec    %r11d
           0.02%   ││     │││  0x00007f2d3548454a: cmp    %r10d,%r11d
                   ││     │││  0x00007f2d3548454d: jae    0x00007f2d354846a1
  0.55%    0.66%   ││     │││  0x00007f2d35484553: cmp    %ebp,%ecx
                   ││     │││  0x00007f2d35484555: jae    0x00007f2d354846a1  ;*aload_0
                   ││     │││                                                ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
                   ││     │││  0x00007f2d3548455b: mov    0x10(%rax,%rcx,4),%eax  ;*aaload
                   ││     │││                                                ; - mat_mul.MyBenchmark::loop_ikj@93 (line 57)
  0.19%    0.14%   ││     │││  0x00007f2d3548455f: mov    0xc(%r12,%rax,8),%r8d  ;*iaload
                   ││     │││                                                ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
                   ││     │││                                                ; implicit exception: dispatches to 0x00007f2d354846a1
           0.02%   ││     │││  0x00007f2d35484564: test   %r8d,%r8d
                   ││     │││  0x00007f2d35484567: jbe    0x00007f2d354846a1
  0.55%    0.80%   ││     │││  0x00007f2d3548456d: cmp    %r8d,%r11d
                   ││     │││  0x00007f2d35484570: jae    0x00007f2d354846a1  ;*aload_0
                   ││     │││                                                ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
                   ││     │││  0x00007f2d35484576: mov    %edx,%r10d
  0.16%    0.25%   ││     │││  0x00007f2d35484579: imul   0x10(%r12,%rax,8),%r10d
           0.02%   ││     │││  0x00007f2d3548457f: vmovq  %xmm0,%r11
  0.60%    0.59%   ││     │││  0x00007f2d35484584: movl   $0x1,0x14(%r11)    ;*putfield j
                   ││     │││                                                ; - mat_mul.MyBenchmark::loop_ikj@109 (line 56)
           0.02%   ││     │││  0x00007f2d3548458c: mov    0x10(%r12,%rsi,8),%r11d  ;*iaload
                   ││     │││                                                ; - mat_mul.MyBenchmark::loop_ikj@80 (line 57)
  0.14%    0.33%   ││     │││  0x00007f2d35484591: add    %r11d,%r10d
  0.04%    0.04%   ││     │││  0x00007f2d35484594: mov    %r10d,0x10(%r12,%rsi,8)  ;*iastore
                   ││     │││                                                ; - mat_mul.MyBenchmark::loop_ikj@101 (line 57)
  0.90%    1.03%   ││     │││  0x00007f2d35484599: lea    (%r12,%rsi,8),%r11
                   ││     │││  0x00007f2d3548459d: shl    $0x3,%rax
  0.18%    0.06%   ││     │││  0x00007f2d354845a1: mov    %edi,%r10d
                   ││     │││  0x00007f2d354845a4: add    $0xfffffffffffffffd,%r10d
  0.66%    0.78%   ││     │││  0x00007f2d354845a8: cmp    %r10d,%edi
                   ││     │││  0x00007f2d354845ab: cmovl  %ebx,%r10d
  0.21%    0.23%   ││     │││  0x00007f2d354845af: cmp    $0x1,%r10d
                   ││     │││  0x00007f2d354845b3: jle    0x00007f2d354846b9
                   ││     │││  0x00007f2d354845b9: mov    $0x1,%esi
  0.58%    0.98%   ││     │││  0x00007f2d354845be: xchg   %ax,%ax            ;*aload_0
                   ││     │││                                                ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
  0.47%    0.31%   ││    ↗│││  0x00007f2d354845c0: mov    0x10(%rax,%rsi,4),%r8d  ;*iaload
                   ││    ││││                                                ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
  3.70%    3.02%   ││    ││││  0x00007f2d354845c5: imul   %edx,%r8d
  0.21%    0.18%   ││    ││││  0x00007f2d354845c9: add    %r8d,0x10(%r11,%rsi,4)  ;*iastore
                   ││    ││││                                                ; - mat_mul.MyBenchmark::loop_ikj@101 (line 57)
 12.34%    9.86%   ││    ││││  0x00007f2d354845ce: movslq %esi,%rbp
  0.10%    0.02%   ││    ││││  0x00007f2d354845d1: mov    0x14(%rax,%rbp,4),%r8d  ;*iaload
                   ││    ││││                                                ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
  7.08%    6.03%   ││    ││││  0x00007f2d354845d6: imul   %edx,%r8d
  0.43%    0.68%   ││    ││││  0x00007f2d354845da: add    %r8d,0x14(%r11,%rbp,4)  ;*iastore
                   ││    ││││                                                ; - mat_mul.MyBenchmark::loop_ikj@101 (line 57)
 10.90%   13.78%   ││    ││││  0x00007f2d354845df: mov    0x18(%rax,%rbp,4),%r8d  ;*iaload
                   ││    ││││                                                ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
  0.35%    0.37%   ││    ││││  0x00007f2d354845e4: imul   %edx,%r8d
  3.78%    5.37%   ││    ││││  0x00007f2d354845e8: add    %r8d,0x18(%r11,%rbp,4)  ;*iastore
                   ││    ││││                                                ; - mat_mul.MyBenchmark::loop_ikj@101 (line 57)
  7.15%   11.36%   ││    ││││  0x00007f2d354845ed: mov    0x1c(%rax,%rbp,4),%r8d  ;*iaload
                   ││    ││││                                                ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
  3.51%    3.01%   ││    ││││  0x00007f2d354845f2: imul   %edx,%r8d
  0.02%    0.06%   ││    ││││  0x00007f2d354845f6: add    %r8d,0x1c(%r11,%rbp,4)  ;*iastore
                   ││    ││││                                                ; - mat_mul.MyBenchmark::loop_ikj@101 (line 57)
 11.03%   10.09%   ││    ││││  0x00007f2d354845fb: mov    %esi,%ebp
  0.06%    0.10%   ││    ││││  0x00007f2d354845fd: add    $0x2,%ebp
  6.80%    5.66%   ││    ││││  0x00007f2d35484600: vmovq  %xmm0,%r8
  0.33%    0.23%   ││    ││││  0x00007f2d35484605: mov    %ebp,0x14(%r8)     ;*putfield j
                   ││    ││││                                                ; - mat_mul.MyBenchmark::loop_ikj@109 (line 56)
  3.70%    3.22%   ││    ││││  0x00007f2d35484609: add    $0x4,%esi          ;*iadd
                   ││    ││││                                                ; - mat_mul.MyBenchmark::loop_ikj@108 (line 56)
           0.06%   ││    ││││  0x00007f2d3548460c: mov    %esi,0x14(%r8)     ;*putfield j
                   ││    ││││                                                ; - mat_mul.MyBenchmark::loop_ikj@109 (line 56)
  7.27%    6.91%   ││    ││││  0x00007f2d35484610: cmp    %r10d,%esi
                   ││    ╰│││  0x00007f2d35484613: jl     0x00007f2d354845c0  ;*if_icmpge
                   ││     │││                                                ; - mat_mul.MyBenchmark::loop_ikj@63 (line 56)
  0.06%            ││     │││  0x00007f2d35484615: cmp    %edi,%esi
                   ││     ╰││  0x00007f2d35484617: jl     0x00007f2d35484490
                   ││      ╰│  0x00007f2d3548461d: jmpq   0x00007f2d354844ad
                   │↘       │  0x00007f2d35484622: mov    0xc(%r10),%r11d    ;*getfield N
                   │        │                                                ; - mat_mul.MyBenchmark::loop_ikj@26 (line 54)
                   │        ╰  0x00007f2d35484626: jmpq   0x00007f2d35484456  ;*if_icmpge
                   │                                                         ; - mat_mul.MyBenchmark::loop_ikj@13 (line 53)
                   ↘           0x00007f2d3548462b: vmovq  %xmm0,%r10
                               0x00007f2d35484630: mov    0x2c(%r10),%ebp    ;*getfield res
                                                                             ; - mat_mul.MyBenchmark::loop_ikj@143 (line 61)
....................................................................................................
 97.17%   97.31%  <total for region 1>

....[Hottest Regions]...............................................................................
 97.17%   97.31%         C2, level 4  mat_mul.MyBenchmark::loop_ikj, version 572 (435 bytes) 
  0.51%    0.49%              kernel  [unknown] (0 bytes) 
  0.18%                       kernel  [unknown] (8 bytes) 
  0.10%    0.04%              kernel  [unknown] (0 bytes) 
  0.06%    0.04%              kernel  [unknown] (0 bytes) 
  0.06%    0.04%        libc-2.12.so  _IO_fwrite (0 bytes) 
  0.04%                       kernel  [unknown] (0 bytes) 
  0.04%    0.06%              kernel  [unknown] (30 bytes) 
  0.04%    0.02%              kernel  [unknown] (32 bytes) 
  0.04%    0.06%              kernel  [unknown] (10 bytes) 
  0.04%    0.08%              kernel  [unknown] (25 bytes) 
  0.04%                       kernel  [unknown] (0 bytes) 
  0.04%    0.04%              kernel  [unknown] (6 bytes) 
  0.04%    0.02%              kernel  [unknown] (5 bytes) 
  0.04%                 libc-2.12.so  vfprintf (3 bytes) 
  0.04%                 libc-2.12.so  __strlen_sse42 (3 bytes) 
  0.04%    0.06%           libjvm.so  outputStream::update_position (8 bytes) 
  0.04%                    libjvm.so  outputStream::do_vsnprintf (0 bytes) 
  0.04%    0.10%           libjvm.so  RelocIterator::initialize (56 bytes) 
  0.04%    0.06%           libjvm.so  xmlTextStream::write (19 bytes) 
  1.36%    1.60%  <...other 139 warm regions...>
....................................................................................................
 99.98%  100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 97.17%   97.31%         C2, level 4  mat_mul.MyBenchmark::loop_ikj, version 572 
  1.73%    1.74%              kernel  [unknown] 
  0.08%    0.04%        libc-2.12.so  _IO_fwrite 
  0.08%            libhsdis-amd64.so  print_insn 
  0.08%    0.12%        libc-2.12.so  vfprintf 
  0.04%    0.02%        libc-2.12.so  __strlen_sse42 
  0.04%    0.06%           libjvm.so  outputStream::update_position 
  0.04%    0.02%           libjvm.so  decode_env::handle_event 
  0.04%                    libjvm.so  outputStream::do_vsnprintf 
  0.04%    0.12%           libjvm.so  RelocIterator::initialize 
  0.04%    0.06%           libjvm.so  xmlTextStream::write 
  0.04%                 libc-2.12.so  _IO_fflush 
  0.02%                 libc-2.12.so  free@plt 
  0.02%                    libjvm.so  Monitor::IWait 
  0.02%                    libjvm.so  os::javaTimeNanos 
  0.02%                  interpreter  method entry point (kind = accessor)  
  0.02%                    libjvm.so  LIRGenerator::state_for 
  0.02%                  C1, level 3  java.util.AbstractMap::&lt;init&gt;, version 469 
  0.02%                  C1, level 3  java.io.ObjectOutputStream$BlockDataOutputStream::writeByte, version 549 
  0.02%                  interpreter  ifeq  153 ifeq  
  0.41%           <...other 21 warm methods...>
....................................................................................................
 99.98%   99.47%  <totals>

....[Distribution by Source]........................................................................
 97.17%   97.31%         C2, level 4
  1.73%    1.74%              kernel
  0.45%    0.51%           libjvm.so
  0.31%    0.43%        libc-2.12.so
  0.10%                  interpreter
  0.10%            libhsdis-amd64.so
  0.06%    0.02%  libpthread-2.12.so
  0.06%                  C1, level 3
....................................................................................................
 99.98%  100.00%  <totals>

PrintAssembly processed: 178606 total address lines.
Perf output processed (skipped 7.963 seconds):
 Column 1: cycles (5104 events)
 Column 2: instructions (5101 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
C2, level 4, mat_mul.MyBenchmark::loop_ikj, version 577 (475 bytes) 

                               0x00007f60c5484b00: jle    0x00007f60c5484ceb  ;*if_icmpge
                                                                             ; - mat_mul.MyBenchmark::loop_ikj@13 (line 53)
                               0x00007f60c5484b06: mov    $0x80000000,%ebx
                               0x00007f60c5484b0b: mov    %edi,%r14d
                               0x00007f60c5484b0e: xor    %r9d,%r9d
                  ╭            0x00007f60c5484b11: jmp    0x00007f60c5484b37
                  │    ↗       0x00007f60c5484b13: mov    %r14d,%edi         ;*getfield N
                  │    │                                                     ; - mat_mul.MyBenchmark::loop_ikj@10 (line 53)
                  │    │    ↗  0x00007f60c5484b16: inc    %r9d               ;*iadd
                  │    │    │                                                ; - mat_mul.MyBenchmark::loop_ikj@134 (line 53)
  0.02%    0.02%  │    │    │  0x00007f60c5484b19: vmovq  %xmm0,%r10
                  │    │    │  0x00007f60c5484b1e: mov    %r9d,0x10(%r10)    ; OopMap{r13=Oop xmm0=Oop off=98}
                  │    │    │                                                ;*goto
                  │    │    │                                                ; - mat_mul.MyBenchmark::loop_ikj@138 (line 53)
  0.08%    0.04%  │    │    │  0x00007f60c5484b22: test   %eax,0x172f44d8(%rip)        # 0x00007f60dc779000
                  │    │    │                                                ;*goto
                  │    │    │                                                ; - mat_mul.MyBenchmark::loop_ikj@138 (line 53)
                  │    │    │                                                ;   {poll}
  0.08%    0.06%  │    │    │  0x00007f60c5484b28: cmp    %edi,%r9d
                  │╭   │    │  0x00007f60c5484b2b: jge    0x00007f60c5484ceb
                  ││   │    │  0x00007f60c5484b31: mov    %r14d,%edi
                  ││   │    │  0x00007f60c5484b34: mov    %r11d,%r14d        ;*aload_0
                  ││   │    │                                                ; - mat_mul.MyBenchmark::loop_ikj@16 (line 54)
                  ↘│   │    │  0x00007f60c5484b37: vmovq  %xmm0,%r10
                   │   │    │  0x00007f60c5484b3c: movl   $0x0,0x18(%r10)    ;*putfield k
                   │   │    │                                                ; - mat_mul.MyBenchmark::loop_ikj@18 (line 54)
  0.02%    0.04%   │   │    │  0x00007f60c5484b44: test   %edi,%edi
                   │╭  │    │  0x00007f60c5484b46: jle    0x00007f60c5484ce2  ;*if_icmpge
                   ││  │    │                                                ; - mat_mul.MyBenchmark::loop_ikj@29 (line 54)
                   ││  │    │  0x00007f60c5484b4c: xor    %ecx,%ecx
                   ││╭ │    │  0x00007f60c5484b4e: jmp    0x00007f60c5484b8f  ;*aload_0
                   │││ │    │                                                ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
  0.61%    0.37%   │││↗│  ↗ │  0x00007f60c5484b50: mov    0x10(%rax,%rsi,4),%r10d  ;*iaload
                   │││││  │ │                                                ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
  0.29%    0.37%   │││││  │ │  0x00007f60c5484b55: imul   %edx,%r10d
  0.57%    0.76%   │││││  │ │  0x00007f60c5484b59: add    %r10d,0x10(%r11,%rsi,4)  ;*iastore
                   │││││  │ │                                                ; - mat_mul.MyBenchmark::loop_ikj@101 (line 57)
  1.39%    1.59%   │││││  │ │  0x00007f60c5484b5e: inc    %esi               ;*iadd
                   │││││  │ │                                                ; - mat_mul.MyBenchmark::loop_ikj@108 (line 56)
  0.78%    0.73%   │││││  │ │  0x00007f60c5484b60: vmovq  %xmm0,%r10
  0.29%    0.29%   │││││  │ │  0x00007f60c5484b65: mov    %esi,0x14(%r10)    ;*putfield j
                   │││││  │ │                                                ; - mat_mul.MyBenchmark::loop_ikj@109 (line 56)
  0.67%    0.61%   │││││  │ │  0x00007f60c5484b69: cmp    %edi,%esi
                   │││╰│  │ │  0x00007f60c5484b6b: jl     0x00007f60c5484b50  ;*aload_0
                   │││ │  │ │                                                ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
  0.04%    0.02%   │││ │  │↗│  0x00007f60c5484b6d: mov    %r14d,%edi
  0.33%    0.20%   │││ │↗ │││  0x00007f60c5484b70: vmovq  %xmm0,%r10
                   │││ ││ │││  0x00007f60c5484b75: mov    0xc(%r10),%r11d    ;*getfield N
                   │││ ││ │││                                                ; - mat_mul.MyBenchmark::loop_ikj@26 (line 54)
  0.29%    0.37%   │││ ││ │││  0x00007f60c5484b79: inc    %ecx               ;*iadd
                   │││ ││ │││                                                ; - mat_mul.MyBenchmark::loop_ikj@121 (line 54)
  0.02%    0.04%   │││ ││ │││  0x00007f60c5484b7b: mov    %ecx,0x18(%r10)    ; OopMap{r13=Oop xmm0=Oop off=191}
                   │││ ││ │││                                                ;*goto
                   │││ ││ │││                                                ; - mat_mul.MyBenchmark::loop_ikj@125 (line 54)
  0.49%    0.20%   │││ ││ │││  0x00007f60c5484b7f: test   %eax,0x172f447b(%rip)        # 0x00007f60dc779000
                   │││ ││ │││                                                ;*goto
                   │││ ││ │││                                                ; - mat_mul.MyBenchmark::loop_ikj@125 (line 54)
                   │││ ││ │││                                                ;   {poll}
  0.02%    0.02%   │││ ││ │││  0x00007f60c5484b85: cmp    %edi,%ecx
                   │││ ╰│ │││  0x00007f60c5484b87: jge    0x00007f60c5484b13
  0.31%    0.29%   │││  │ │││  0x00007f60c5484b89: mov    %r14d,%edi
  0.04%            │││  │ │││  0x00007f60c5484b8c: mov    %r11d,%r14d        ;*getfield N
                   │││  │ │││                                                ; - mat_mul.MyBenchmark::loop_ikj@60 (line 56)
  0.25%    0.41%   ││↘  │ │││  0x00007f60c5484b8f: vmovq  %xmm0,%r10
  0.02%    0.04%   ││   │ │││  0x00007f60c5484b94: mov    0x28(%r10),%r10d   ;*getfield shm
                   ││   │ │││                                                ; - mat_mul.MyBenchmark::loop_ikj@34 (line 55)
  0.33%    0.55%   ││   │ │││  0x00007f60c5484b98: mov    0xc(%r12,%r10,8),%ebp  ; implicit exception: dispatches to 0x00007f60c5484d95
  0.08%    0.04%   ││   │ │││  0x00007f60c5484b9d: cmp    %ebp,%r9d
                   ││   │ │││  0x00007f60c5484ba0: jae    0x00007f60c5484d18
  0.25%    0.53%   ││   │ │││  0x00007f60c5484ba6: lea    (%r12,%r10,8),%rax
  0.04%            ││   │ │││  0x00007f60c5484baa: mov    0x10(%rax,%r9,4),%r10d  ;*aaload
                   ││   │ │││                                                ; - mat_mul.MyBenchmark::loop_ikj@41 (line 55)
  0.35%    0.74%   ││   │ │││  0x00007f60c5484baf: mov    0xc(%r12,%r10,8),%r8d  ; implicit exception: dispatches to 0x00007f60c5484da9
  0.24%    0.14%   ││   │ │││  0x00007f60c5484bb4: cmp    %r8d,%ecx
                   ││   │ │││  0x00007f60c5484bb7: jae    0x00007f60c5484d3d  ;*iaload
                   ││   │ │││                                                ; - mat_mul.MyBenchmark::loop_ikj@46 (line 55)
  0.53%    0.37%   ││   │ │││  0x00007f60c5484bbd: vmovq  %xmm0,%r11
                   ││   │ │││  0x00007f60c5484bc2: movl   $0x0,0x14(%r11)    ;*putfield j
                   ││   │ │││                                                ; - mat_mul.MyBenchmark::loop_ikj@52 (line 56)
  0.53%    0.24%   ││   │ │││  0x00007f60c5484bca: shl    $0x3,%r10
  0.02%            ││   │ │││  0x00007f60c5484bce: mov    0x10(%r10,%rcx,4),%edx  ;*iaload
                   ││   │ │││                                                ; - mat_mul.MyBenchmark::loop_ikj@46 (line 55)
  0.37%    0.63%   ││   │ │││  0x00007f60c5484bd3: mov    %edx,0x20(%r11)    ;*putfield aik
                   ││   │ │││                                                ; - mat_mul.MyBenchmark::loop_ikj@47 (line 55)
  0.02%    0.02%   ││   │ │││  0x00007f60c5484bd7: test   %edi,%edi
                   ││   ╰ │││  0x00007f60c5484bd9: jle    0x00007f60c5484b70  ;*if_icmpge
                   ││     │││                                                ; - mat_mul.MyBenchmark::loop_ikj@63 (line 56)
  0.39%    0.24%   ││     │││  0x00007f60c5484bdb: mov    0x2c(%r11),%r11d   ;*getfield res
                   ││     │││                                                ; - mat_mul.MyBenchmark::loop_ikj@67 (line 57)
  0.02%    0.04%   ││     │││  0x00007f60c5484bdf: mov    0xc(%r12,%r11,8),%r10d  ; implicit exception: dispatches to 0x00007f60c5484d61
  0.41%    0.24%   ││     │││  0x00007f60c5484be4: cmp    %r10d,%r9d
                   ││     │││  0x00007f60c5484be7: jae    0x00007f60c5484d61  ;*aload_0
                   ││     │││                                                ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
           0.02%   ││     │││  0x00007f60c5484bed: lea    (%r12,%r11,8),%r10
  0.27%    0.24%   ││     │││  0x00007f60c5484bf1: mov    0x10(%r10,%r9,4),%esi  ;*aaload
                   ││     │││                                                ; - mat_mul.MyBenchmark::loop_ikj@74 (line 57)
  0.02%            ││     │││  0x00007f60c5484bf6: mov    0xc(%r12,%rsi,8),%r10d  ;*iaload
                   ││     │││                                                ; - mat_mul.MyBenchmark::loop_ikj@80 (line 57)
                   ││     │││                                                ; implicit exception: dispatches to 0x00007f60c5484d61
  0.96%    0.76%   ││     │││  0x00007f60c5484bfb: test   %r10d,%r10d
                   ││     │││  0x00007f60c5484bfe: jbe    0x00007f60c5484d61
  0.24%    0.35%   ││     │││  0x00007f60c5484c04: mov    %edi,%r11d
  0.20%    0.04%   ││     │││  0x00007f60c5484c07: dec    %r11d
                   ││     │││  0x00007f60c5484c0a: cmp    %r10d,%r11d
                   ││     │││  0x00007f60c5484c0d: jae    0x00007f60c5484d61
  0.51%    0.57%   ││     │││  0x00007f60c5484c13: cmp    %ebp,%ecx
                   ││     │││  0x00007f60c5484c15: jae    0x00007f60c5484d61  ;*aload_0
                   ││     │││                                                ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
  0.02%            ││     │││  0x00007f60c5484c1b: mov    0x10(%rax,%rcx,4),%eax  ;*aaload
                   ││     │││                                                ; - mat_mul.MyBenchmark::loop_ikj@93 (line 57)
  0.14%    0.14%   ││     │││  0x00007f60c5484c1f: mov    0xc(%r12,%rax,8),%r8d  ;*iaload
                   ││     │││                                                ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
                   ││     │││                                                ; implicit exception: dispatches to 0x00007f60c5484d61
                   ││     │││  0x00007f60c5484c24: test   %r8d,%r8d
                   ││     │││  0x00007f60c5484c27: jbe    0x00007f60c5484d61
  0.76%    0.74%   ││     │││  0x00007f60c5484c2d: cmp    %r8d,%r11d
                   ││     │││  0x00007f60c5484c30: jae    0x00007f60c5484d61  ;*aload_0
                   ││     │││                                                ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
                   ││     │││  0x00007f60c5484c36: mov    %edx,%r10d
  0.25%    0.25%   ││     │││  0x00007f60c5484c39: imul   0x10(%r12,%rax,8),%r10d
           0.02%   ││     │││  0x00007f60c5484c3f: vmovq  %xmm0,%r11
  0.53%    0.67%   ││     │││  0x00007f60c5484c44: movl   $0x1,0x14(%r11)    ;*putfield j
                   ││     │││                                                ; - mat_mul.MyBenchmark::loop_ikj@109 (line 56)
                   ││     │││  0x00007f60c5484c4c: mov    0x10(%r12,%rsi,8),%r11d  ;*iaload
                   ││     │││                                                ; - mat_mul.MyBenchmark::loop_ikj@80 (line 57)
  0.22%    0.29%   ││     │││  0x00007f60c5484c51: add    %r11d,%r10d
           0.04%   ││     │││  0x00007f60c5484c54: mov    %r10d,0x10(%r12,%rsi,8)  ;*iastore
                   ││     │││                                                ; - mat_mul.MyBenchmark::loop_ikj@101 (line 57)
  0.82%    1.29%   ││     │││  0x00007f60c5484c59: lea    (%r12,%rsi,8),%r11
                   ││     │││  0x00007f60c5484c5d: shl    $0x3,%rax
  0.16%    0.14%   ││     │││  0x00007f60c5484c61: mov    %edi,%r10d
  0.02%    0.02%   ││     │││  0x00007f60c5484c64: add    $0xfffffffffffffffd,%r10d
  0.67%    0.69%   ││     │││  0x00007f60c5484c68: cmp    %r10d,%edi
                   ││     │││  0x00007f60c5484c6b: cmovl  %ebx,%r10d
  0.22%    0.33%   ││     │││  0x00007f60c5484c6f: cmp    $0x1,%r10d
                   ││     │││  0x00007f60c5484c73: jle    0x00007f60c5484d79
  0.02%    0.02%   ││     │││  0x00007f60c5484c79: mov    $0x1,%esi
  0.63%    0.67%   ││     │││  0x00007f60c5484c7e: xchg   %ax,%ax            ;*aload_0
                   ││     │││                                                ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
  0.37%    0.29%   ││    ↗│││  0x00007f60c5484c80: mov    0x10(%rax,%rsi,4),%r8d  ;*iaload
                   ││    ││││                                                ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
  4.43%    2.78%   ││    ││││  0x00007f60c5484c85: imul   %edx,%r8d
  0.24%    0.16%   ││    ││││  0x00007f60c5484c89: add    %r8d,0x10(%r11,%rsi,4)  ;*iastore
                   ││    ││││                                                ; - mat_mul.MyBenchmark::loop_ikj@101 (line 57)
 12.54%   10.64%   ││    ││││  0x00007f60c5484c8e: movslq %esi,%rbp
  0.04%    0.10%   ││    ││││  0x00007f60c5484c91: mov    0x14(%rax,%rbp,4),%r8d  ;*iaload
                   ││    ││││                                                ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
  7.62%    5.96%   ││    ││││  0x00007f60c5484c96: imul   %edx,%r8d
  0.49%    0.35%   ││    ││││  0x00007f60c5484c9a: add    %r8d,0x14(%r11,%rbp,4)  ;*iastore
                   ││    ││││                                                ; - mat_mul.MyBenchmark::loop_ikj@101 (line 57)
 10.78%   14.13%   ││    ││││  0x00007f60c5484c9f: mov    0x18(%rax,%rbp,4),%r8d  ;*iaload
                   ││    ││││                                                ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
  0.31%    0.59%   ││    ││││  0x00007f60c5484ca4: imul   %edx,%r8d
  3.23%    5.35%   ││    ││││  0x00007f60c5484ca8: add    %r8d,0x18(%r11,%rbp,4)  ;*iastore
                   ││    ││││                                                ; - mat_mul.MyBenchmark::loop_ikj@101 (line 57)
  7.70%   11.51%   ││    ││││  0x00007f60c5484cad: mov    0x1c(%rax,%rbp,4),%r8d  ;*iaload
                   ││    ││││                                                ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
  3.39%    2.27%   ││    ││││  0x00007f60c5484cb2: imul   %edx,%r8d
  0.06%    0.02%   ││    ││││  0x00007f60c5484cb6: add    %r8d,0x1c(%r11,%rbp,4)  ;*iastore
                   ││    ││││                                                ; - mat_mul.MyBenchmark::loop_ikj@101 (line 57)
 11.21%   10.45%   ││    ││││  0x00007f60c5484cbb: mov    %esi,%ebp
  0.08%    0.04%   ││    ││││  0x00007f60c5484cbd: add    $0x2,%ebp
  7.25%    5.65%   ││    ││││  0x00007f60c5484cc0: vmovq  %xmm0,%r8
  0.37%    0.45%   ││    ││││  0x00007f60c5484cc5: mov    %ebp,0x14(%r8)     ;*putfield j
                   ││    ││││                                                ; - mat_mul.MyBenchmark::loop_ikj@109 (line 56)
  3.94%    2.84%   ││    ││││  0x00007f60c5484cc9: add    $0x4,%esi          ;*iadd
                   ││    ││││                                                ; - mat_mul.MyBenchmark::loop_ikj@108 (line 56)
  0.02%    0.08%   ││    ││││  0x00007f60c5484ccc: mov    %esi,0x14(%r8)     ;*putfield j
                   ││    ││││                                                ; - mat_mul.MyBenchmark::loop_ikj@109 (line 56)
  6.68%    6.57%   ││    ││││  0x00007f60c5484cd0: cmp    %r10d,%esi
                   ││    ╰│││  0x00007f60c5484cd3: jl     0x00007f60c5484c80  ;*if_icmpge
                   ││     │││                                                ; - mat_mul.MyBenchmark::loop_ikj@63 (line 56)
  0.04%    0.02%   ││     │││  0x00007f60c5484cd5: cmp    %edi,%esi
                   ││     ╰││  0x00007f60c5484cd7: jl     0x00007f60c5484b50
                   ││      ╰│  0x00007f60c5484cdd: jmpq   0x00007f60c5484b6d
                   │↘       │  0x00007f60c5484ce2: mov    0xc(%r10),%r11d    ;*getfield N
                   │        │                                                ; - mat_mul.MyBenchmark::loop_ikj@26 (line 54)
                   │        ╰  0x00007f60c5484ce6: jmpq   0x00007f60c5484b16  ;*if_icmpge
                   │                                                         ; - mat_mul.MyBenchmark::loop_ikj@13 (line 53)
                   ↘           0x00007f60c5484ceb: vmovq  %xmm0,%r10
                               0x00007f60c5484cf0: mov    0x2c(%r10),%ebp    ;*getfield res
                                                                             ; - mat_mul.MyBenchmark::loop_ikj@143 (line 61)
  0.02%                        0x00007f60c5484cf4: mov    %r13,%rsi
                               0x00007f60c5484cf7: test   %rsi,%rsi
                               0x00007f60c5484cfa: je     0x00007f60c5484d83  ;*if_icmpge
                                                                             ; - mat_mul.MyBenchmark::loop_ikj@13 (line 53)
                               0x00007f60c5484d00: mov    %rbp,%rdx
                               0x00007f60c5484d03: shl    $0x3,%rdx
                               0x00007f60c5484d07: callq  0x00007f60c5046020  ; OopMap{off=588}
                                                                             ;*invokevirtual consume
                                                                             ; - mat_mul.MyBenchmark::loop_ikj@146 (line 61)
                                                                             ;   {optimized virtual_call}
....................................................................................................
 97.65%   97.78%  <total for region 1>

....[Hottest Regions]...............................................................................
 97.65%   97.78%         C2, level 4  mat_mul.MyBenchmark::loop_ikj, version 577 (475 bytes) 
  0.14%    0.12%              kernel  [unknown] (0 bytes) 
  0.08%    0.02%           libjvm.so  xmlTextStream::write (7 bytes) 
  0.06%    0.02%        libc-2.12.so  _IO_default_xsputn (21 bytes) 
  0.04%                       kernel  [unknown] (11 bytes) 
  0.04%                       kernel  [unknown] (21 bytes) 
  0.04%                       kernel  [unknown] (17 bytes) 
  0.04%                       kernel  [unknown] (2 bytes) 
  0.04%    0.02%              kernel  [unknown] (6 bytes) 
  0.04%                       kernel  [unknown] (31 bytes) 
  0.04%                 libc-2.12.so  _IO_fwrite (0 bytes) 
  0.04%                 libc-2.12.so  _IO_file_sync@@GLIBC_2.2.5 (30 bytes) 
  0.04%    0.04%        libc-2.12.so  __strlen_sse42 (46 bytes) 
  0.04%                  interpreter  lconst_1  10 lconst_1  (11 bytes) 
  0.02%                       kernel  [unknown] (0 bytes) 
  0.02%    0.02%              kernel  [unknown] (6 bytes) 
  0.02%                       kernel  [unknown] (0 bytes) 
  0.02%                       kernel  [unknown] (0 bytes) 
  0.02%                       kernel  [unknown] (0 bytes) 
  0.02%    0.02%              kernel  [unknown] (15 bytes) 
  1.57%    1.94%  <...other 148 warm regions...>
....................................................................................................
100.00%   99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 97.65%   97.78%         C2, level 4  mat_mul.MyBenchmark::loop_ikj, version 577 
  1.27%    1.22%              kernel  [unknown] 
  0.10%    0.04%        libc-2.12.so  _IO_default_xsputn 
  0.08%    0.02%           libjvm.so  xmlTextStream::write 
  0.06%    0.02%        libc-2.12.so  _IO_fwrite 
  0.06%    0.02%         interpreter  invokevirtual  182 invokevirtual  
  0.04%                  interpreter  lconst_1  10 lconst_1  
  0.04%    0.04%   libhsdis-amd64.so  print_insn 
  0.04%    0.04%        libc-2.12.so  __strlen_sse42 
  0.04%                 libc-2.12.so  _IO_file_sync@@GLIBC_2.2.5 
  0.04%                 libc-2.12.so  _IO_old_init 
  0.04%    0.02%           libjvm.so  RelocIterator::initialize 
  0.04%    0.04%        libc-2.12.so  vfprintf 
  0.02%                    libjvm.so  SpaceManager::allocate 
  0.02%    0.08%           libjvm.so  fileStream::write 
  0.02%                    libjvm.so  jni_IsAssignableFrom 
  0.02%    0.04%  libpthread-2.12.so  [unknown] 
  0.02%    0.02%           libjvm.so  BlockBegin::iterate_preorder 
  0.02%                  interpreter  method entry point (kind = zerolocals)  
  0.02%                    libjvm.so  CodeBuffer::finalize_oop_references 
  0.37%    0.10%  <...other 19 warm methods...>
....................................................................................................
100.00%   99.47%  <totals>

....[Distribution by Source]........................................................................
 97.65%   97.78%         C2, level 4
  1.27%    1.22%              kernel
  0.43%    0.35%        libc-2.12.so
  0.37%    0.49%           libjvm.so
  0.16%    0.06%         interpreter
  0.06%    0.04%   libhsdis-amd64.so
  0.04%    0.04%  libpthread-2.12.so
  0.02%                  C1, level 3
....................................................................................................
100.00%   99.98%  <totals>



# JMH version: 1.19
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /opt/jdk1.8.0_131/jre/bin/java
# VM options: -XX:+UnlockDiagnosticVMOptions -XX:CompileCommand=print,MyBenchmark
# Warmup: 3 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: mat_mul.MyBenchmark.loop_ikj
# Parameters: (N_str = 128)

# Run progress: 60.00% complete, ETA 00:02:08
# Fork: 1 of 2
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 0.001 s/op
# Warmup Iteration   2: 0.001 s/op
# Warmup Iteration   3: 0.001 s/op
Iteration   1: 0.001 s/op
Iteration   2: 0.001 s/op
Iteration   3: 0.001 s/op
Iteration   4: 0.001 s/op
Iteration   5: 0.001 s/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 65.00% complete, ETA 00:01:51
# Fork: 2 of 2
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 0.001 s/op
# Warmup Iteration   2: 0.001 s/op
# Warmup Iteration   3: 0.001 s/op
Iteration   1: 0.001 s/op
Iteration   2: 0.001 s/op
Iteration   3: 0.001 s/op
Iteration   4: 0.001 s/op
Iteration   5: 0.001 s/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "mat_mul.MyBenchmark.loop_ikj":
  0.001 ±(99.9%) 0.001 s/op [Average]
  (min, avg, max) = (0.001, 0.001, 0.001), stdev = 0.001
  CI (99.9%): [0.001, 0.001] (assumes normal distribution)

Secondary result "mat_mul.MyBenchmark.loop_ikj:·asm":
PrintAssembly processed: 178207 total address lines.
Perf output processed (skipped 8.058 seconds):
 Column 1: cycles (5156 events)
 Column 2: instructions (5160 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
C2, level 4, mat_mul.MyBenchmark::loop_ikj, version 574 (429 bytes) 

                            0x00007ff6ed485316: inc    %r9d               ;*iadd
                                                                          ; - mat_mul.MyBenchmark::loop_ikj@134 (line 53)
                            0x00007ff6ed485319: vmovq  %xmm0,%r10
                            0x00007ff6ed48531e: mov    %r9d,0x10(%r10)    ; OopMap{r13=Oop xmm0=Oop off=98}
                                                                          ;*goto
                                                                          ; - mat_mul.MyBenchmark::loop_ikj@138 (line 53)
                            0x00007ff6ed485322: test   %eax,0x16793cd8(%rip)        # 0x00007ff703c19000
                                                                          ;*goto
                                                                          ; - mat_mul.MyBenchmark::loop_ikj@138 (line 53)
                                                                          ;   {poll}
  0.02%                     0x00007ff6ed485328: cmp    %edi,%r9d
                  ╭         0x00007ff6ed48532b: jge    0x00007ff6ed4854eb
                  │         0x00007ff6ed485331: mov    %r14d,%edi
                  │         0x00007ff6ed485334: mov    %r11d,%r14d        ;*aload_0
                  │                                                       ; - mat_mul.MyBenchmark::loop_ikj@16 (line 54)
                  │         0x00007ff6ed485337: vmovq  %xmm0,%r10
  0.04%           │         0x00007ff6ed48533c: movl   $0x0,0x18(%r10)    ;*putfield k
                  │                                                       ; - mat_mul.MyBenchmark::loop_ikj@18 (line 54)
                  │         0x00007ff6ed485344: test   %edi,%edi
                  │╭        0x00007ff6ed485346: jle    0x00007ff6ed4854e2  ;*if_icmpge
                  ││                                                      ; - mat_mul.MyBenchmark::loop_ikj@29 (line 54)
                  ││        0x00007ff6ed48534c: xor    %ecx,%ecx
                  ││╭       0x00007ff6ed48534e: jmp    0x00007ff6ed48538f  ;*aload_0
                  │││                                                     ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
  0.45%    0.27%  │││↗  ↗   0x00007ff6ed485350: mov    0x10(%rax,%rsi,4),%r10d  ;*iaload
                  ││││  │                                                 ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
  0.25%    0.29%  ││││  │   0x00007ff6ed485355: imul   %edx,%r10d
  0.52%    0.45%  ││││  │   0x00007ff6ed485359: add    %r10d,0x10(%r11,%rsi,4)  ;*iastore
                  ││││  │                                                 ; - mat_mul.MyBenchmark::loop_ikj@101 (line 57)
  0.70%    0.87%  ││││  │   0x00007ff6ed48535e: inc    %esi               ;*iadd
                  ││││  │                                                 ; - mat_mul.MyBenchmark::loop_ikj@108 (line 56)
  0.54%    0.23%  ││││  │   0x00007ff6ed485360: vmovq  %xmm0,%r10
  0.23%    0.10%  ││││  │   0x00007ff6ed485365: mov    %esi,0x14(%r10)    ;*putfield j
                  ││││  │                                                 ; - mat_mul.MyBenchmark::loop_ikj@109 (line 56)
  0.35%    0.33%  ││││  │   0x00007ff6ed485369: cmp    %edi,%esi
                  │││╰  │   0x00007ff6ed48536b: jl     0x00007ff6ed485350  ;*aload_0
                  │││   │                                                 ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
                  │││   │↗  0x00007ff6ed48536d: mov    %r14d,%edi
  0.19%    0.08%  │││ ↗ ││  0x00007ff6ed485370: vmovq  %xmm0,%r10
                  │││ │ ││  0x00007ff6ed485375: mov    0xc(%r10),%r11d    ;*getfield N
                  │││ │ ││                                                ; - mat_mul.MyBenchmark::loop_ikj@26 (line 54)
  0.08%    0.19%  │││ │ ││  0x00007ff6ed485379: inc    %ecx               ;*iadd
                  │││ │ ││                                                ; - mat_mul.MyBenchmark::loop_ikj@121 (line 54)
           0.06%  │││ │ ││  0x00007ff6ed48537b: mov    %ecx,0x18(%r10)    ; OopMap{r13=Oop xmm0=Oop off=191}
                  │││ │ ││                                                ;*goto
                  │││ │ ││                                                ; - mat_mul.MyBenchmark::loop_ikj@125 (line 54)
  0.19%    0.12%  │││ │ ││  0x00007ff6ed48537f: test   %eax,0x16793c7b(%rip)        # 0x00007ff703c19000
                  │││ │ ││                                                ;*goto
                  │││ │ ││                                                ; - mat_mul.MyBenchmark::loop_ikj@125 (line 54)
                  │││ │ ││                                                ;   {poll}
                  │││ │ ││  0x00007ff6ed485385: cmp    %edi,%ecx
                  │││ │ ││  0x00007ff6ed485387: jge    0x00007ff6ed485313
  0.16%    0.08%  │││ │ ││  0x00007ff6ed485389: mov    %r14d,%edi
           0.02%  │││ │ ││  0x00007ff6ed48538c: mov    %r11d,%r14d        ;*getfield N
                  │││ │ ││                                                ; - mat_mul.MyBenchmark::loop_ikj@60 (line 56)
  0.27%    0.27%  ││↘ │ ││  0x00007ff6ed48538f: vmovq  %xmm0,%r10
  0.02%           ││  │ ││  0x00007ff6ed485394: mov    0x28(%r10),%r10d   ;*getfield shm
                  ││  │ ││                                                ; - mat_mul.MyBenchmark::loop_ikj@34 (line 55)
  0.23%    0.27%  ││  │ ││  0x00007ff6ed485398: mov    0xc(%r12,%r10,8),%ebp  ; implicit exception: dispatches to 0x00007ff6ed485595
  0.02%    0.06%  ││  │ ││  0x00007ff6ed48539d: cmp    %ebp,%r9d
                  ││  │ ││  0x00007ff6ed4853a0: jae    0x00007ff6ed485518
  0.27%    0.37%  ││  │ ││  0x00007ff6ed4853a6: lea    (%r12,%r10,8),%rax
  0.02%           ││  │ ││  0x00007ff6ed4853aa: mov    0x10(%rax,%r9,4),%r10d  ;*aaload
                  ││  │ ││                                                ; - mat_mul.MyBenchmark::loop_ikj@41 (line 55)
  0.19%    0.35%  ││  │ ││  0x00007ff6ed4853af: mov    0xc(%r12,%r10,8),%r8d  ; implicit exception: dispatches to 0x00007ff6ed4855a9
  0.02%    0.08%  ││  │ ││  0x00007ff6ed4853b4: cmp    %r8d,%ecx
                  ││  │ ││  0x00007ff6ed4853b7: jae    0x00007ff6ed48553d  ;*iaload
                  ││  │ ││                                                ; - mat_mul.MyBenchmark::loop_ikj@46 (line 55)
  0.33%    0.08%  ││  │ ││  0x00007ff6ed4853bd: vmovq  %xmm0,%r11
  0.02%           ││  │ ││  0x00007ff6ed4853c2: movl   $0x0,0x14(%r11)    ;*putfield j
                  ││  │ ││                                                ; - mat_mul.MyBenchmark::loop_ikj@52 (line 56)
  0.12%    0.08%  ││  │ ││  0x00007ff6ed4853ca: shl    $0x3,%r10
  0.06%    0.02%  ││  │ ││  0x00007ff6ed4853ce: mov    0x10(%r10,%rcx,4),%edx  ;*iaload
                  ││  │ ││                                                ; - mat_mul.MyBenchmark::loop_ikj@46 (line 55)
  0.27%    0.43%  ││  │ ││  0x00007ff6ed4853d3: mov    %edx,0x20(%r11)    ;*putfield aik
                  ││  │ ││                                                ; - mat_mul.MyBenchmark::loop_ikj@47 (line 55)
  0.02%    0.04%  ││  │ ││  0x00007ff6ed4853d7: test   %edi,%edi
                  ││  ╰ ││  0x00007ff6ed4853d9: jle    0x00007ff6ed485370  ;*if_icmpge
                  ││    ││                                                ; - mat_mul.MyBenchmark::loop_ikj@63 (line 56)
  0.08%    0.12%  ││    ││  0x00007ff6ed4853db: mov    0x2c(%r11),%r11d   ;*getfield res
                  ││    ││                                                ; - mat_mul.MyBenchmark::loop_ikj@67 (line 57)
  0.06%           ││    ││  0x00007ff6ed4853df: mov    0xc(%r12,%r11,8),%r10d  ; implicit exception: dispatches to 0x00007ff6ed485561
  0.35%    0.21%  ││    ││  0x00007ff6ed4853e4: cmp    %r10d,%r9d
                  ││    ││  0x00007ff6ed4853e7: jae    0x00007ff6ed485561  ;*aload_0
                  ││    ││                                                ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
  0.04%           ││    ││  0x00007ff6ed4853ed: lea    (%r12,%r11,8),%r10
  0.12%    0.14%  ││    ││  0x00007ff6ed4853f1: mov    0x10(%r10,%r9,4),%esi  ;*aaload
                  ││    ││                                                ; - mat_mul.MyBenchmark::loop_ikj@74 (line 57)
                  ││    ││  0x00007ff6ed4853f6: mov    0xc(%r12,%rsi,8),%r10d  ;*iaload
                  ││    ││                                                ; - mat_mul.MyBenchmark::loop_ikj@80 (line 57)
                  ││    ││                                                ; implicit exception: dispatches to 0x00007ff6ed485561
  0.41%    0.35%  ││    ││  0x00007ff6ed4853fb: test   %r10d,%r10d
                  ││    ││  0x00007ff6ed4853fe: jbe    0x00007ff6ed485561
  0.10%    0.27%  ││    ││  0x00007ff6ed485404: mov    %edi,%r11d
  0.04%    0.10%  ││    ││  0x00007ff6ed485407: dec    %r11d
  0.04%    0.02%  ││    ││  0x00007ff6ed48540a: cmp    %r10d,%r11d
                  ││    ││  0x00007ff6ed48540d: jae    0x00007ff6ed485561
  0.35%    0.43%  ││    ││  0x00007ff6ed485413: cmp    %ebp,%ecx
                  ││    ││  0x00007ff6ed485415: jae    0x00007ff6ed485561  ;*aload_0
                  ││    ││                                                ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
  0.02%           ││    ││  0x00007ff6ed48541b: mov    0x10(%rax,%rcx,4),%eax  ;*aaload
                  ││    ││                                                ; - mat_mul.MyBenchmark::loop_ikj@93 (line 57)
  0.04%    0.08%  ││    ││  0x00007ff6ed48541f: mov    0xc(%r12,%rax,8),%r8d  ;*iaload
                  ││    ││                                                ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
                  ││    ││                                                ; implicit exception: dispatches to 0x00007ff6ed485561
                  ││    ││  0x00007ff6ed485424: test   %r8d,%r8d
                  ││    ││  0x00007ff6ed485427: jbe    0x00007ff6ed485561
  0.29%    0.37%  ││    ││  0x00007ff6ed48542d: cmp    %r8d,%r11d
                  ││    ││  0x00007ff6ed485430: jae    0x00007ff6ed485561  ;*aload_0
                  ││    ││                                                ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
                  ││    ││  0x00007ff6ed485436: mov    %edx,%r10d
  0.04%    0.21%  ││    ││  0x00007ff6ed485439: imul   0x10(%r12,%rax,8),%r10d
  0.04%    0.08%  ││    ││  0x00007ff6ed48543f: vmovq  %xmm0,%r11
  0.29%    0.54%  ││    ││  0x00007ff6ed485444: movl   $0x1,0x14(%r11)    ;*putfield j
                  ││    ││                                                ; - mat_mul.MyBenchmark::loop_ikj@109 (line 56)
                  ││    ││  0x00007ff6ed48544c: mov    0x10(%r12,%rsi,8),%r11d  ;*iaload
                  ││    ││                                                ; - mat_mul.MyBenchmark::loop_ikj@80 (line 57)
  0.10%    0.14%  ││    ││  0x00007ff6ed485451: add    %r11d,%r10d
  0.04%    0.04%  ││    ││  0x00007ff6ed485454: mov    %r10d,0x10(%r12,%rsi,8)  ;*iastore
                  ││    ││                                                ; - mat_mul.MyBenchmark::loop_ikj@101 (line 57)
  0.50%    0.47%  ││    ││  0x00007ff6ed485459: lea    (%r12,%rsi,8),%r11
           0.02%  ││    ││  0x00007ff6ed48545d: shl    $0x3,%rax
  0.08%    0.02%  ││    ││  0x00007ff6ed485461: mov    %edi,%r10d
                  ││    ││  0x00007ff6ed485464: add    $0xfffffffffffffffd,%r10d
  0.37%    0.27%  ││    ││  0x00007ff6ed485468: cmp    %r10d,%edi
           0.02%  ││    ││  0x00007ff6ed48546b: cmovl  %ebx,%r10d
  0.10%    0.04%  ││    ││  0x00007ff6ed48546f: cmp    $0x1,%r10d
                  ││    ││  0x00007ff6ed485473: jle    0x00007ff6ed485579
                  ││    ││  0x00007ff6ed485479: mov    $0x1,%esi
  0.31%    0.45%  ││    ││  0x00007ff6ed48547e: xchg   %ax,%ax            ;*aload_0
                  ││    ││                                                ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
  0.74%    0.56%  ││   ↗││  0x00007ff6ed485480: mov    0x10(%rax,%rsi,4),%r8d  ;*iaload
                  ││   │││                                                ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
  4.58%    3.97%  ││   │││  0x00007ff6ed485485: imul   %edx,%r8d
  0.39%    0.35%  ││   │││  0x00007ff6ed485489: add    %r8d,0x10(%r11,%rsi,4)  ;*iastore
                  ││   │││                                                ; - mat_mul.MyBenchmark::loop_ikj@101 (line 57)
 11.99%   10.81%  ││   │││  0x00007ff6ed48548e: movslq %esi,%rbp
  0.17%    0.14%  ││   │││  0x00007ff6ed485491: mov    0x14(%rax,%rbp,4),%r8d  ;*iaload
                  ││   │││                                                ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
  6.65%    5.33%  ││   │││  0x00007ff6ed485496: imul   %edx,%r8d
  0.76%    0.79%  ││   │││  0x00007ff6ed48549a: add    %r8d,0x14(%r11,%rbp,4)  ;*iastore
                  ││   │││                                                ; - mat_mul.MyBenchmark::loop_ikj@101 (line 57)
 12.26%   14.84%  ││   │││  0x00007ff6ed48549f: mov    0x18(%rax,%rbp,4),%r8d  ;*iaload
                  ││   │││                                                ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
  1.07%    0.83%  ││   │││  0x00007ff6ed4854a4: imul   %edx,%r8d
  4.23%    6.01%  ││   │││  0x00007ff6ed4854a8: add    %r8d,0x18(%r11,%rbp,4)  ;*iastore
                  ││   │││                                                ; - mat_mul.MyBenchmark::loop_ikj@101 (line 57)
  8.07%   12.36%  ││   │││  0x00007ff6ed4854ad: mov    0x1c(%rax,%rbp,4),%r8d  ;*iaload
                  ││   │││                                                ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
  4.27%    3.04%  ││   │││  0x00007ff6ed4854b2: imul   %edx,%r8d
  0.17%    0.16%  ││   │││  0x00007ff6ed4854b6: add    %r8d,0x1c(%r11,%rbp,4)  ;*iastore
                  ││   │││                                                ; - mat_mul.MyBenchmark::loop_ikj@101 (line 57)
 12.16%   11.07%  ││   │││  0x00007ff6ed4854bb: mov    %esi,%ebp
  0.06%    0.19%  ││   │││  0x00007ff6ed4854bd: add    $0x2,%ebp
  7.16%    5.70%  ││   │││  0x00007ff6ed4854c0: vmovq  %xmm0,%r8
  1.05%    0.54%  ││   │││  0x00007ff6ed4854c5: mov    %ebp,0x14(%r8)     ;*putfield j
                  ││   │││                                                ; - mat_mul.MyBenchmark::loop_ikj@109 (line 56)
  4.65%    3.24%  ││   │││  0x00007ff6ed4854c9: add    $0x4,%esi          ;*iadd
                  ││   │││                                                ; - mat_mul.MyBenchmark::loop_ikj@108 (line 56)
  0.12%    0.16%  ││   │││  0x00007ff6ed4854cc: mov    %esi,0x14(%r8)     ;*putfield j
                  ││   │││                                                ; - mat_mul.MyBenchmark::loop_ikj@109 (line 56)
  6.73%    7.13%  ││   │││  0x00007ff6ed4854d0: cmp    %r10d,%esi
                  ││   ╰││  0x00007ff6ed4854d3: jl     0x00007ff6ed485480  ;*if_icmpge
                  ││    ││                                                ; - mat_mul.MyBenchmark::loop_ikj@63 (line 56)
  0.04%           ││    ││  0x00007ff6ed4854d5: cmp    %edi,%esi
                  ││    ╰│  0x00007ff6ed4854d7: jl     0x00007ff6ed485350
                  ││     ╰  0x00007ff6ed4854dd: jmpq   0x00007ff6ed48536d
                  │↘        0x00007ff6ed4854e2: mov    0xc(%r10),%r11d    ;*getfield N
                  │                                                       ; - mat_mul.MyBenchmark::loop_ikj@26 (line 54)
                  │         0x00007ff6ed4854e6: jmpq   0x00007ff6ed485316  ;*if_icmpge
                  │                                                       ; - mat_mul.MyBenchmark::loop_ikj@13 (line 53)
                  ↘         0x00007ff6ed4854eb: vmovq  %xmm0,%r10
                            0x00007ff6ed4854f0: mov    0x2c(%r10),%ebp    ;*getfield res
                                                                          ; - mat_mul.MyBenchmark::loop_ikj@143 (line 61)
....................................................................................................
 96.66%   96.71%  <total for region 1>

....[Hottest Regions]...............................................................................
 96.66%   96.71%         C2, level 4  mat_mul.MyBenchmark::loop_ikj, version 574 (429 bytes) 
  0.87%    0.85%              kernel  [unknown] (0 bytes) 
  0.12%    0.04%              kernel  [unknown] (0 bytes) 
  0.10%    0.06%           libjvm.so  outputStream::update_position (38 bytes) 
  0.08%                       kernel  [unknown] (0 bytes) 
  0.08%                       kernel  [unknown] (0 bytes) 
  0.06%    0.02%              kernel  [unknown] (9 bytes) 
  0.04%    0.02%              kernel  [unknown] (0 bytes) 
  0.04%                       kernel  [unknown] (1 bytes) 
  0.04%                       kernel  [unknown] (13 bytes) 
  0.04%                       kernel  [unknown] (7 bytes) 
  0.04%                       kernel  [unknown] (0 bytes) 
  0.04%                       kernel  [unknown] (0 bytes) 
  0.04%    0.10%              kernel  [unknown] (24 bytes) 
  0.04%    0.02%        libc-2.12.so  _IO_default_xsputn (18 bytes) 
  0.04%                    libjvm.so  Method::line_number_from_bci (18 bytes) 
  0.02%                       kernel  [unknown] (0 bytes) 
  0.02%    0.02%              kernel  [unknown] (9 bytes) 
  0.02%                       kernel  [unknown] (0 bytes) 
  0.02%                       kernel  [unknown] (0 bytes) 
  1.59%    2.17%  <...other 159 warm regions...>
....................................................................................................
 99.98%  100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 96.66%   96.71%         C2, level 4  mat_mul.MyBenchmark::loop_ikj, version 574 
  2.21%    2.11%              kernel  [unknown] 
  0.10%    0.06%           libjvm.so  outputStream::update_position 
  0.10%    0.14%        libc-2.12.so  vfprintf 
  0.06%    0.02%        libc-2.12.so  _IO_default_xsputn 
  0.04%    0.06%        libc-2.12.so  _IO_fwrite 
  0.04%                    libjvm.so  Method::line_number_from_bci 
  0.04%                  C1, level 3  org.openjdk.jmh.infra.Blackhole::consume, version 575 
  0.04%                    libjvm.so  defaultStream::write 
  0.04%    0.02%           libjvm.so  RelocIterator::initialize 
  0.02%                    libjvm.so  nmethod::cleanup_inline_caches 
  0.02%                    libjvm.so  ImplicitExceptionTable::at 
  0.02%                    libjvm.so  LIR_List::metadata2reg 
  0.02%    0.02%           libjvm.so  LinearScan::split_child_at_op_id 
  0.02%                    libjvm.so  DebugInformationRecorder::describe_scope 
  0.02%                    libjvm.so  Dict::Insert 
  0.02%            libhsdis-amd64.so  print_insn 
  0.02%    0.02%   libhsdis-amd64.so  oappend 
  0.02%    0.02%  libpthread-2.12.so  [unknown] 
  0.02%                    libjvm.so  WatcherThread::sleep 
  0.47%    0.14%  <...other 24 warm methods...>
....................................................................................................
 99.98%   99.30%  <totals>

....[Distribution by Source]........................................................................
 96.66%   96.71%         C2, level 4
  2.21%    2.11%              kernel
  0.58%    0.64%           libjvm.so
  0.31%    0.41%        libc-2.12.so
  0.06%    0.06%   libhsdis-amd64.so
  0.06%                  C1, level 3
  0.04%    0.02%  libpthread-2.12.so
  0.04%    0.04%         interpreter
  0.02%                             
....................................................................................................
 99.98%  100.00%  <totals>

PrintAssembly processed: 177638 total address lines.
Perf output processed (skipped 7.870 seconds):
 Column 1: cycles (5172 events)
 Column 2: instructions (5173 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
C2, level 4, mat_mul.MyBenchmark::loop_ikj, version 575 (384 bytes) 

                                                                         ; - mat_mul.MyBenchmark::loop_ikj@16 (line 54)
                           0x00007f987cc202f7: vmovq  %xmm0,%r10
                           0x00007f987cc202fc: movl   $0x0,0x18(%r10)    ;*putfield k
                                                                         ; - mat_mul.MyBenchmark::loop_ikj@18 (line 54)
                           0x00007f987cc20304: test   %edi,%edi
                  ╭        0x00007f987cc20306: jle    0x00007f987cc204a2  ;*if_icmpge
                  │                                                      ; - mat_mul.MyBenchmark::loop_ikj@29 (line 54)
                  │        0x00007f987cc2030c: xor    %ecx,%ecx
                  │╭       0x00007f987cc2030e: jmp    0x00007f987cc2034f  ;*aload_0
                  ││                                                     ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
  0.44%    0.33%  ││↗  ↗   0x00007f987cc20310: mov    0x10(%rax,%rsi,4),%r10d  ;*iaload
                  │││  │                                                 ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
  0.29%    0.19%  │││  │   0x00007f987cc20315: imul   %edx,%r10d
  0.37%    0.43%  │││  │   0x00007f987cc20319: add    %r10d,0x10(%r11,%rsi,4)  ;*iastore
                  │││  │                                                 ; - mat_mul.MyBenchmark::loop_ikj@101 (line 57)
  0.62%    0.79%  │││  │   0x00007f987cc2031e: inc    %esi               ;*iadd
                  │││  │                                                 ; - mat_mul.MyBenchmark::loop_ikj@108 (line 56)
  0.31%    0.31%  │││  │   0x00007f987cc20320: vmovq  %xmm0,%r10
  0.27%    0.10%  │││  │   0x00007f987cc20325: mov    %esi,0x14(%r10)    ;*putfield j
                  │││  │                                                 ; - mat_mul.MyBenchmark::loop_ikj@109 (line 56)
  0.46%    0.50%  │││  │   0x00007f987cc20329: cmp    %edi,%esi
                  ││╰  │   0x00007f987cc2032b: jl     0x00007f987cc20310  ;*aload_0
                  ││   │                                                 ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
  0.02%           ││   │↗  0x00007f987cc2032d: mov    %r14d,%edi
  0.17%    0.15%  ││ ↗ ││  0x00007f987cc20330: vmovq  %xmm0,%r10
  0.02%           ││ │ ││  0x00007f987cc20335: mov    0xc(%r10),%r11d    ;*getfield N
                  ││ │ ││                                                ; - mat_mul.MyBenchmark::loop_ikj@26 (line 54)
  0.12%    0.14%  ││ │ ││  0x00007f987cc20339: inc    %ecx               ;*iadd
                  ││ │ ││                                                ; - mat_mul.MyBenchmark::loop_ikj@121 (line 54)
  0.02%           ││ │ ││  0x00007f987cc2033b: mov    %ecx,0x18(%r10)    ; OopMap{r13=Oop xmm0=Oop off=191}
                  ││ │ ││                                                ;*goto
                  ││ │ ││                                                ; - mat_mul.MyBenchmark::loop_ikj@125 (line 54)
  0.15%    0.10%  ││ │ ││  0x00007f987cc2033f: test   %eax,0x1473ecbb(%rip)        # 0x00007f989135f000
                  ││ │ ││                                                ;*goto
                  ││ │ ││                                                ; - mat_mul.MyBenchmark::loop_ikj@125 (line 54)
                  ││ │ ││                                                ;   {poll}
                  ││ │ ││  0x00007f987cc20345: cmp    %edi,%ecx
                  ││ │ ││  0x00007f987cc20347: jge    0x00007f987cc202d3
  0.17%    0.06%  ││ │ ││  0x00007f987cc20349: mov    %r14d,%edi
                  ││ │ ││  0x00007f987cc2034c: mov    %r11d,%r14d        ;*getfield N
                  ││ │ ││                                                ; - mat_mul.MyBenchmark::loop_ikj@60 (line 56)
  0.15%    0.31%  │↘ │ ││  0x00007f987cc2034f: vmovq  %xmm0,%r10
           0.02%  │  │ ││  0x00007f987cc20354: mov    0x28(%r10),%r10d   ;*getfield shm
                  │  │ ││                                                ; - mat_mul.MyBenchmark::loop_ikj@34 (line 55)
  0.33%    0.19%  │  │ ││  0x00007f987cc20358: mov    0xc(%r12,%r10,8),%ebp  ; implicit exception: dispatches to 0x00007f987cc20555
  0.02%    0.12%  │  │ ││  0x00007f987cc2035d: cmp    %ebp,%r9d
                  │  │ ││  0x00007f987cc20360: jae    0x00007f987cc204d8
  0.25%    0.17%  │  │ ││  0x00007f987cc20366: lea    (%r12,%r10,8),%rax
                  │  │ ││  0x00007f987cc2036a: mov    0x10(%rax,%r9,4),%r10d  ;*aaload
                  │  │ ││                                                ; - mat_mul.MyBenchmark::loop_ikj@41 (line 55)
  0.21%    0.23%  │  │ ││  0x00007f987cc2036f: mov    0xc(%r12,%r10,8),%r8d  ; implicit exception: dispatches to 0x00007f987cc20569
  0.14%    0.08%  │  │ ││  0x00007f987cc20374: cmp    %r8d,%ecx
                  │  │ ││  0x00007f987cc20377: jae    0x00007f987cc204fd  ;*iaload
                  │  │ ││                                                ; - mat_mul.MyBenchmark::loop_ikj@46 (line 55)
  0.27%    0.15%  │  │ ││  0x00007f987cc2037d: vmovq  %xmm0,%r11
  0.02%           │  │ ││  0x00007f987cc20382: movl   $0x0,0x14(%r11)    ;*putfield j
                  │  │ ││                                                ; - mat_mul.MyBenchmark::loop_ikj@52 (line 56)
  0.10%    0.06%  │  │ ││  0x00007f987cc2038a: shl    $0x3,%r10
  0.02%           │  │ ││  0x00007f987cc2038e: mov    0x10(%r10,%rcx,4),%edx  ;*iaload
                  │  │ ││                                                ; - mat_mul.MyBenchmark::loop_ikj@46 (line 55)
  0.17%    0.17%  │  │ ││  0x00007f987cc20393: mov    %edx,0x20(%r11)    ;*putfield aik
                  │  │ ││                                                ; - mat_mul.MyBenchmark::loop_ikj@47 (line 55)
  0.04%           │  │ ││  0x00007f987cc20397: test   %edi,%edi
                  │  ╰ ││  0x00007f987cc20399: jle    0x00007f987cc20330  ;*if_icmpge
                  │    ││                                                ; - mat_mul.MyBenchmark::loop_ikj@63 (line 56)
  0.14%    0.04%  │    ││  0x00007f987cc2039b: mov    0x2c(%r11),%r11d   ;*getfield res
                  │    ││                                                ; - mat_mul.MyBenchmark::loop_ikj@67 (line 57)
           0.02%  │    ││  0x00007f987cc2039f: mov    0xc(%r12,%r11,8),%r10d  ; implicit exception: dispatches to 0x00007f987cc20521
  0.27%    0.23%  │    ││  0x00007f987cc203a4: cmp    %r10d,%r9d
                  │    ││  0x00007f987cc203a7: jae    0x00007f987cc20521  ;*aload_0
                  │    ││                                                ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
  0.04%           │    ││  0x00007f987cc203ad: lea    (%r12,%r11,8),%r10
  0.17%    0.08%  │    ││  0x00007f987cc203b1: mov    0x10(%r10,%r9,4),%esi  ;*aaload
                  │    ││                                                ; - mat_mul.MyBenchmark::loop_ikj@74 (line 57)
  0.04%           │    ││  0x00007f987cc203b6: mov    0xc(%r12,%rsi,8),%r10d  ;*iaload
                  │    ││                                                ; - mat_mul.MyBenchmark::loop_ikj@80 (line 57)
                  │    ││                                                ; implicit exception: dispatches to 0x00007f987cc20521
  0.52%    0.41%  │    ││  0x00007f987cc203bb: test   %r10d,%r10d
                  │    ││  0x00007f987cc203be: jbe    0x00007f987cc20521
  0.15%    0.25%  │    ││  0x00007f987cc203c4: mov    %edi,%r11d
  0.14%    0.04%  │    ││  0x00007f987cc203c7: dec    %r11d
  0.02%    0.04%  │    ││  0x00007f987cc203ca: cmp    %r10d,%r11d
                  │    ││  0x00007f987cc203cd: jae    0x00007f987cc20521
  0.21%    0.17%  │    ││  0x00007f987cc203d3: cmp    %ebp,%ecx
                  │    ││  0x00007f987cc203d5: jae    0x00007f987cc20521  ;*aload_0
                  │    ││                                                ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
  0.04%           │    ││  0x00007f987cc203db: mov    0x10(%rax,%rcx,4),%eax  ;*aaload
                  │    ││                                                ; - mat_mul.MyBenchmark::loop_ikj@93 (line 57)
  0.06%    0.10%  │    ││  0x00007f987cc203df: mov    0xc(%r12,%rax,8),%r8d  ;*iaload
                  │    ││                                                ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
                  │    ││                                                ; implicit exception: dispatches to 0x00007f987cc20521
                  │    ││  0x00007f987cc203e4: test   %r8d,%r8d
                  │    ││  0x00007f987cc203e7: jbe    0x00007f987cc20521
  0.23%    0.44%  │    ││  0x00007f987cc203ed: cmp    %r8d,%r11d
                  │    ││  0x00007f987cc203f0: jae    0x00007f987cc20521  ;*aload_0
                  │    ││                                                ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
           0.02%  │    ││  0x00007f987cc203f6: mov    %edx,%r10d
  0.12%    0.10%  │    ││  0x00007f987cc203f9: imul   0x10(%r12,%rax,8),%r10d
           0.04%  │    ││  0x00007f987cc203ff: vmovq  %xmm0,%r11
  0.23%    0.50%  │    ││  0x00007f987cc20404: movl   $0x1,0x14(%r11)    ;*putfield j
                  │    ││                                                ; - mat_mul.MyBenchmark::loop_ikj@109 (line 56)
  0.04%    0.02%  │    ││  0x00007f987cc2040c: mov    0x10(%r12,%rsi,8),%r11d  ;*iaload
                  │    ││                                                ; - mat_mul.MyBenchmark::loop_ikj@80 (line 57)
  0.14%    0.12%  │    ││  0x00007f987cc20411: add    %r11d,%r10d
  0.04%    0.06%  │    ││  0x00007f987cc20414: mov    %r10d,0x10(%r12,%rsi,8)  ;*iastore
                  │    ││                                                ; - mat_mul.MyBenchmark::loop_ikj@101 (line 57)
  0.58%    0.50%  │    ││  0x00007f987cc20419: lea    (%r12,%rsi,8),%r11
           0.02%  │    ││  0x00007f987cc2041d: shl    $0x3,%rax
  0.12%    0.02%  │    ││  0x00007f987cc20421: mov    %edi,%r10d
                  │    ││  0x00007f987cc20424: add    $0xfffffffffffffffd,%r10d
  0.43%    0.33%  │    ││  0x00007f987cc20428: cmp    %r10d,%edi
                  │    ││  0x00007f987cc2042b: cmovl  %ebx,%r10d
  0.08%    0.06%  │    ││  0x00007f987cc2042f: cmp    $0x1,%r10d
                  │    ││  0x00007f987cc20433: jle    0x00007f987cc20539
                  │    ││  0x00007f987cc20439: mov    $0x1,%esi
  0.29%    0.46%  │    ││  0x00007f987cc2043e: xchg   %ax,%ax            ;*aload_0
                  │    ││                                                ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
  0.79%    0.56%  │   ↗││  0x00007f987cc20440: mov    0x10(%rax,%rsi,4),%r8d  ;*iaload
                  │   │││                                                ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
  4.81%    3.69%  │   │││  0x00007f987cc20445: imul   %edx,%r8d
  0.25%    0.23%  │   │││  0x00007f987cc20449: add    %r8d,0x10(%r11,%rsi,4)  ;*iastore
                  │   │││                                                ; - mat_mul.MyBenchmark::loop_ikj@101 (line 57)
 13.44%   10.88%  │   │││  0x00007f987cc2044e: movslq %esi,%rbp
  0.23%    0.08%  │   │││  0x00007f987cc20451: mov    0x14(%rax,%rbp,4),%r8d  ;*iaload
                  │   │││                                                ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
  6.15%    5.47%  │   │││  0x00007f987cc20456: imul   %edx,%r8d
  0.77%    0.77%  │   │││  0x00007f987cc2045a: add    %r8d,0x14(%r11,%rbp,4)  ;*iastore
                  │   │││                                                ; - mat_mul.MyBenchmark::loop_ikj@101 (line 57)
 11.43%   14.87%  │   │││  0x00007f987cc2045f: mov    0x18(%rax,%rbp,4),%r8d  ;*iaload
                  │   │││                                                ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
  1.04%    1.22%  │   │││  0x00007f987cc20464: imul   %edx,%r8d
  3.89%    7.21%  │   │││  0x00007f987cc20468: add    %r8d,0x18(%r11,%rbp,4)  ;*iastore
                  │   │││                                                ; - mat_mul.MyBenchmark::loop_ikj@101 (line 57)
  7.42%   11.87%  │   │││  0x00007f987cc2046d: mov    0x1c(%rax,%rbp,4),%r8d  ;*iaload
                  │   │││                                                ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
  4.91%    3.02%  │   │││  0x00007f987cc20472: imul   %edx,%r8d
  0.21%    0.14%  │   │││  0x00007f987cc20476: add    %r8d,0x1c(%r11,%rbp,4)  ;*iastore
                  │   │││                                                ; - mat_mul.MyBenchmark::loop_ikj@101 (line 57)
 11.35%   11.71%  │   │││  0x00007f987cc2047b: mov    %esi,%ebp
  0.21%    0.10%  │   │││  0x00007f987cc2047d: add    $0x2,%ebp
  7.33%    5.10%  │   │││  0x00007f987cc20480: vmovq  %xmm0,%r8
  0.72%    0.56%  │   │││  0x00007f987cc20485: mov    %ebp,0x14(%r8)     ;*putfield j
                  │   │││                                                ; - mat_mul.MyBenchmark::loop_ikj@109 (line 56)
  4.95%    3.13%  │   │││  0x00007f987cc20489: add    $0x4,%esi          ;*iadd
                  │   │││                                                ; - mat_mul.MyBenchmark::loop_ikj@108 (line 56)
  0.23%    0.10%  │   │││  0x00007f987cc2048c: mov    %esi,0x14(%r8)     ;*putfield j
                  │   │││                                                ; - mat_mul.MyBenchmark::loop_ikj@109 (line 56)
  7.08%    7.06%  │   │││  0x00007f987cc20490: cmp    %r10d,%esi
                  │   ╰││  0x00007f987cc20493: jl     0x00007f987cc20440  ;*if_icmpge
                  │    ││                                                ; - mat_mul.MyBenchmark::loop_ikj@63 (line 56)
                  │    ││  0x00007f987cc20495: cmp    %edi,%esi
                  │    ╰│  0x00007f987cc20497: jl     0x00007f987cc20310
                  │     ╰  0x00007f987cc2049d: jmpq   0x00007f987cc2032d
                  ↘        0x00007f987cc204a2: mov    0xc(%r10),%r11d    ;*getfield N
                                                                         ; - mat_mul.MyBenchmark::loop_ikj@26 (line 54)
                           0x00007f987cc204a6: jmpq   0x00007f987cc202d6  ;*if_icmpge
                                                                         ; - mat_mul.MyBenchmark::loop_ikj@13 (line 53)
....................................................................................................
 96.46%   96.42%  <total for region 1>

....[Hottest Regions]...............................................................................
 96.46%   96.42%         C2, level 4  mat_mul.MyBenchmark::loop_ikj, version 575 (384 bytes) 
  0.99%    0.97%              kernel  [unknown] (0 bytes) 
  0.12%    0.02%              kernel  [unknown] (0 bytes) 
  0.08%    0.02%              kernel  [unknown] (13 bytes) 
  0.08%                       kernel  [unknown] (0 bytes) 
  0.06%                       kernel  [unknown] (4 bytes) 
  0.06%    0.02%        libc-2.12.so  _IO_fwrite (0 bytes) 
  0.04%                       kernel  [unknown] (0 bytes) 
  0.04%    0.02%              kernel  [unknown] (29 bytes) 
  0.04%                       kernel  [unknown] (0 bytes) 
  0.04%    0.02%              kernel  [unknown] (53 bytes) 
  0.04%                       kernel  [unknown] (0 bytes) 
  0.04%    0.02%              kernel  [unknown] (0 bytes) 
  0.04%    0.02%              kernel  [unknown] (25 bytes) 
  0.04%                       kernel  [unknown] (0 bytes) 
  0.04%    0.04%           libjvm.so  xmlTextStream::write (19 bytes) 
  0.02%                       kernel  [unknown] (0 bytes) 
  0.02%    0.02%              kernel  [unknown] (26 bytes) 
  0.02%                       kernel  [unknown] (0 bytes) 
  0.02%                       kernel  [unknown] (0 bytes) 
  1.74%    2.42%  <...other 180 warm regions...>
....................................................................................................
100.00%  100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 96.46%   96.46%         C2, level 4  mat_mul.MyBenchmark::loop_ikj, version 575 
  2.46%    2.18%              kernel  [unknown] 
  0.06%    0.12%           libjvm.so  xmlTextStream::write 
  0.06%    0.08%        libc-2.12.so  _IO_fwrite 
  0.06%    0.06%        libc-2.12.so  vfprintf 
  0.04%                    libjvm.so  printf_to_env 
  0.04%                    libjvm.so  defaultStream::write 
  0.02%                    libjvm.so  ciMethod::has_option 
  0.02%    0.06%   libhsdis-amd64.so  print_insn 
  0.02%                    libjvm.so  CompileLog::see_tag 
  0.02%    0.02%           libjvm.so  ciInstanceKlass::get_field_by_offset 
  0.02%    0.02%        libc-2.12.so  _IO_file_xsputn@@GLIBC_2.2.5 
  0.02%                    libjvm.so  TypeRawPtr::hash 
  0.02%                    libjvm.so  Node::add_req 
  0.02%                  interpreter  _shouldnotreachhere  234 _shouldnotreachhere  
  0.02%                    libjvm.so  Monitor::ILock 
  0.02%                    libjvm.so  LinearScan::create_unhandled_lists 
  0.02%                 libc-2.12.so  free 
  0.02%    0.02%  libpthread-2.12.so  __pthread_enable_asynccancel 
  0.02%            libhsdis-amd64.so  get_valid_dis386 
  0.58%    0.17%  <...other 30 warm methods...>
....................................................................................................
100.00%   99.19%  <totals>

....[Distribution by Source]........................................................................
 96.46%   96.46%         C2, level 4
  2.46%    2.18%              kernel
  0.64%    0.66%           libjvm.so
  0.25%    0.48%        libc-2.12.so
  0.12%                  interpreter
  0.06%    0.08%   libhsdis-amd64.so
  0.02%    0.12%  libpthread-2.12.so
....................................................................................................
100.00%  100.00%  <totals>



# JMH version: 1.19
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /opt/jdk1.8.0_131/jre/bin/java
# VM options: -XX:+UnlockDiagnosticVMOptions -XX:CompileCommand=print,MyBenchmark
# Warmup: 3 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: mat_mul.MyBenchmark.loop_ikj
# Parameters: (N_str = 256)

# Run progress: 70.00% complete, ETA 00:01:34
# Fork: 1 of 2
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 0.010 s/op
# Warmup Iteration   2: 0.011 s/op
# Warmup Iteration   3: 0.011 s/op
Iteration   1: 0.011 s/op
Iteration   2: 0.011 s/op
Iteration   3: 0.011 s/op
Iteration   4: 0.011 s/op
Iteration   5: 0.011 s/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 75.00% complete, ETA 00:01:18
# Fork: 2 of 2
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 0.010 s/op
# Warmup Iteration   2: 0.011 s/op
# Warmup Iteration   3: 0.011 s/op
Iteration   1: 0.011 s/op
Iteration   2: 0.011 s/op
Iteration   3: 0.011 s/op
Iteration   4: 0.011 s/op
Iteration   5: 0.011 s/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "mat_mul.MyBenchmark.loop_ikj":
  0.011 ±(99.9%) 0.001 s/op [Average]
  (min, avg, max) = (0.011, 0.011, 0.011), stdev = 0.001
  CI (99.9%): [0.011, 0.011] (assumes normal distribution)

Secondary result "mat_mul.MyBenchmark.loop_ikj:·asm":
PrintAssembly processed: 180736 total address lines.
Perf output processed (skipped 7.946 seconds):
 Column 1: cycles (5142 events)
 Column 2: instructions (5141 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
C2, level 4, mat_mul.MyBenchmark::loop_ikj, version 584 (389 bytes) 

                                                                        ; - mat_mul.MyBenchmark::loop_ikj@16 (line 54)
                          0x00007fc0c5487877: vmovq  %xmm0,%r10
                          0x00007fc0c548787c: movl   $0x0,0x18(%r10)    ;*putfield k
                                                                        ; - mat_mul.MyBenchmark::loop_ikj@18 (line 54)
                          0x00007fc0c5487884: test   %edi,%edi
                          0x00007fc0c5487886: jle    0x00007fc0c5487a50  ;*if_icmpge
                                                                        ; - mat_mul.MyBenchmark::loop_ikj@29 (line 54)
                          0x00007fc0c548788c: xor    %ecx,%ecx
                  ╭       0x00007fc0c548788e: jmp    0x00007fc0c54878cf  ;*aload_0
                  │                                                     ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
  0.53%    0.51%  │↗  ↗   0x00007fc0c5487890: mov    0x10(%rax,%rsi,4),%r10d  ;*iaload
                  ││  │                                                 ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
  0.54%    0.56%  ││  │   0x00007fc0c5487895: imul   %edx,%r10d
  0.51%    0.41%  ││  │   0x00007fc0c5487899: add    %r10d,0x10(%r11,%rsi,4)  ;*iastore
                  ││  │                                                 ; - mat_mul.MyBenchmark::loop_ikj@101 (line 57)
  0.72%    0.78%  ││  │   0x00007fc0c548789e: inc    %esi               ;*iadd
                  ││  │                                                 ; - mat_mul.MyBenchmark::loop_ikj@108 (line 56)
  0.02%           ││  │   0x00007fc0c54878a0: vmovq  %xmm0,%r10
  0.02%           ││  │   0x00007fc0c54878a5: mov    %esi,0x14(%r10)    ;*putfield j
                  ││  │                                                 ; - mat_mul.MyBenchmark::loop_ikj@109 (line 56)
  0.19%    0.27%  ││  │   0x00007fc0c54878a9: cmp    %edi,%esi
                  │╰  │   0x00007fc0c54878ab: jl     0x00007fc0c5487890  ;*aload_0
                  │   │                                                 ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
                  │   │↗  0x00007fc0c54878ad: mov    %r14d,%edi
           0.04%  │ ↗ ││  0x00007fc0c54878b0: vmovq  %xmm0,%r10
                  │ │ ││  0x00007fc0c54878b5: mov    0xc(%r10),%r11d    ;*getfield N
                  │ │ ││                                                ; - mat_mul.MyBenchmark::loop_ikj@26 (line 54)
  0.27%    0.08%  │ │ ││  0x00007fc0c54878b9: inc    %ecx               ;*iadd
                  │ │ ││                                                ; - mat_mul.MyBenchmark::loop_ikj@121 (line 54)
           0.02%  │ │ ││  0x00007fc0c54878bb: mov    %ecx,0x18(%r10)    ; OopMap{r13=Oop xmm0=Oop off=191}
                  │ │ ││                                                ;*goto
                  │ │ ││                                                ; - mat_mul.MyBenchmark::loop_ikj@125 (line 54)
  0.04%    0.06%  │ │ ││  0x00007fc0c54878bf: test   %eax,0x176d173b(%rip)        # 0x00007fc0dcb59000
                  │ │ ││                                                ;*goto
                  │ │ ││                                                ; - mat_mul.MyBenchmark::loop_ikj@125 (line 54)
                  │ │ ││                                                ;   {poll}
  0.23%    0.10%  │ │ ││  0x00007fc0c54878c5: cmp    %edi,%ecx
                  │ │ ││  0x00007fc0c54878c7: jge    0x00007fc0c5487853
  0.02%           │ │ ││  0x00007fc0c54878c9: mov    %r14d,%edi
                  │ │ ││  0x00007fc0c54878cc: mov    %r11d,%r14d        ;*getfield N
                  │ │ ││                                                ; - mat_mul.MyBenchmark::loop_ikj@60 (line 56)
  0.08%           ↘ │ ││  0x00007fc0c54878cf: vmovq  %xmm0,%r10
  0.10%    0.12%    │ ││  0x00007fc0c54878d4: mov    0x28(%r10),%r10d   ;*getfield shm
                    │ ││                                                ; - mat_mul.MyBenchmark::loop_ikj@34 (line 55)
  0.02%             │ ││  0x00007fc0c54878d8: mov    0xc(%r12,%r10,8),%ebp  ; implicit exception: dispatches to 0x00007fc0c5487ad5
  0.06%    0.08%    │ ││  0x00007fc0c54878dd: cmp    %ebp,%r9d
                    │ ││  0x00007fc0c54878e0: jae    0x00007fc0c5487a59
  0.14%    0.06%    │ ││  0x00007fc0c54878e6: lea    (%r12,%r10,8),%rax
                    │ ││  0x00007fc0c54878ea: mov    0x10(%rax,%r9,4),%r10d  ;*aaload
                    │ ││                                                ; - mat_mul.MyBenchmark::loop_ikj@41 (line 55)
                    │ ││  0x00007fc0c54878ef: mov    0xc(%r12,%r10,8),%r8d  ; implicit exception: dispatches to 0x00007fc0c5487ae9
  0.84%    0.43%    │ ││  0x00007fc0c54878f4: cmp    %r8d,%ecx
                    │ ││  0x00007fc0c54878f7: jae    0x00007fc0c5487a7d  ;*iaload
                    │ ││                                                ; - mat_mul.MyBenchmark::loop_ikj@46 (line 55)
  0.21%    0.21%    │ ││  0x00007fc0c54878fd: vmovq  %xmm0,%r11
                    │ ││  0x00007fc0c5487902: movl   $0x0,0x14(%r11)    ;*putfield j
                    │ ││                                                ; - mat_mul.MyBenchmark::loop_ikj@52 (line 56)
                    │ ││  0x00007fc0c548790a: shl    $0x3,%r10
                    │ ││  0x00007fc0c548790e: mov    0x10(%r10,%rcx,4),%edx  ;*iaload
                    │ ││                                                ; - mat_mul.MyBenchmark::loop_ikj@46 (line 55)
  0.23%    0.19%    │ ││  0x00007fc0c5487913: mov    %edx,0x20(%r11)    ;*putfield aik
                    │ ││                                                ; - mat_mul.MyBenchmark::loop_ikj@47 (line 55)
  0.02%             │ ││  0x00007fc0c5487917: test   %edi,%edi
                    ╰ ││  0x00007fc0c5487919: jle    0x00007fc0c54878b0  ;*if_icmpge
                      ││                                                ; - mat_mul.MyBenchmark::loop_ikj@63 (line 56)
                      ││  0x00007fc0c548791b: mov    0x2c(%r11),%r11d   ;*getfield res
                      ││                                                ; - mat_mul.MyBenchmark::loop_ikj@67 (line 57)
                      ││  0x00007fc0c548791f: mov    0xc(%r12,%r11,8),%r10d  ; implicit exception: dispatches to 0x00007fc0c5487aa1
  0.10%    0.08%      ││  0x00007fc0c5487924: cmp    %r10d,%r9d
                      ││  0x00007fc0c5487927: jae    0x00007fc0c5487aa1  ;*aload_0
                      ││                                                ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
  0.02%    0.02%      ││  0x00007fc0c548792d: lea    (%r12,%r11,8),%r10
                      ││  0x00007fc0c5487931: mov    0x10(%r10,%r9,4),%esi  ;*aaload
                      ││                                                ; - mat_mul.MyBenchmark::loop_ikj@74 (line 57)
  0.04%               ││  0x00007fc0c5487936: mov    0xc(%r12,%rsi,8),%r10d  ;*iaload
                      ││                                                ; - mat_mul.MyBenchmark::loop_ikj@80 (line 57)
                      ││                                                ; implicit exception: dispatches to 0x00007fc0c5487aa1
  0.60%    0.74%      ││  0x00007fc0c548793b: test   %r10d,%r10d
                      ││  0x00007fc0c548793e: jbe    0x00007fc0c5487aa1
  0.08%    0.10%      ││  0x00007fc0c5487944: mov    %edi,%r11d
                      ││  0x00007fc0c5487947: dec    %r11d
                      ││  0x00007fc0c548794a: cmp    %r10d,%r11d
                      ││  0x00007fc0c548794d: jae    0x00007fc0c5487aa1
  0.10%    0.16%      ││  0x00007fc0c5487953: cmp    %ebp,%ecx
                      ││  0x00007fc0c5487955: jae    0x00007fc0c5487aa1  ;*aload_0
                      ││                                                ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
           0.02%      ││  0x00007fc0c548795b: mov    0x10(%rax,%rcx,4),%eax  ;*aaload
                      ││                                                ; - mat_mul.MyBenchmark::loop_ikj@93 (line 57)
  0.02%               ││  0x00007fc0c548795f: mov    0xc(%r12,%rax,8),%r8d  ;*iaload
                      ││                                                ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
                      ││                                                ; implicit exception: dispatches to 0x00007fc0c5487aa1
           0.02%      ││  0x00007fc0c5487964: test   %r8d,%r8d
                      ││  0x00007fc0c5487967: jbe    0x00007fc0c5487aa1
  0.19%    0.25%      ││  0x00007fc0c548796d: cmp    %r8d,%r11d
                      ││  0x00007fc0c5487970: jae    0x00007fc0c5487aa1  ;*aload_0
                      ││                                                ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
  0.02%               ││  0x00007fc0c5487976: mov    %edx,%r10d
                      ││  0x00007fc0c5487979: imul   0x10(%r12,%rax,8),%r10d
           0.02%      ││  0x00007fc0c548797f: vmovq  %xmm0,%r11
  0.18%    0.02%      ││  0x00007fc0c5487984: movl   $0x1,0x14(%r11)    ;*putfield j
                      ││                                                ; - mat_mul.MyBenchmark::loop_ikj@109 (line 56)
                      ││  0x00007fc0c548798c: mov    0x10(%r12,%rsi,8),%r11d  ;*iaload
                      ││                                                ; - mat_mul.MyBenchmark::loop_ikj@80 (line 57)
                      ││  0x00007fc0c5487991: add    %r11d,%r10d
  0.02%               ││  0x00007fc0c5487994: mov    %r10d,0x10(%r12,%rsi,8)  ;*iastore
                      ││                                                ; - mat_mul.MyBenchmark::loop_ikj@101 (line 57)
  0.18%    0.08%      ││  0x00007fc0c5487999: lea    (%r12,%rsi,8),%r11
                      ││  0x00007fc0c548799d: shl    $0x3,%rax
                      ││  0x00007fc0c54879a1: mov    %edi,%r10d
                      ││  0x00007fc0c54879a4: add    $0xfffffffffffffffd,%r10d
  0.14%    0.08%      ││  0x00007fc0c54879a8: cmp    %r10d,%edi
                      ││  0x00007fc0c54879ab: cmovl  %ebx,%r10d
                      ││  0x00007fc0c54879af: cmp    $0x1,%r10d
                      ││  0x00007fc0c54879b3: jle    0x00007fc0c5487ab9
                      ││  0x00007fc0c54879b9: mov    $0x1,%esi
  0.27%    0.18%      ││  0x00007fc0c54879be: xchg   %ax,%ax            ;*aload_0
                      ││                                                ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
  1.36%    0.99%     ↗││  0x00007fc0c54879c0: mov    0x10(%rax,%rsi,4),%r8d  ;*iaload
                     │││                                                ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
  7.27%    5.78%     │││  0x00007fc0c54879c5: imul   %edx,%r8d
  0.12%    0.14%     │││  0x00007fc0c54879c9: add    %r8d,0x10(%r11,%rsi,4)  ;*iastore
                     │││                                                ; - mat_mul.MyBenchmark::loop_ikj@101 (line 57)
 13.20%   10.70%     │││  0x00007fc0c54879ce: movslq %esi,%rbp
           0.02%     │││  0x00007fc0c54879d1: mov    0x14(%rax,%rbp,4),%r8d  ;*iaload
                     │││                                                ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
  4.55%    3.01%     │││  0x00007fc0c54879d6: imul   %edx,%r8d
  1.28%    1.19%     │││  0x00007fc0c54879da: add    %r8d,0x14(%r11,%rbp,4)  ;*iastore
                     │││                                                ; - mat_mul.MyBenchmark::loop_ikj@101 (line 57)
 11.24%   15.02%     │││  0x00007fc0c54879df: mov    0x18(%rax,%rbp,4),%r8d  ;*iaload
                     │││                                                ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
  1.23%    1.65%     │││  0x00007fc0c54879e4: imul   %edx,%r8d
  7.92%   11.63%     │││  0x00007fc0c54879e8: add    %r8d,0x18(%r11,%rbp,4)  ;*iastore
                     │││                                                ; - mat_mul.MyBenchmark::loop_ikj@101 (line 57)
  5.72%    8.68%     │││  0x00007fc0c54879ed: mov    0x1c(%rax,%rbp,4),%r8d  ;*iaload
                     │││                                                ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
  7.25%    4.51%     │││  0x00007fc0c54879f2: imul   %edx,%r8d
  0.06%    0.10%     │││  0x00007fc0c54879f6: add    %r8d,0x1c(%r11,%rbp,4)  ;*iastore
                     │││                                                ; - mat_mul.MyBenchmark::loop_ikj@101 (line 57)
 13.20%   15.04%     │││  0x00007fc0c54879fb: mov    %esi,%ebp
                     │││  0x00007fc0c54879fd: add    $0x2,%ebp
  3.77%    3.00%     │││  0x00007fc0c5487a00: vmovq  %xmm0,%r8
  1.23%    0.86%     │││  0x00007fc0c5487a05: mov    %ebp,0x14(%r8)     ;*putfield j
                     │││                                                ; - mat_mul.MyBenchmark::loop_ikj@109 (line 56)
  6.90%    5.25%     │││  0x00007fc0c5487a09: add    $0x4,%esi          ;*iadd
                     │││                                                ; - mat_mul.MyBenchmark::loop_ikj@108 (line 56)
  0.02%              │││  0x00007fc0c5487a0c: mov    %esi,0x14(%r8)     ;*putfield j
                     │││                                                ; - mat_mul.MyBenchmark::loop_ikj@109 (line 56)
  4.32%    4.20%     │││  0x00007fc0c5487a10: cmp    %r10d,%esi
                     ╰││  0x00007fc0c5487a13: jl     0x00007fc0c54879c0  ;*if_icmpge
                      ││                                                ; - mat_mul.MyBenchmark::loop_ikj@63 (line 56)
  0.02%    0.02%      ││  0x00007fc0c5487a15: cmp    %edi,%esi
                      ╰│  0x00007fc0c5487a17: jl     0x00007fc0c5487890
                       ╰  0x00007fc0c5487a1d: jmpq   0x00007fc0c54878ad  ;*if_icmpge
                                                                        ; - mat_mul.MyBenchmark::loop_ikj@13 (line 53)
                          0x00007fc0c5487a22: vmovq  %xmm0,%r10
                          0x00007fc0c5487a27: mov    0x2c(%r10),%ebp    ;*getfield res
                                                                        ; - mat_mul.MyBenchmark::loop_ikj@143 (line 61)
                          0x00007fc0c5487a2b: mov    %r13,%rsi
                          0x00007fc0c5487a2e: test   %rsi,%rsi
                          0x00007fc0c5487a31: je     0x00007fc0c5487ac3  ;*if_icmpge
....................................................................................................
 97.39%   97.43%  <total for region 1>

....[Hottest Regions]...............................................................................
 97.39%   97.43%         C2, level 4  mat_mul.MyBenchmark::loop_ikj, version 584 (389 bytes) 
  0.25%    0.23%              kernel  [unknown] (0 bytes) 
  0.08%    0.04%              kernel  [unknown] (16 bytes) 
  0.08%    0.04%              kernel  [unknown] (3 bytes) 
  0.06%    0.02%              kernel  [unknown] (0 bytes) 
  0.06%                       kernel  [unknown] (11 bytes) 
  0.06%    0.02%        libc-2.12.so  __strlen_sse42 (27 bytes) 
  0.04%    0.02%              kernel  [unknown] (7 bytes) 
  0.04%                       kernel  [unknown] (0 bytes) 
  0.04%    0.04%              kernel  [unknown] (44 bytes) 
  0.04%    0.02%              kernel  [unknown] (6 bytes) 
  0.04%    0.02%              kernel  [unknown] (4 bytes) 
  0.04%    0.02%              kernel  [unknown] (31 bytes) 
  0.04%                 libc-2.12.so  _IO_setb (10 bytes) 
  0.04%                    libjvm.so  Monitor::ILock (0 bytes) 
  0.02%                       kernel  [unknown] (0 bytes) 
  0.02%                       kernel  [unknown] (0 bytes) 
  0.02%                       kernel  [unknown] (0 bytes) 
  0.02%                       kernel  [unknown] (0 bytes) 
  0.02%                       kernel  [unknown] (0 bytes) 
  1.59%    2.10%  <...other 163 warm regions...>
....................................................................................................
 99.98%  100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 97.39%   97.43%         C2, level 4  mat_mul.MyBenchmark::loop_ikj, version 584 
  1.65%    1.50%              kernel  [unknown] 
  0.08%    0.04%        libc-2.12.so  __strlen_sse42 
  0.06%    0.08%        libc-2.12.so  vfprintf 
  0.04%    0.02%        libc-2.12.so  _IO_fwrite 
  0.04%    0.04%   libhsdis-amd64.so  print_insn 
  0.04%            libhsdis-amd64.so  oappend 
  0.04%                    libjvm.so  decode_env::handle_event 
  0.04%                    libjvm.so  Monitor::ILock 
  0.04%                 libc-2.12.so  _IO_setb 
  0.04%    0.06%           libjvm.so  RelocIterator::initialize 
  0.04%    0.08%           libjvm.so  xmlTextStream::write 
  0.02%                 libc-2.12.so  __strchr_sse42 
  0.02%                    libjvm.so  SymbolTable::lookup_only 
  0.02%                 libc-2.12.so  malloc 
  0.02%           libpthread-2.12.so  pthread_mutex_lock 
  0.02%           libpthread-2.12.so  [unknown] 
  0.02%                    libjvm.so  LocationValue::write_on 
  0.02%            libhsdis-amd64.so  OP_E_memory 
  0.02%                    libjvm.so  LinkResolver::runtime_resolve_virtual_method 
  0.33%    0.16%  <...other 17 warm methods...>
....................................................................................................
 99.98%   99.40%  <totals>

....[Distribution by Source]........................................................................
 97.39%   97.43%         C2, level 4
  1.65%    1.50%              kernel
  0.39%    0.60%           libjvm.so
  0.33%    0.37%        libc-2.12.so
  0.10%    0.06%   libhsdis-amd64.so
  0.08%    0.02%  libpthread-2.12.so
  0.04%                  interpreter
....................................................................................................
 99.98%  100.00%  <totals>

PrintAssembly processed: 179855 total address lines.
Perf output processed (skipped 8.089 seconds):
 Column 1: cycles (5218 events)
 Column 2: instructions (5211 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
C2, level 4, mat_mul.MyBenchmark::loop_ikj, version 580 (389 bytes) 

                                                                        ; - mat_mul.MyBenchmark::loop_ikj@16 (line 54)
                          0x00007f3ad5483037: vmovq  %xmm0,%r10
                          0x00007f3ad548303c: movl   $0x0,0x18(%r10)    ;*putfield k
                                                                        ; - mat_mul.MyBenchmark::loop_ikj@18 (line 54)
                          0x00007f3ad5483044: test   %edi,%edi
                          0x00007f3ad5483046: jle    0x00007f3ad5483210  ;*if_icmpge
                                                                        ; - mat_mul.MyBenchmark::loop_ikj@29 (line 54)
                          0x00007f3ad548304c: xor    %ecx,%ecx
                  ╭       0x00007f3ad548304e: jmp    0x00007f3ad548308f  ;*aload_0
                  │                                                     ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
  0.44%    0.48%  │↗  ↗   0x00007f3ad5483050: mov    0x10(%rax,%rsi,4),%r10d  ;*iaload
                  ││  │                                                 ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
  0.34%    0.67%  ││  │   0x00007f3ad5483055: imul   %edx,%r10d
  0.65%    0.52%  ││  │   0x00007f3ad5483059: add    %r10d,0x10(%r11,%rsi,4)  ;*iastore
                  ││  │                                                 ; - mat_mul.MyBenchmark::loop_ikj@101 (line 57)
  0.69%    1.00%  ││  │   0x00007f3ad548305e: inc    %esi               ;*iadd
                  ││  │                                                 ; - mat_mul.MyBenchmark::loop_ikj@108 (line 56)
  0.02%           ││  │   0x00007f3ad5483060: vmovq  %xmm0,%r10
                  ││  │   0x00007f3ad5483065: mov    %esi,0x14(%r10)    ;*putfield j
                  ││  │                                                 ; - mat_mul.MyBenchmark::loop_ikj@109 (line 56)
  0.17%    0.17%  ││  │   0x00007f3ad5483069: cmp    %edi,%esi
                  │╰  │   0x00007f3ad548306b: jl     0x00007f3ad5483050  ;*aload_0
                  │   │                                                 ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
  0.02%    0.02%  │   │↗  0x00007f3ad548306d: mov    %r14d,%edi
  0.02%    0.02%  │ ↗ ││  0x00007f3ad5483070: vmovq  %xmm0,%r10
                  │ │ ││  0x00007f3ad5483075: mov    0xc(%r10),%r11d    ;*getfield N
                  │ │ ││                                                ; - mat_mul.MyBenchmark::loop_ikj@26 (line 54)
  0.04%    0.08%  │ │ ││  0x00007f3ad5483079: inc    %ecx               ;*iadd
                  │ │ ││                                                ; - mat_mul.MyBenchmark::loop_ikj@121 (line 54)
  0.02%    0.02%  │ │ ││  0x00007f3ad548307b: mov    %ecx,0x18(%r10)    ; OopMap{r13=Oop xmm0=Oop off=191}
                  │ │ ││                                                ;*goto
                  │ │ ││                                                ; - mat_mul.MyBenchmark::loop_ikj@125 (line 54)
  0.04%           │ │ ││  0x00007f3ad548307f: test   %eax,0x14e4cf7b(%rip)        # 0x00007f3aea2d0000
                  │ │ ││                                                ;*goto
                  │ │ ││                                                ; - mat_mul.MyBenchmark::loop_ikj@125 (line 54)
                  │ │ ││                                                ;   {poll}
  0.31%    0.13%  │ │ ││  0x00007f3ad5483085: cmp    %edi,%ecx
                  │ │ ││  0x00007f3ad5483087: jge    0x00007f3ad5483013
  0.02%           │ │ ││  0x00007f3ad5483089: mov    %r14d,%edi
                  │ │ ││  0x00007f3ad548308c: mov    %r11d,%r14d        ;*getfield N
                  │ │ ││                                                ; - mat_mul.MyBenchmark::loop_ikj@60 (line 56)
  0.02%    0.04%  ↘ │ ││  0x00007f3ad548308f: vmovq  %xmm0,%r10
  0.21%    0.06%    │ ││  0x00007f3ad5483094: mov    0x28(%r10),%r10d   ;*getfield shm
                    │ ││                                                ; - mat_mul.MyBenchmark::loop_ikj@34 (line 55)
           0.02%    │ ││  0x00007f3ad5483098: mov    0xc(%r12,%r10,8),%ebp  ; implicit exception: dispatches to 0x00007f3ad5483295
  0.27%    0.04%    │ ││  0x00007f3ad548309d: cmp    %ebp,%r9d
                    │ ││  0x00007f3ad54830a0: jae    0x00007f3ad5483219
  0.29%    0.06%    │ ││  0x00007f3ad54830a6: lea    (%r12,%r10,8),%rax
                    │ ││  0x00007f3ad54830aa: mov    0x10(%rax,%r9,4),%r10d  ;*aaload
                    │ ││                                                ; - mat_mul.MyBenchmark::loop_ikj@41 (line 55)
                    │ ││  0x00007f3ad54830af: mov    0xc(%r12,%r10,8),%r8d  ; implicit exception: dispatches to 0x00007f3ad54832a9
  1.09%    0.50%    │ ││  0x00007f3ad54830b4: cmp    %r8d,%ecx
                    │ ││  0x00007f3ad54830b7: jae    0x00007f3ad548323d  ;*iaload
                    │ ││                                                ; - mat_mul.MyBenchmark::loop_ikj@46 (line 55)
  0.19%    0.12%    │ ││  0x00007f3ad54830bd: vmovq  %xmm0,%r11
                    │ ││  0x00007f3ad54830c2: movl   $0x0,0x14(%r11)    ;*putfield j
                    │ ││                                                ; - mat_mul.MyBenchmark::loop_ikj@52 (line 56)
                    │ ││  0x00007f3ad54830ca: shl    $0x3,%r10
                    │ ││  0x00007f3ad54830ce: mov    0x10(%r10,%rcx,4),%edx  ;*iaload
                    │ ││                                                ; - mat_mul.MyBenchmark::loop_ikj@46 (line 55)
  0.21%    0.10%    │ ││  0x00007f3ad54830d3: mov    %edx,0x20(%r11)    ;*putfield aik
                    │ ││                                                ; - mat_mul.MyBenchmark::loop_ikj@47 (line 55)
  0.06%    0.04%    │ ││  0x00007f3ad54830d7: test   %edi,%edi
                    ╰ ││  0x00007f3ad54830d9: jle    0x00007f3ad5483070  ;*if_icmpge
                      ││                                                ; - mat_mul.MyBenchmark::loop_ikj@63 (line 56)
                      ││  0x00007f3ad54830db: mov    0x2c(%r11),%r11d   ;*getfield res
                      ││                                                ; - mat_mul.MyBenchmark::loop_ikj@67 (line 57)
  0.02%               ││  0x00007f3ad54830df: mov    0xc(%r12,%r11,8),%r10d  ; implicit exception: dispatches to 0x00007f3ad5483261
  0.15%    0.10%      ││  0x00007f3ad54830e4: cmp    %r10d,%r9d
                      ││  0x00007f3ad54830e7: jae    0x00007f3ad5483261  ;*aload_0
                      ││                                                ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
  0.02%    0.04%      ││  0x00007f3ad54830ed: lea    (%r12,%r11,8),%r10
                      ││  0x00007f3ad54830f1: mov    0x10(%r10,%r9,4),%esi  ;*aaload
                      ││                                                ; - mat_mul.MyBenchmark::loop_ikj@74 (line 57)
  0.02%    0.02%      ││  0x00007f3ad54830f6: mov    0xc(%r12,%rsi,8),%r10d  ;*iaload
                      ││                                                ; - mat_mul.MyBenchmark::loop_ikj@80 (line 57)
                      ││                                                ; implicit exception: dispatches to 0x00007f3ad5483261
  0.40%    0.46%      ││  0x00007f3ad54830fb: test   %r10d,%r10d
                      ││  0x00007f3ad54830fe: jbe    0x00007f3ad5483261
  0.10%    0.04%      ││  0x00007f3ad5483104: mov    %edi,%r11d
                      ││  0x00007f3ad5483107: dec    %r11d
                      ││  0x00007f3ad548310a: cmp    %r10d,%r11d
                      ││  0x00007f3ad548310d: jae    0x00007f3ad5483261
  0.10%    0.19%      ││  0x00007f3ad5483113: cmp    %ebp,%ecx
                      ││  0x00007f3ad5483115: jae    0x00007f3ad5483261  ;*aload_0
                      ││                                                ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
  0.02%               ││  0x00007f3ad548311b: mov    0x10(%rax,%rcx,4),%eax  ;*aaload
                      ││                                                ; - mat_mul.MyBenchmark::loop_ikj@93 (line 57)
  0.02%               ││  0x00007f3ad548311f: mov    0xc(%r12,%rax,8),%r8d  ;*iaload
                      ││                                                ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
                      ││                                                ; implicit exception: dispatches to 0x00007f3ad5483261
  0.04%    0.02%      ││  0x00007f3ad5483124: test   %r8d,%r8d
                      ││  0x00007f3ad5483127: jbe    0x00007f3ad5483261
  0.11%    0.35%      ││  0x00007f3ad548312d: cmp    %r8d,%r11d
                      ││  0x00007f3ad5483130: jae    0x00007f3ad5483261  ;*aload_0
                      ││                                                ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
  0.02%               ││  0x00007f3ad5483136: mov    %edx,%r10d
                      ││  0x00007f3ad5483139: imul   0x10(%r12,%rax,8),%r10d
           0.02%      ││  0x00007f3ad548313f: vmovq  %xmm0,%r11
  0.19%    0.17%      ││  0x00007f3ad5483144: movl   $0x1,0x14(%r11)    ;*putfield j
                      ││                                                ; - mat_mul.MyBenchmark::loop_ikj@109 (line 56)
  0.02%               ││  0x00007f3ad548314c: mov    0x10(%r12,%rsi,8),%r11d  ;*iaload
                      ││                                                ; - mat_mul.MyBenchmark::loop_ikj@80 (line 57)
           0.02%      ││  0x00007f3ad5483151: add    %r11d,%r10d
  0.02%    0.04%      ││  0x00007f3ad5483154: mov    %r10d,0x10(%r12,%rsi,8)  ;*iastore
                      ││                                                ; - mat_mul.MyBenchmark::loop_ikj@101 (line 57)
  0.13%    0.21%      ││  0x00007f3ad5483159: lea    (%r12,%rsi,8),%r11
           0.02%      ││  0x00007f3ad548315d: shl    $0x3,%rax
           0.02%      ││  0x00007f3ad5483161: mov    %edi,%r10d
                      ││  0x00007f3ad5483164: add    $0xfffffffffffffffd,%r10d
  0.13%    0.08%      ││  0x00007f3ad5483168: cmp    %r10d,%edi
  0.02%               ││  0x00007f3ad548316b: cmovl  %ebx,%r10d
                      ││  0x00007f3ad548316f: cmp    $0x1,%r10d
                      ││  0x00007f3ad5483173: jle    0x00007f3ad5483279
                      ││  0x00007f3ad5483179: mov    $0x1,%esi
  0.13%    0.15%      ││  0x00007f3ad548317e: xchg   %ax,%ax            ;*aload_0
                      ││                                                ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
  1.11%    0.84%     ↗││  0x00007f3ad5483180: mov    0x10(%rax,%rsi,4),%r8d  ;*iaload
                     │││                                                ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
  7.51%    5.74%     │││  0x00007f3ad5483185: imul   %edx,%r8d
  0.13%    0.17%     │││  0x00007f3ad5483189: add    %r8d,0x10(%r11,%rsi,4)  ;*iastore
                     │││                                                ; - mat_mul.MyBenchmark::loop_ikj@101 (line 57)
 12.02%   11.55%     │││  0x00007f3ad548318e: movslq %esi,%rbp
                     │││  0x00007f3ad5483191: mov    0x14(%rax,%rbp,4),%r8d  ;*iaload
                     │││                                                ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
  3.95%    3.09%     │││  0x00007f3ad5483196: imul   %edx,%r8d
  1.61%    1.55%     │││  0x00007f3ad548319a: add    %r8d,0x14(%r11,%rbp,4)  ;*iastore
                     │││                                                ; - mat_mul.MyBenchmark::loop_ikj@101 (line 57)
 12.15%   14.49%     │││  0x00007f3ad548319f: mov    0x18(%rax,%rbp,4),%r8d  ;*iaload
                     │││                                                ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
  1.23%    1.46%     │││  0x00007f3ad54831a4: imul   %edx,%r8d
  6.86%   11.61%     │││  0x00007f3ad54831a8: add    %r8d,0x18(%r11,%rbp,4)  ;*iastore
                     │││                                                ; - mat_mul.MyBenchmark::loop_ikj@101 (line 57)
  5.52%    8.23%     │││  0x00007f3ad54831ad: mov    0x1c(%rax,%rbp,4),%r8d  ;*iaload
                     │││                                                ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
  7.05%    4.49%     │││  0x00007f3ad54831b2: imul   %edx,%r8d
  0.10%    0.08%     │││  0x00007f3ad54831b6: add    %r8d,0x1c(%r11,%rbp,4)  ;*iastore
                     │││                                                ; - mat_mul.MyBenchmark::loop_ikj@101 (line 57)
 12.48%   13.28%     │││  0x00007f3ad54831bb: mov    %esi,%ebp
           0.02%     │││  0x00007f3ad54831bd: add    $0x2,%ebp
  4.41%    2.86%     │││  0x00007f3ad54831c0: vmovq  %xmm0,%r8
  1.55%    0.98%     │││  0x00007f3ad54831c5: mov    %ebp,0x14(%r8)     ;*putfield j
                     │││                                                ; - mat_mul.MyBenchmark::loop_ikj@109 (line 56)
  7.30%    5.37%     │││  0x00007f3ad54831c9: add    $0x4,%esi          ;*iadd
                     │││                                                ; - mat_mul.MyBenchmark::loop_ikj@108 (line 56)
  0.04%    0.02%     │││  0x00007f3ad54831cc: mov    %esi,0x14(%r8)     ;*putfield j
                     │││                                                ; - mat_mul.MyBenchmark::loop_ikj@109 (line 56)
  4.12%    4.39%     │││  0x00007f3ad54831d0: cmp    %r10d,%esi
                     ╰││  0x00007f3ad54831d3: jl     0x00007f3ad5483180  ;*if_icmpge
                      ││                                                ; - mat_mul.MyBenchmark::loop_ikj@63 (line 56)
  0.04%               ││  0x00007f3ad54831d5: cmp    %edi,%esi
                      ╰│  0x00007f3ad54831d7: jl     0x00007f3ad5483050
                       ╰  0x00007f3ad54831dd: jmpq   0x00007f3ad548306d  ;*if_icmpge
                                                                        ; - mat_mul.MyBenchmark::loop_ikj@13 (line 53)
                          0x00007f3ad54831e2: vmovq  %xmm0,%r10
                          0x00007f3ad54831e7: mov    0x2c(%r10),%ebp    ;*getfield res
                                                                        ; - mat_mul.MyBenchmark::loop_ikj@143 (line 61)
                          0x00007f3ad54831eb: mov    %r13,%rsi
                          0x00007f3ad54831ee: test   %rsi,%rsi
                          0x00007f3ad54831f1: je     0x00007f3ad5483283  ;*if_icmpge
....................................................................................................
 95.96%   96.24%  <total for region 1>

....[Hottest Regions]...............................................................................
 95.96%   96.24%         C2, level 4  mat_mul.MyBenchmark::loop_ikj, version 580 (389 bytes) 
  0.69%    0.67%              kernel  [unknown] (0 bytes) 
  0.13%                       kernel  [unknown] (0 bytes) 
  0.10%    0.06%              kernel  [unknown] (24 bytes) 
  0.10%                    libjvm.so  outputStream::update_position (13 bytes) 
  0.08%    0.04%              kernel  [unknown] (11 bytes) 
  0.06%    0.04%              kernel  [unknown] (63 bytes) 
  0.06%    0.04%        libc-2.12.so  __strlen_sse42 (48 bytes) 
  0.04%    0.02%              kernel  [unknown] (0 bytes) 
  0.04%                       kernel  [unknown] (0 bytes) 
  0.04%    0.02%              kernel  [unknown] (0 bytes) 
  0.04%    0.02%              kernel  [unknown] (17 bytes) 
  0.04%    0.04%              kernel  [unknown] (7 bytes) 
  0.04%    0.08%              kernel  [unknown] (3 bytes) 
  0.04%    0.02%              kernel  [unknown] (6 bytes) 
  0.04%    0.02%              kernel  [unknown] (30 bytes) 
  0.04%                       kernel  [unknown] (0 bytes) 
  0.04%    0.02%        libc-2.12.so  vfprintf (30 bytes) 
  0.04%    0.02%        libc-2.12.so  _IO_fflush (0 bytes) 
  0.04%                 libc-2.12.so  _IO_vsnprintf (5 bytes) 
  2.38%    2.67%  <...other 205 warm regions...>
....................................................................................................
100.00%  100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 95.96%   96.28%         C2, level 4  mat_mul.MyBenchmark::loop_ikj, version 580 
  2.40%    2.32%              kernel  [unknown] 
  0.13%    0.17%        libc-2.12.so  vfprintf 
  0.10%    0.06%           libjvm.so  xmlTextStream::write 
  0.10%                    libjvm.so  outputStream::update_position 
  0.06%                 libc-2.12.so  __strcpy_ssse3 
  0.06%    0.08%        libc-2.12.so  _IO_fflush 
  0.06%    0.04%        libc-2.12.so  __strlen_sse42 
  0.06%    0.04%           libjvm.so  defaultStream::hold 
  0.04%            libhsdis-amd64.so  print_insn 
  0.04%                    libjvm.so  nmethod::find_pc_desc_internal 
  0.04%    0.04%        libc-2.12.so  __strchrnul 
  0.04%    0.02%        libc-2.12.so  _IO_default_xsputn 
  0.04%    0.06%        libc-2.12.so  _IO_fwrite 
  0.04%            libhsdis-amd64.so  oappend 
  0.04%    0.04%           libjvm.so  fileStream::write 
  0.04%    0.02%  libpthread-2.12.so  [unknown] 
  0.04%                 libc-2.12.so  _IO_vsnprintf 
  0.04%    0.12%           libjvm.so  RelocIterator::initialize 
  0.02%    0.06%           libjvm.so  jio_print 
  0.69%    0.21%  <...other 36 warm methods...>
....................................................................................................
100.00%   99.54%  <totals>

....[Distribution by Source]........................................................................
 95.96%   96.28%         C2, level 4
  2.40%    2.32%              kernel
  0.79%    0.67%           libjvm.so
  0.57%    0.61%        libc-2.12.so
  0.11%            libhsdis-amd64.so
  0.08%    0.10%  libpthread-2.12.so
  0.08%    0.02%         interpreter
  0.02%                  C1, level 3
....................................................................................................
100.00%  100.00%  <totals>



# JMH version: 1.19
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /opt/jdk1.8.0_131/jre/bin/java
# VM options: -XX:+UnlockDiagnosticVMOptions -XX:CompileCommand=print,MyBenchmark
# Warmup: 3 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: mat_mul.MyBenchmark.loop_ikj
# Parameters: (N_str = 512)

# Run progress: 80.00% complete, ETA 00:01:02
# Fork: 1 of 2
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 0.082 s/op
# Warmup Iteration   2: 0.084 s/op
# Warmup Iteration   3: 0.084 s/op
Iteration   1: 0.084 s/op
Iteration   2: 0.084 s/op
Iteration   3: 0.084 s/op
Iteration   4: 0.084 s/op
Iteration   5: 0.084 s/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 85.00% complete, ETA 00:00:46
# Fork: 2 of 2
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 0.079 s/op
# Warmup Iteration   2: 0.084 s/op
# Warmup Iteration   3: 0.085 s/op
Iteration   1: 0.084 s/op
Iteration   2: 0.085 s/op
Iteration   3: 0.084 s/op
Iteration   4: 0.084 s/op
Iteration   5: 0.084 s/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "mat_mul.MyBenchmark.loop_ikj":
  0.084 ±(99.9%) 0.001 s/op [Average]
  (min, avg, max) = (0.084, 0.084, 0.085), stdev = 0.001
  CI (99.9%): [0.084, 0.085] (assumes normal distribution)

Secondary result "mat_mul.MyBenchmark.loop_ikj:·asm":
PrintAssembly processed: 178541 total address lines.
Perf output processed (skipped 8.118 seconds):
 Column 1: cycles (5161 events)
 Column 2: instructions (5158 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
C2, level 4, mat_mul.MyBenchmark::loop_ikj, version 580 (397 bytes) 

                            0x00007fe69948725c: vmovq  %xmm0,%r10
                            0x00007fe699487261: movl   $0x0,0x18(%r10)    ;*putfield k
                                                                          ; - mat_mul.MyBenchmark::loop_ikj@18 (line 54)
                            0x00007fe699487269: test   %edi,%edi
                  ╭         0x00007fe69948726b: jle    0x00007fe699487412  ;*if_icmpge
                  │                                                       ; - mat_mul.MyBenchmark::loop_ikj@29 (line 54)
                  │         0x00007fe699487271: xor    %ecx,%ecx
                  │╭        0x00007fe699487273: jmp    0x00007fe6994872b7
                  ││        0x00007fe699487275: xchg   %ax,%ax            ;*aload_0
                  ││                                                      ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
  0.21%    0.16%  ││↗   ↗   0x00007fe699487278: mov    0x10(%rax,%rsi,4),%r10d  ;*iaload
                  │││   │                                                 ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
  0.19%    0.10%  │││   │   0x00007fe69948727d: imul   %edx,%r10d
  0.17%    0.27%  │││   │   0x00007fe699487281: add    %r10d,0x10(%r11,%rsi,4)  ;*iastore
                  │││   │                                                 ; - mat_mul.MyBenchmark::loop_ikj@101 (line 57)
  0.45%    0.37%  │││   │   0x00007fe699487286: inc    %esi               ;*iadd
                  │││   │                                                 ; - mat_mul.MyBenchmark::loop_ikj@108 (line 56)
                  │││   │   0x00007fe699487288: vmovq  %xmm0,%r10
  0.04%           │││   │   0x00007fe69948728d: mov    %esi,0x14(%r10)    ;*putfield j
                  │││   │                                                 ; - mat_mul.MyBenchmark::loop_ikj@109 (line 56)
  0.06%    0.19%  │││   │   0x00007fe699487291: cmp    %edi,%esi
                  ││╰   │   0x00007fe699487293: jl     0x00007fe699487278  ;*aload_0
                  ││    │                                                 ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
  0.08%    0.04%  ││    │↗  0x00007fe699487295: mov    %r14d,%edi
  0.02%    0.02%  ││  ↗ ││  0x00007fe699487298: vmovq  %xmm0,%r10
                  ││  │ ││  0x00007fe69948729d: mov    0xc(%r10),%r11d    ;*getfield N
                  ││  │ ││                                                ; - mat_mul.MyBenchmark::loop_ikj@26 (line 54)
  0.02%           ││  │ ││  0x00007fe6994872a1: inc    %ecx               ;*iadd
                  ││  │ ││                                                ; - mat_mul.MyBenchmark::loop_ikj@121 (line 54)
  0.02%    0.10%  ││  │ ││  0x00007fe6994872a3: mov    %ecx,0x18(%r10)    ; OopMap{r13=Oop xmm0=Oop off=231}
                  ││  │ ││                                                ;*goto
                  ││  │ ││                                                ; - mat_mul.MyBenchmark::loop_ikj@125 (line 54)
           0.08%  ││  │ ││  0x00007fe6994872a7: test   %eax,0x148dad53(%rip)        # 0x00007fe6add62000
                  ││  │ ││                                                ;*goto
                  ││  │ ││                                                ; - mat_mul.MyBenchmark::loop_ikj@125 (line 54)
                  ││  │ ││                                                ;   {poll}
  0.08%    0.02%  ││  │ ││  0x00007fe6994872ad: cmp    %edi,%ecx
                  ││  │ ││  0x00007fe6994872af: jge    0x00007fe69948723c
                  ││  │ ││  0x00007fe6994872b1: mov    %r14d,%edi
                  ││  │ ││  0x00007fe6994872b4: mov    %r11d,%r14d        ;*getfield N
                  ││  │ ││                                                ; - mat_mul.MyBenchmark::loop_ikj@60 (line 56)
                  │↘  │ ││  0x00007fe6994872b7: vmovq  %xmm0,%r10
  0.06%    0.08%  │   │ ││  0x00007fe6994872bc: mov    0x28(%r10),%r10d   ;*getfield shm
                  │   │ ││                                                ; - mat_mul.MyBenchmark::loop_ikj@34 (line 55)
                  │   │ ││  0x00007fe6994872c0: mov    0xc(%r12,%r10,8),%ebp  ; implicit exception: dispatches to 0x00007fe699487499
  0.16%    0.02%  │   │ ││  0x00007fe6994872c5: cmp    %ebp,%r9d
                  │  ╭│ ││  0x00007fe6994872c8: jae    0x00007fe69948741b
  0.12%    0.06%  │  ││ ││  0x00007fe6994872ce: lea    (%r12,%r10,8),%rax
                  │  ││ ││  0x00007fe6994872d2: mov    0x10(%rax,%r9,4),%r10d  ;*aaload
                  │  ││ ││                                                ; - mat_mul.MyBenchmark::loop_ikj@41 (line 55)
                  │  ││ ││  0x00007fe6994872d7: mov    0xc(%r12,%r10,8),%r8d  ; implicit exception: dispatches to 0x00007fe6994874ad
  0.52%    0.37%  │  ││ ││  0x00007fe6994872dc: cmp    %r8d,%ecx
                  │  ││ ││  0x00007fe6994872df: jae    0x00007fe699487441  ;*iaload
                  │  ││ ││                                                ; - mat_mul.MyBenchmark::loop_ikj@46 (line 55)
  0.12%    0.10%  │  ││ ││  0x00007fe6994872e5: vmovq  %xmm0,%r11
                  │  ││ ││  0x00007fe6994872ea: movl   $0x0,0x14(%r11)    ;*putfield j
                  │  ││ ││                                                ; - mat_mul.MyBenchmark::loop_ikj@52 (line 56)
                  │  ││ ││  0x00007fe6994872f2: shl    $0x3,%r10
                  │  ││ ││  0x00007fe6994872f6: mov    0x10(%r10,%rcx,4),%edx  ;*iaload
                  │  ││ ││                                                ; - mat_mul.MyBenchmark::loop_ikj@46 (line 55)
  0.14%    0.08%  │  ││ ││  0x00007fe6994872fb: mov    %edx,0x20(%r11)    ;*putfield aik
                  │  ││ ││                                                ; - mat_mul.MyBenchmark::loop_ikj@47 (line 55)
           0.02%  │  ││ ││  0x00007fe6994872ff: test   %edi,%edi
                  │  │╰ ││  0x00007fe699487301: jle    0x00007fe699487298  ;*if_icmpge
                  │  │  ││                                                ; - mat_mul.MyBenchmark::loop_ikj@63 (line 56)
                  │  │  ││  0x00007fe699487303: mov    0x2c(%r11),%r11d   ;*getfield res
                  │  │  ││                                                ; - mat_mul.MyBenchmark::loop_ikj@67 (line 57)
                  │  │  ││  0x00007fe699487307: mov    0xc(%r12,%r11,8),%r10d  ; implicit exception: dispatches to 0x00007fe699487465
  0.19%    0.04%  │  │  ││  0x00007fe69948730c: cmp    %r10d,%r9d
                  │  │  ││  0x00007fe69948730f: jae    0x00007fe699487465  ;*aload_0
                  │  │  ││                                                ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
  0.02%    0.02%  │  │  ││  0x00007fe699487315: lea    (%r12,%r11,8),%r10
                  │  │  ││  0x00007fe699487319: mov    0x10(%r10,%r9,4),%esi  ;*aaload
                  │  │  ││                                                ; - mat_mul.MyBenchmark::loop_ikj@74 (line 57)
  0.02%           │  │  ││  0x00007fe69948731e: mov    0xc(%r12,%rsi,8),%r10d  ;*iaload
                  │  │  ││                                                ; - mat_mul.MyBenchmark::loop_ikj@80 (line 57)
                  │  │  ││                                                ; implicit exception: dispatches to 0x00007fe699487465
  0.12%    0.16%  │  │  ││  0x00007fe699487323: test   %r10d,%r10d
                  │  │  ││  0x00007fe699487326: jbe    0x00007fe699487465
  0.02%    0.06%  │  │  ││  0x00007fe69948732c: mov    %edi,%r11d
                  │  │  ││  0x00007fe69948732f: dec    %r11d
                  │  │  ││  0x00007fe699487332: cmp    %r10d,%r11d
                  │  │  ││  0x00007fe699487335: jae    0x00007fe699487465
  0.14%    0.10%  │  │  ││  0x00007fe69948733b: cmp    %ebp,%ecx
                  │  │  ││  0x00007fe69948733d: jae    0x00007fe699487465  ;*aload_0
                  │  │  ││                                                ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
           0.02%  │  │  ││  0x00007fe699487343: mov    0x10(%rax,%rcx,4),%eax  ;*aaload
                  │  │  ││                                                ; - mat_mul.MyBenchmark::loop_ikj@93 (line 57)
           0.02%  │  │  ││  0x00007fe699487347: mov    0xc(%r12,%rax,8),%r8d  ;*iaload
                  │  │  ││                                                ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
                  │  │  ││                                                ; implicit exception: dispatches to 0x00007fe699487465
  0.06%    0.02%  │  │  ││  0x00007fe69948734c: test   %r8d,%r8d
                  │  │  ││  0x00007fe69948734f: jbe    0x00007fe699487465
  0.12%    0.12%  │  │  ││  0x00007fe699487355: cmp    %r8d,%r11d
                  │  │  ││  0x00007fe699487358: jae    0x00007fe699487465  ;*aload_0
                  │  │  ││                                                ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
                  │  │  ││  0x00007fe69948735e: mov    %edx,%r10d
                  │  │  ││  0x00007fe699487361: imul   0x10(%r12,%rax,8),%r10d
           0.02%  │  │  ││  0x00007fe699487367: vmovq  %xmm0,%r11
  0.12%    0.08%  │  │  ││  0x00007fe69948736c: movl   $0x1,0x14(%r11)    ;*putfield j
                  │  │  ││                                                ; - mat_mul.MyBenchmark::loop_ikj@109 (line 56)
                  │  │  ││  0x00007fe699487374: mov    0x10(%r12,%rsi,8),%r11d  ;*iaload
                  │  │  ││                                                ; - mat_mul.MyBenchmark::loop_ikj@80 (line 57)
  0.02%    0.02%  │  │  ││  0x00007fe699487379: add    %r11d,%r10d
                  │  │  ││  0x00007fe69948737c: mov    %r10d,0x10(%r12,%rsi,8)  ;*iastore
                  │  │  ││                                                ; - mat_mul.MyBenchmark::loop_ikj@101 (line 57)
  0.12%    0.27%  │  │  ││  0x00007fe699487381: lea    (%r12,%rsi,8),%r11
                  │  │  ││  0x00007fe699487385: shl    $0x3,%rax
                  │  │  ││  0x00007fe699487389: mov    %edi,%r10d
                  │  │  ││  0x00007fe69948738c: add    $0xfffffffffffffffd,%r10d
  0.10%    0.02%  │  │  ││  0x00007fe699487390: cmp    %r10d,%edi
  0.02%           │  │  ││  0x00007fe699487393: cmovl  %ebx,%r10d
                  │  │  ││  0x00007fe699487397: cmp    $0x1,%r10d
                  │  │  ││  0x00007fe69948739b: jle    0x00007fe69948747d
                  │  │  ││  0x00007fe6994873a1: mov    $0x1,%esi
  0.10%    0.08%  │  │  ││  0x00007fe6994873a6: nopw   0x0(%rax,%rax,1)   ;*aload_0
                  │  │  ││                                                ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
  1.07%    1.14%  │  │ ↗││  0x00007fe6994873b0: mov    0x10(%rax,%rsi,4),%r8d  ;*iaload
                  │  │ │││                                                ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
  9.46%    6.71%  │  │ │││  0x00007fe6994873b5: imul   %edx,%r8d
  0.12%    0.14%  │  │ │││  0x00007fe6994873b9: add    %r8d,0x10(%r11,%rsi,4)  ;*iastore
                  │  │ │││                                                ; - mat_mul.MyBenchmark::loop_ikj@101 (line 57)
 14.26%   11.03%  │  │ │││  0x00007fe6994873be: movslq %esi,%rbp
                  │  │ │││  0x00007fe6994873c1: mov    0x14(%rax,%rbp,4),%r8d  ;*iaload
                  │  │ │││                                                ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
  3.10%    2.44%  │  │ │││  0x00007fe6994873c6: imul   %edx,%r8d
  1.05%    1.18%  │  │ │││  0x00007fe6994873ca: add    %r8d,0x14(%r11,%rbp,4)  ;*iastore
                  │  │ │││                                                ; - mat_mul.MyBenchmark::loop_ikj@101 (line 57)
 12.28%   15.26%  │  │ │││  0x00007fe6994873cf: mov    0x18(%rax,%rbp,4),%r8d  ;*iaload
                  │  │ │││                                                ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
  1.24%    1.67%  │  │ │││  0x00007fe6994873d4: imul   %edx,%r8d
  9.38%   13.82%  │  │ │││  0x00007fe6994873d8: add    %r8d,0x18(%r11,%rbp,4)  ;*iastore
                  │  │ │││                                                ; - mat_mul.MyBenchmark::loop_ikj@101 (line 57)
  3.64%    6.90%  │  │ │││  0x00007fe6994873dd: mov    0x1c(%rax,%rbp,4),%r8d  ;*iaload
                  │  │ │││                                                ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
  8.56%    6.01%  │  │ │││  0x00007fe6994873e2: imul   %edx,%r8d
  0.02%    0.02%  │  │ │││  0x00007fe6994873e6: add    %r8d,0x1c(%r11,%rbp,4)  ;*iastore
                  │  │ │││                                                ; - mat_mul.MyBenchmark::loop_ikj@101 (line 57)
 13.66%   16.05%  │  │ │││  0x00007fe6994873eb: mov    %esi,%ebp
                  │  │ │││  0x00007fe6994873ed: add    $0x2,%ebp
  2.69%    1.73%  │  │ │││  0x00007fe6994873f0: vmovq  %xmm0,%r8
  1.07%    0.95%  │  │ │││  0x00007fe6994873f5: mov    %ebp,0x14(%r8)     ;*putfield j
                  │  │ │││                                                ; - mat_mul.MyBenchmark::loop_ikj@109 (line 56)
  9.09%    6.11%  │  │ │││  0x00007fe6994873f9: add    $0x4,%esi          ;*iadd
                  │  │ │││                                                ; - mat_mul.MyBenchmark::loop_ikj@108 (line 56)
  0.02%           │  │ │││  0x00007fe6994873fc: mov    %esi,0x14(%r8)     ;*putfield j
                  │  │ │││                                                ; - mat_mul.MyBenchmark::loop_ikj@109 (line 56)
  2.89%    3.04%  │  │ │││  0x00007fe699487400: cmp    %r10d,%esi
                  │  │ ╰││  0x00007fe699487403: jl     0x00007fe6994873b0  ;*if_icmpge
                  │  │  ││                                                ; - mat_mul.MyBenchmark::loop_ikj@63 (line 56)
  0.02%           │  │  ││  0x00007fe699487405: cmp    %edi,%esi
                  │  │  ╰│  0x00007fe699487407: jl     0x00007fe699487278
                  │  │   ╰  0x00007fe69948740d: jmpq   0x00007fe699487295
                  ↘  │      0x00007fe699487412: mov    0xc(%r10),%r11d    ;*getfield N
                     │                                                    ; - mat_mul.MyBenchmark::loop_ikj@26 (line 54)
                     │      0x00007fe699487416: jmpq   0x00007fe69948723f
                     ↘      0x00007fe69948741b: mov    $0xffffffe4,%esi
                            0x00007fe699487420: mov    %r13,(%rsp)
                            0x00007fe699487424: vmovsd %xmm0,0x8(%rsp)
                            0x00007fe69948742a: mov    %r10d,0x10(%rsp)
....................................................................................................
 97.19%   97.29%  <total for region 1>

....[Hottest Regions]...............................................................................
 97.19%   97.29%         C2, level 4  mat_mul.MyBenchmark::loop_ikj, version 580 (397 bytes) 
  0.56%    0.54%              kernel  [unknown] (0 bytes) 
  0.08%                       kernel  [unknown] (0 bytes) 
  0.08%    0.08%           libjvm.so  outputStream::update_position (40 bytes) 
  0.06%    0.08%              kernel  [unknown] (59 bytes) 
  0.06%                       kernel  [unknown] (7 bytes) 
  0.06%    0.02%              kernel  [unknown] (0 bytes) 
  0.06%                       kernel  [unknown] (0 bytes) 
  0.06%    0.04%              kernel  [unknown] (16 bytes) 
  0.04%                       kernel  [unknown] (0 bytes) 
  0.04%                       kernel  [unknown] (10 bytes) 
  0.04%    0.02%              kernel  [unknown] (30 bytes) 
  0.04%                       kernel  [unknown] (0 bytes) 
  0.04%                       kernel  [unknown] (29 bytes) 
  0.04%    0.02%              kernel  [unknown] (0 bytes) 
  0.04%                       kernel  [unknown] (11 bytes) 
  0.04%                       kernel  [unknown] (22 bytes) 
  0.04%                 libc-2.12.so  _IO_no_init (22 bytes) 
  0.04%    0.02%  libpthread-2.12.so  __pthread_enable_asynccancel (0 bytes) 
  0.04%                    libjvm.so  nmethod::reloc_string_for (7 bytes) 
  1.36%    1.90%  <...other 147 warm regions...>
....................................................................................................
 99.98%  100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 97.19%   97.29%         C2, level 4  mat_mul.MyBenchmark::loop_ikj, version 580 
  1.98%    1.59%              kernel  [unknown] 
  0.08%    0.08%           libjvm.so  outputStream::update_position 
  0.04%                    libjvm.so  nmethod::reloc_string_for 
  0.04%    0.02%  libpthread-2.12.so  __pthread_enable_asynccancel 
  0.04%                 libc-2.12.so  _IO_no_init 
  0.02%                    libjvm.so  metadata_Relocation::metadata_value 
  0.02%                    libjvm.so  constantPoolHandle::~constantPoolHandle 
  0.02%                    libjvm.so  Monitor::IWait 
  0.02%    0.02%   libhsdis-amd64.so  print_insn 
  0.02%    0.04%           libjvm.so  fileStream::write 
  0.02%            libhsdis-amd64.so  get32s 
  0.02%            libhsdis-amd64.so  OP_G 
  0.02%                    libjvm.so  BlockBegin::BlockBegin 
  0.02%                  C1, level 3  java.lang.Throwable::&lt;init&gt;, version 373 
  0.02%                    libjvm.so  JfrBackend::next_classID 
  0.02%    0.04%        libc-2.12.so  __strlen_sse42 
  0.02%                    libjvm.so  UTF8::quoted_ascii_length 
  0.02%    0.04%        libc-2.12.so  _IO_file_xsputn@@GLIBC_2.2.5 
  0.02%                  interpreter  method entry point (kind = zerolocals)  
  0.35%    0.17%  <...other 18 warm methods...>
....................................................................................................
 99.98%   99.28%  <totals>

....[Distribution by Source]........................................................................
 97.19%   97.29%         C2, level 4
  1.98%    1.59%              kernel
  0.39%    0.56%           libjvm.so
  0.19%    0.37%        libc-2.12.so
  0.08%    0.06%  libpthread-2.12.so
  0.08%    0.08%   libhsdis-amd64.so
  0.06%    0.04%         interpreter
  0.02%    0.02%         C1, level 3
....................................................................................................
 99.98%  100.00%  <totals>

PrintAssembly processed: 179958 total address lines.
Perf output processed (skipped 8.337 seconds):
 Column 1: cycles (5198 events)
 Column 2: instructions (5195 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
C2, level 4, mat_mul.MyBenchmark::loop_ikj, version 579 (397 bytes) 

                            0x00007f43b5483e1c: vmovq  %xmm0,%r10
                            0x00007f43b5483e21: movl   $0x0,0x18(%r10)    ;*putfield k
                                                                          ; - mat_mul.MyBenchmark::loop_ikj@18 (line 54)
                            0x00007f43b5483e29: test   %edi,%edi
                  ╭         0x00007f43b5483e2b: jle    0x00007f43b5483fd2  ;*if_icmpge
                  │                                                       ; - mat_mul.MyBenchmark::loop_ikj@29 (line 54)
                  │         0x00007f43b5483e31: xor    %ecx,%ecx
                  │╭        0x00007f43b5483e33: jmp    0x00007f43b5483e77
                  ││        0x00007f43b5483e35: xchg   %ax,%ax            ;*aload_0
                  ││                                                      ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
  0.06%    0.04%  ││↗   ↗   0x00007f43b5483e38: mov    0x10(%rax,%rsi,4),%r10d  ;*iaload
                  │││   │                                                 ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
  0.08%    0.15%  │││   │   0x00007f43b5483e3d: imul   %edx,%r10d
  0.19%    0.15%  │││   │   0x00007f43b5483e41: add    %r10d,0x10(%r11,%rsi,4)  ;*iastore
                  │││   │                                                 ; - mat_mul.MyBenchmark::loop_ikj@101 (line 57)
  0.48%    0.38%  │││   │   0x00007f43b5483e46: inc    %esi               ;*iadd
                  │││   │                                                 ; - mat_mul.MyBenchmark::loop_ikj@108 (line 56)
                  │││   │   0x00007f43b5483e48: vmovq  %xmm0,%r10
  0.10%    0.08%  │││   │   0x00007f43b5483e4d: mov    %esi,0x14(%r10)    ;*putfield j
                  │││   │                                                 ; - mat_mul.MyBenchmark::loop_ikj@109 (line 56)
  0.25%    0.23%  │││   │   0x00007f43b5483e51: cmp    %edi,%esi
                  ││╰   │   0x00007f43b5483e53: jl     0x00007f43b5483e38  ;*aload_0
                  ││    │                                                 ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
           0.02%  ││    │↗  0x00007f43b5483e55: mov    %r14d,%edi
  0.06%           ││  ↗ ││  0x00007f43b5483e58: vmovq  %xmm0,%r10
  0.10%    0.04%  ││  │ ││  0x00007f43b5483e5d: mov    0xc(%r10),%r11d    ;*getfield N
                  ││  │ ││                                                ; - mat_mul.MyBenchmark::loop_ikj@26 (line 54)
  0.04%           ││  │ ││  0x00007f43b5483e61: inc    %ecx               ;*iadd
                  ││  │ ││                                                ; - mat_mul.MyBenchmark::loop_ikj@121 (line 54)
           0.02%  ││  │ ││  0x00007f43b5483e63: mov    %ecx,0x18(%r10)    ; OopMap{r13=Oop xmm0=Oop off=231}
                  ││  │ ││                                                ;*goto
                  ││  │ ││                                                ; - mat_mul.MyBenchmark::loop_ikj@125 (line 54)
  0.02%    0.15%  ││  │ ││  0x00007f43b5483e67: test   %eax,0x14d79193(%rip)        # 0x00007f43ca1fd000
                  ││  │ ││                                                ;*goto
                  ││  │ ││                                                ; - mat_mul.MyBenchmark::loop_ikj@125 (line 54)
                  ││  │ ││                                                ;   {poll}
  0.23%    0.06%  ││  │ ││  0x00007f43b5483e6d: cmp    %edi,%ecx
                  ││  │ ││  0x00007f43b5483e6f: jge    0x00007f43b5483dfc
                  ││  │ ││  0x00007f43b5483e71: mov    %r14d,%edi
                  ││  │ ││  0x00007f43b5483e74: mov    %r11d,%r14d        ;*getfield N
                  ││  │ ││                                                ; - mat_mul.MyBenchmark::loop_ikj@60 (line 56)
  0.02%           │↘  │ ││  0x00007f43b5483e77: vmovq  %xmm0,%r10
  0.10%    0.04%  │   │ ││  0x00007f43b5483e7c: mov    0x28(%r10),%r10d   ;*getfield shm
                  │   │ ││                                                ; - mat_mul.MyBenchmark::loop_ikj@34 (line 55)
  0.02%    0.02%  │   │ ││  0x00007f43b5483e80: mov    0xc(%r12,%r10,8),%ebp  ; implicit exception: dispatches to 0x00007f43b5484059
  0.13%    0.02%  │   │ ││  0x00007f43b5483e85: cmp    %ebp,%r9d
                  │  ╭│ ││  0x00007f43b5483e88: jae    0x00007f43b5483fdb
  0.02%    0.04%  │  ││ ││  0x00007f43b5483e8e: lea    (%r12,%r10,8),%rax
                  │  ││ ││  0x00007f43b5483e92: mov    0x10(%rax,%r9,4),%r10d  ;*aaload
                  │  ││ ││                                                ; - mat_mul.MyBenchmark::loop_ikj@41 (line 55)
  0.02%           │  ││ ││  0x00007f43b5483e97: mov    0xc(%r12,%r10,8),%r8d  ; implicit exception: dispatches to 0x00007f43b548406d
  0.52%    0.48%  │  ││ ││  0x00007f43b5483e9c: cmp    %r8d,%ecx
                  │  ││ ││  0x00007f43b5483e9f: jae    0x00007f43b5484001  ;*iaload
                  │  ││ ││                                                ; - mat_mul.MyBenchmark::loop_ikj@46 (line 55)
  0.15%    0.04%  │  ││ ││  0x00007f43b5483ea5: vmovq  %xmm0,%r11
                  │  ││ ││  0x00007f43b5483eaa: movl   $0x0,0x14(%r11)    ;*putfield j
                  │  ││ ││                                                ; - mat_mul.MyBenchmark::loop_ikj@52 (line 56)
                  │  ││ ││  0x00007f43b5483eb2: shl    $0x3,%r10
                  │  ││ ││  0x00007f43b5483eb6: mov    0x10(%r10,%rcx,4),%edx  ;*iaload
                  │  ││ ││                                                ; - mat_mul.MyBenchmark::loop_ikj@46 (line 55)
  0.19%    0.15%  │  ││ ││  0x00007f43b5483ebb: mov    %edx,0x20(%r11)    ;*putfield aik
                  │  ││ ││                                                ; - mat_mul.MyBenchmark::loop_ikj@47 (line 55)
                  │  ││ ││  0x00007f43b5483ebf: test   %edi,%edi
                  │  │╰ ││  0x00007f43b5483ec1: jle    0x00007f43b5483e58  ;*if_icmpge
                  │  │  ││                                                ; - mat_mul.MyBenchmark::loop_ikj@63 (line 56)
                  │  │  ││  0x00007f43b5483ec3: mov    0x2c(%r11),%r11d   ;*getfield res
                  │  │  ││                                                ; - mat_mul.MyBenchmark::loop_ikj@67 (line 57)
                  │  │  ││  0x00007f43b5483ec7: mov    0xc(%r12,%r11,8),%r10d  ; implicit exception: dispatches to 0x00007f43b5484025
  0.08%    0.12%  │  │  ││  0x00007f43b5483ecc: cmp    %r10d,%r9d
                  │  │  ││  0x00007f43b5483ecf: jae    0x00007f43b5484025  ;*aload_0
                  │  │  ││                                                ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
           0.02%  │  │  ││  0x00007f43b5483ed5: lea    (%r12,%r11,8),%r10
                  │  │  ││  0x00007f43b5483ed9: mov    0x10(%r10,%r9,4),%esi  ;*aaload
                  │  │  ││                                                ; - mat_mul.MyBenchmark::loop_ikj@74 (line 57)
                  │  │  ││  0x00007f43b5483ede: mov    0xc(%r12,%rsi,8),%r10d  ;*iaload
                  │  │  ││                                                ; - mat_mul.MyBenchmark::loop_ikj@80 (line 57)
                  │  │  ││                                                ; implicit exception: dispatches to 0x00007f43b5484025
  0.15%    0.10%  │  │  ││  0x00007f43b5483ee3: test   %r10d,%r10d
                  │  │  ││  0x00007f43b5483ee6: jbe    0x00007f43b5484025
           0.02%  │  │  ││  0x00007f43b5483eec: mov    %edi,%r11d
                  │  │  ││  0x00007f43b5483eef: dec    %r11d
                  │  │  ││  0x00007f43b5483ef2: cmp    %r10d,%r11d
                  │  │  ││  0x00007f43b5483ef5: jae    0x00007f43b5484025
  0.15%    0.02%  │  │  ││  0x00007f43b5483efb: cmp    %ebp,%ecx
                  │  │  ││  0x00007f43b5483efd: jae    0x00007f43b5484025  ;*aload_0
                  │  │  ││                                                ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
  0.02%    0.02%  │  │  ││  0x00007f43b5483f03: mov    0x10(%rax,%rcx,4),%eax  ;*aaload
                  │  │  ││                                                ; - mat_mul.MyBenchmark::loop_ikj@93 (line 57)
  0.02%           │  │  ││  0x00007f43b5483f07: mov    0xc(%r12,%rax,8),%r8d  ;*iaload
                  │  │  ││                                                ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
                  │  │  ││                                                ; implicit exception: dispatches to 0x00007f43b5484025
  0.02%    0.02%  │  │  ││  0x00007f43b5483f0c: test   %r8d,%r8d
                  │  │  ││  0x00007f43b5483f0f: jbe    0x00007f43b5484025
  0.13%    0.23%  │  │  ││  0x00007f43b5483f15: cmp    %r8d,%r11d
                  │  │  ││  0x00007f43b5483f18: jae    0x00007f43b5484025  ;*aload_0
                  │  │  ││                                                ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
  0.04%           │  │  ││  0x00007f43b5483f1e: mov    %edx,%r10d
                  │  │  ││  0x00007f43b5483f21: imul   0x10(%r12,%rax,8),%r10d
           0.02%  │  │  ││  0x00007f43b5483f27: vmovq  %xmm0,%r11
  0.15%    0.06%  │  │  ││  0x00007f43b5483f2c: movl   $0x1,0x14(%r11)    ;*putfield j
                  │  │  ││                                                ; - mat_mul.MyBenchmark::loop_ikj@109 (line 56)
  0.02%           │  │  ││  0x00007f43b5483f34: mov    0x10(%r12,%rsi,8),%r11d  ;*iaload
                  │  │  ││                                                ; - mat_mul.MyBenchmark::loop_ikj@80 (line 57)
                  │  │  ││  0x00007f43b5483f39: add    %r11d,%r10d
  0.04%    0.02%  │  │  ││  0x00007f43b5483f3c: mov    %r10d,0x10(%r12,%rsi,8)  ;*iastore
                  │  │  ││                                                ; - mat_mul.MyBenchmark::loop_ikj@101 (line 57)
  0.19%    0.08%  │  │  ││  0x00007f43b5483f41: lea    (%r12,%rsi,8),%r11
                  │  │  ││  0x00007f43b5483f45: shl    $0x3,%rax
                  │  │  ││  0x00007f43b5483f49: mov    %edi,%r10d
                  │  │  ││  0x00007f43b5483f4c: add    $0xfffffffffffffffd,%r10d
  0.08%    0.06%  │  │  ││  0x00007f43b5483f50: cmp    %r10d,%edi
                  │  │  ││  0x00007f43b5483f53: cmovl  %ebx,%r10d
                  │  │  ││  0x00007f43b5483f57: cmp    $0x1,%r10d
                  │  │  ││  0x00007f43b5483f5b: jle    0x00007f43b548403d
                  │  │  ││  0x00007f43b5483f61: mov    $0x1,%esi
  0.02%    0.12%  │  │  ││  0x00007f43b5483f66: nopw   0x0(%rax,%rax,1)   ;*aload_0
                  │  │  ││                                                ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
  0.94%    0.48%  │  │ ↗││  0x00007f43b5483f70: mov    0x10(%rax,%rsi,4),%r8d  ;*iaload
                  │  │ │││                                                ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
  8.16%    6.74%  │  │ │││  0x00007f43b5483f75: imul   %edx,%r8d
  0.10%    0.13%  │  │ │││  0x00007f43b5483f79: add    %r8d,0x10(%r11,%rsi,4)  ;*iastore
                  │  │ │││                                                ; - mat_mul.MyBenchmark::loop_ikj@101 (line 57)
 13.68%   10.88%  │  │ │││  0x00007f43b5483f7e: movslq %esi,%rbp
                  │  │ │││  0x00007f43b5483f81: mov    0x14(%rax,%rbp,4),%r8d  ;*iaload
                  │  │ │││                                                ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
  3.66%    2.87%  │  │ │││  0x00007f43b5483f86: imul   %edx,%r8d
  0.63%    0.98%  │  │ │││  0x00007f43b5483f8a: add    %r8d,0x14(%r11,%rbp,4)  ;*iastore
                  │  │ │││                                                ; - mat_mul.MyBenchmark::loop_ikj@101 (line 57)
 12.47%   16.13%  │  │ │││  0x00007f43b5483f8f: mov    0x18(%rax,%rbp,4),%r8d  ;*iaload
                  │  │ │││                                                ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
  0.94%    0.96%  │  │ │││  0x00007f43b5483f94: imul   %edx,%r8d
  7.91%   14.19%  │  │ │││  0x00007f43b5483f98: add    %r8d,0x18(%r11,%rbp,4)  ;*iastore
                  │  │ │││                                                ; - mat_mul.MyBenchmark::loop_ikj@101 (line 57)
  4.37%    7.70%  │  │ │││  0x00007f43b5483f9d: mov    0x1c(%rax,%rbp,4),%r8d  ;*iaload
                  │  │ │││                                                ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
  8.31%    5.81%  │  │ │││  0x00007f43b5483fa2: imul   %edx,%r8d
  0.02%    0.10%  │  │ │││  0x00007f43b5483fa6: add    %r8d,0x1c(%r11,%rbp,4)  ;*iastore
                  │  │ │││                                                ; - mat_mul.MyBenchmark::loop_ikj@101 (line 57)
 13.72%   14.26%  │  │ │││  0x00007f43b5483fab: mov    %esi,%ebp
                  │  │ │││  0x00007f43b5483fad: add    $0x2,%ebp
  3.94%    2.50%  │  │ │││  0x00007f43b5483fb0: vmovq  %xmm0,%r8
  0.75%    0.37%  │  │ │││  0x00007f43b5483fb5: mov    %ebp,0x14(%r8)     ;*putfield j
                  │  │ │││                                                ; - mat_mul.MyBenchmark::loop_ikj@109 (line 56)
  9.62%    6.26%  │  │ │││  0x00007f43b5483fb9: add    $0x4,%esi          ;*iadd
                  │  │ │││                                                ; - mat_mul.MyBenchmark::loop_ikj@108 (line 56)
  0.02%           │  │ │││  0x00007f43b5483fbc: mov    %esi,0x14(%r8)     ;*putfield j
                  │  │ │││                                                ; - mat_mul.MyBenchmark::loop_ikj@109 (line 56)
  3.56%    3.60%  │  │ │││  0x00007f43b5483fc0: cmp    %r10d,%esi
                  │  │ ╰││  0x00007f43b5483fc3: jl     0x00007f43b5483f70  ;*if_icmpge
                  │  │  ││                                                ; - mat_mul.MyBenchmark::loop_ikj@63 (line 56)
           0.02%  │  │  ││  0x00007f43b5483fc5: cmp    %edi,%esi
                  │  │  ╰│  0x00007f43b5483fc7: jl     0x00007f43b5483e38
                  │  │   ╰  0x00007f43b5483fcd: jmpq   0x00007f43b5483e55
                  ↘  │      0x00007f43b5483fd2: mov    0xc(%r10),%r11d    ;*getfield N
                     │                                                    ; - mat_mul.MyBenchmark::loop_ikj@26 (line 54)
                     │      0x00007f43b5483fd6: jmpq   0x00007f43b5483dff
                     ↘      0x00007f43b5483fdb: mov    $0xffffffe4,%esi
                            0x00007f43b5483fe0: mov    %r13,(%rsp)
                            0x00007f43b5483fe4: vmovsd %xmm0,0x8(%rsp)
                            0x00007f43b5483fea: mov    %r10d,0x10(%rsp)
....................................................................................................
 96.67%   96.98%  <total for region 1>

....[Hottest Regions]...............................................................................
 96.67%   96.98%         C2, level 4  mat_mul.MyBenchmark::loop_ikj, version 579 (397 bytes) 
  0.65%    0.64%              kernel  [unknown] (0 bytes) 
  0.12%                       kernel  [unknown] (0 bytes) 
  0.08%    0.04%              kernel  [unknown] (3 bytes) 
  0.08%    0.08%           libjvm.so  RelocIterator::initialize (65 bytes) 
  0.06%    0.08%              kernel  [unknown] (32 bytes) 
  0.06%            libhsdis-amd64.so  oappend (0 bytes) 
  0.06%    0.02%           libjvm.so  Monitor::unlock (25 bytes) 
  0.04%                       kernel  [unknown] (0 bytes) 
  0.04%    0.02%              kernel  [unknown] (30 bytes) 
  0.04%    0.02%              kernel  [unknown] (0 bytes) 
  0.04%    0.02%              kernel  [unknown] (37 bytes) 
  0.04%                       kernel  [unknown] (0 bytes) 
  0.04%    0.04%              kernel  [unknown] (24 bytes) 
  0.04%                       kernel  [unknown] (0 bytes) 
  0.04%                 libc-2.12.so  _IO_file_xsputn@@GLIBC_2.2.5 (6 bytes) 
  0.04%                    libjvm.so  xmlTextStream::write (10 bytes) 
  0.02%                       kernel  [unknown] (0 bytes) 
  0.02%                       kernel  [unknown] (0 bytes) 
  0.02%                       kernel  [unknown] (0 bytes) 
  1.81%    2.08%  <...other 172 warm regions...>
....................................................................................................
 99.98%  100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 96.69%   96.98%         C2, level 4  mat_mul.MyBenchmark::loop_ikj, version 579 
  2.21%    2.02%              kernel  [unknown] 
  0.08%    0.08%           libjvm.so  RelocIterator::initialize 
  0.06%            libhsdis-amd64.so  oappend 
  0.06%                 libc-2.12.so  _IO_file_xsputn@@GLIBC_2.2.5 
  0.06%    0.02%           libjvm.so  Monitor::unlock 
  0.04%    0.06%        libc-2.12.so  _IO_fwrite 
  0.04%                    libjvm.so  jio_print 
  0.04%            libhsdis-amd64.so  print_insn 
  0.04%                    libjvm.so  xmlTextStream::write 
  0.04%                    libjvm.so  outputStream::print 
  0.02%    0.06%        libc-2.12.so  __strchr_sse42 
  0.02%                    libjvm.so  ImplicitExceptionTable::at 
  0.02%                    libjvm.so  PcDesc::real_pc 
  0.02%    0.02%         interpreter  invoke return entry points  
  0.02%                    libjvm.so  CompilationPolicy::can_be_compiled 
  0.02%    0.02%  libpthread-2.12.so  [unknown] 
  0.02%                    libjvm.so  nmethod::print_block_comment 
  0.02%                 libc-2.12.so  _IO_file_write@@GLIBC_2.2.5 
  0.02%                    libjvm.so  CodeBuffer::relocate_code_to 
  0.46%    0.25%  <...other 24 warm methods...>
....................................................................................................
 99.98%   99.50%  <totals>

....[Distribution by Source]........................................................................
 96.69%   96.98%         C2, level 4
  2.21%    2.02%              kernel
  0.56%    0.48%           libjvm.so
  0.27%    0.38%        libc-2.12.so
  0.10%    0.02%   libhsdis-amd64.so
  0.08%    0.06%  libpthread-2.12.so
  0.06%    0.02%         interpreter
  0.02%    0.04%         C1, level 3
....................................................................................................
 99.98%  100.00%  <totals>



# JMH version: 1.19
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /opt/jdk1.8.0_131/jre/bin/java
# VM options: -XX:+UnlockDiagnosticVMOptions -XX:CompileCommand=print,MyBenchmark
# Warmup: 3 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: mat_mul.MyBenchmark.loop_ikj
# Parameters: (N_str = 1024)

# Run progress: 90.00% complete, ETA 00:00:30
# Fork: 1 of 2
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 0.517 s/op
# Warmup Iteration   2: 0.663 s/op
# Warmup Iteration   3: 0.659 s/op
Iteration   1: 0.659 s/op
Iteration   2: 0.661 s/op
Iteration   3: 0.660 s/op
Iteration   4: 0.659 s/op
Iteration   5: 0.659 s/op
# Processing profiler results: LinuxPerfAsmProfiler 

# Run progress: 95.00% complete, ETA 00:00:15
# Fork: 2 of 2
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 0.354 s/op
# Warmup Iteration   2: 0.662 s/op
# Warmup Iteration   3: 0.660 s/op
Iteration   1: 0.660 s/op
Iteration   2: 0.662 s/op
Iteration   3: 0.659 s/op
Iteration   4: 0.659 s/op
Iteration   5: 0.660 s/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "mat_mul.MyBenchmark.loop_ikj":
  0.660 ±(99.9%) 0.002 s/op [Average]
  (min, avg, max) = (0.659, 0.660, 0.662), stdev = 0.001
  CI (99.9%): [0.658, 0.661] (assumes normal distribution)

Secondary result "mat_mul.MyBenchmark.loop_ikj:·asm":
PrintAssembly processed: 180114 total address lines.
Perf output processed (skipped 9.339 seconds):
 Column 1: cycles (6693 events)
 Column 2: instructions (6694 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
C2, level 4, mat_mul.MyBenchmark::loop_ikj, version 580 (392 bytes) 

                           0x00007fa3ad48199c: vmovq  %xmm0,%r10
                           0x00007fa3ad4819a1: movl   $0x0,0x18(%r10)    ;*putfield k
                                                                         ; - mat_mul.MyBenchmark::loop_ikj@18 (line 54)
                           0x00007fa3ad4819a9: test   %edi,%edi
                           0x00007fa3ad4819ab: jle    0x00007fa3ad481bb8  ;*if_icmpge
                                                                         ; - mat_mul.MyBenchmark::loop_ikj@29 (line 54)
                           0x00007fa3ad4819b1: xor    %ecx,%ecx
                  ╭        0x00007fa3ad4819b3: jmp    0x00007fa3ad4819f7
                  │        0x00007fa3ad4819b5: xchg   %ax,%ax            ;*aload_0
                  │                                                      ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
  0.04%    0.06%  │↗   ↗   0x00007fa3ad4819b8: mov    0x10(%rax,%rsi,4),%r10d  ;*iaload
                  ││   │                                                 ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
           0.04%  ││   │   0x00007fa3ad4819bd: imul   %edx,%r10d
  0.01%    0.04%  ││   │   0x00007fa3ad4819c1: add    %r10d,0x10(%r11,%rsi,4)  ;*iastore
                  ││   │                                                 ; - mat_mul.MyBenchmark::loop_ikj@101 (line 57)
  0.27%    0.24%  ││   │   0x00007fa3ad4819c6: inc    %esi               ;*iadd
                  ││   │                                                 ; - mat_mul.MyBenchmark::loop_ikj@108 (line 56)
  0.03%           ││   │   0x00007fa3ad4819c8: vmovq  %xmm0,%r10
  0.09%    0.06%  ││   │   0x00007fa3ad4819cd: mov    %esi,0x14(%r10)    ;*putfield j
                  ││   │                                                 ; - mat_mul.MyBenchmark::loop_ikj@109 (line 56)
  0.06%    0.21%  ││   │   0x00007fa3ad4819d1: cmp    %edi,%esi
                  │╰   │   0x00007fa3ad4819d3: jl     0x00007fa3ad4819b8  ;*aload_0
                  │    │                                                 ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
           0.03%  │    │↗  0x00007fa3ad4819d5: mov    %r14d,%edi
  0.01%    0.03%  │  ↗ ││  0x00007fa3ad4819d8: vmovq  %xmm0,%r10
  0.01%           │  │ ││  0x00007fa3ad4819dd: mov    0xc(%r10),%r11d    ;*getfield N
                  │  │ ││                                                ; - mat_mul.MyBenchmark::loop_ikj@26 (line 54)
                  │  │ ││  0x00007fa3ad4819e1: inc    %ecx               ;*iadd
                  │  │ ││                                                ; - mat_mul.MyBenchmark::loop_ikj@121 (line 54)
           0.03%  │  │ ││  0x00007fa3ad4819e3: mov    %ecx,0x18(%r10)    ; OopMap{r13=Oop xmm0=Oop off=231}
                  │  │ ││                                                ;*goto
                  │  │ ││                                                ; - mat_mul.MyBenchmark::loop_ikj@125 (line 54)
  0.03%    0.04%  │  │ ││  0x00007fa3ad4819e7: test   %eax,0x1586f613(%rip)        # 0x00007fa3c2cf1000
                  │  │ ││                                                ;*goto
                  │  │ ││                                                ; - mat_mul.MyBenchmark::loop_ikj@125 (line 54)
                  │  │ ││                                                ;   {poll}
  0.03%    0.03%  │  │ ││  0x00007fa3ad4819ed: cmp    %edi,%ecx
                  │  │ ││  0x00007fa3ad4819ef: jge    0x00007fa3ad48197c
                  │  │ ││  0x00007fa3ad4819f1: mov    %r14d,%edi
                  │  │ ││  0x00007fa3ad4819f4: mov    %r11d,%r14d        ;*getfield N
                  │  │ ││                                                ; - mat_mul.MyBenchmark::loop_ikj@60 (line 56)
           0.01%  ↘  │ ││  0x00007fa3ad4819f7: vmovq  %xmm0,%r10
  0.06%    0.03%     │ ││  0x00007fa3ad4819fc: mov    0x28(%r10),%r10d   ;*getfield shm
                     │ ││                                                ; - mat_mul.MyBenchmark::loop_ikj@34 (line 55)
           0.01%     │ ││  0x00007fa3ad481a00: mov    0xc(%r12,%r10,8),%ebp  ; implicit exception: dispatches to 0x00007fa3ad481bd1
  0.13%    0.09%     │ ││  0x00007fa3ad481a05: cmp    %ebp,%r9d
                    ╭│ ││  0x00007fa3ad481a08: jae    0x00007fa3ad481b52
  0.10%    0.09%    ││ ││  0x00007fa3ad481a0e: lea    (%r12,%r10,8),%rax
                    ││ ││  0x00007fa3ad481a12: mov    0x10(%rax,%r9,4),%r10d  ;*aaload
                    ││ ││                                                ; - mat_mul.MyBenchmark::loop_ikj@41 (line 55)
  0.01%             ││ ││  0x00007fa3ad481a17: mov    0xc(%r12,%r10,8),%r8d  ; implicit exception: dispatches to 0x00007fa3ad481be5
  0.25%    0.21%    ││ ││  0x00007fa3ad481a1c: cmp    %r8d,%ecx
                    ││ ││  0x00007fa3ad481a1f: jae    0x00007fa3ad481b75  ;*iaload
                    ││ ││                                                ; - mat_mul.MyBenchmark::loop_ikj@46 (line 55)
  0.07%    0.01%    ││ ││  0x00007fa3ad481a25: vmovq  %xmm0,%r11
                    ││ ││  0x00007fa3ad481a2a: movl   $0x0,0x14(%r11)    ;*putfield j
                    ││ ││                                                ; - mat_mul.MyBenchmark::loop_ikj@52 (line 56)
                    ││ ││  0x00007fa3ad481a32: shl    $0x3,%r10
                    ││ ││  0x00007fa3ad481a36: mov    0x10(%r10,%rcx,4),%edx  ;*iaload
                    ││ ││                                                ; - mat_mul.MyBenchmark::loop_ikj@46 (line 55)
  0.09%    0.07%    ││ ││  0x00007fa3ad481a3b: mov    %edx,0x20(%r11)    ;*putfield aik
                    ││ ││                                                ; - mat_mul.MyBenchmark::loop_ikj@47 (line 55)
                    ││ ││  0x00007fa3ad481a3f: test   %edi,%edi
                    │╰ ││  0x00007fa3ad481a41: jle    0x00007fa3ad4819d8  ;*if_icmpge
                    │  ││                                                ; - mat_mul.MyBenchmark::loop_ikj@63 (line 56)
                    │  ││  0x00007fa3ad481a43: mov    0x2c(%r11),%r11d   ;*getfield res
                    │  ││                                                ; - mat_mul.MyBenchmark::loop_ikj@67 (line 57)
                    │  ││  0x00007fa3ad481a47: mov    0xc(%r12,%r11,8),%r10d  ; implicit exception: dispatches to 0x00007fa3ad481b99
  0.04%    0.01%    │  ││  0x00007fa3ad481a4c: cmp    %r10d,%r9d
                    │  ││  0x00007fa3ad481a4f: jae    0x00007fa3ad481b99  ;*aload_0
                    │  ││                                                ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
  0.01%             │  ││  0x00007fa3ad481a55: lea    (%r12,%r11,8),%r10
                    │  ││  0x00007fa3ad481a59: mov    0x10(%r10,%r9,4),%esi  ;*aaload
                    │  ││                                                ; - mat_mul.MyBenchmark::loop_ikj@74 (line 57)
                    │  ││  0x00007fa3ad481a5e: mov    0xc(%r12,%rsi,8),%r10d  ;*iaload
                    │  ││                                                ; - mat_mul.MyBenchmark::loop_ikj@80 (line 57)
                    │  ││                                                ; implicit exception: dispatches to 0x00007fa3ad481b99
  0.10%    0.10%    │  ││  0x00007fa3ad481a63: test   %r10d,%r10d
                    │  ││  0x00007fa3ad481a66: jbe    0x00007fa3ad481b99
                    │  ││  0x00007fa3ad481a6c: mov    %edi,%r11d
                    │  ││  0x00007fa3ad481a6f: dec    %r11d
                    │  ││  0x00007fa3ad481a72: cmp    %r10d,%r11d
                    │  ││  0x00007fa3ad481a75: jae    0x00007fa3ad481b99
  0.06%    0.10%    │  ││  0x00007fa3ad481a7b: cmp    %ebp,%ecx
                    │  ││  0x00007fa3ad481a7d: jae    0x00007fa3ad481b99  ;*aload_0
                    │  ││                                                ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
                    │  ││  0x00007fa3ad481a83: mov    0x10(%rax,%rcx,4),%eax  ;*aaload
                    │  ││                                                ; - mat_mul.MyBenchmark::loop_ikj@93 (line 57)
                    │  ││  0x00007fa3ad481a87: mov    0xc(%r12,%rax,8),%r8d  ;*iaload
                    │  ││                                                ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
                    │  ││                                                ; implicit exception: dispatches to 0x00007fa3ad481b99
                    │  ││  0x00007fa3ad481a8c: test   %r8d,%r8d
                    │  ││  0x00007fa3ad481a8f: jbe    0x00007fa3ad481b99
           0.06%    │  ││  0x00007fa3ad481a95: cmp    %r8d,%r11d
                    │  ││  0x00007fa3ad481a98: jae    0x00007fa3ad481b99  ;*aload_0
                    │  ││                                                ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
           0.01%    │  ││  0x00007fa3ad481a9e: mov    %edx,%r10d
                    │  ││  0x00007fa3ad481aa1: imul   0x10(%r12,%rax,8),%r10d
                    │  ││  0x00007fa3ad481aa7: vmovq  %xmm0,%r11
  0.03%    0.01%    │  ││  0x00007fa3ad481aac: movl   $0x1,0x14(%r11)    ;*putfield j
                    │  ││                                                ; - mat_mul.MyBenchmark::loop_ikj@109 (line 56)
                    │  ││  0x00007fa3ad481ab4: mov    0x10(%r12,%rsi,8),%r11d  ;*iaload
                    │  ││                                                ; - mat_mul.MyBenchmark::loop_ikj@80 (line 57)
                    │  ││  0x00007fa3ad481ab9: add    %r11d,%r10d
  0.01%             │  ││  0x00007fa3ad481abc: mov    %r10d,0x10(%r12,%rsi,8)  ;*iastore
                    │  ││                                                ; - mat_mul.MyBenchmark::loop_ikj@101 (line 57)
  0.09%    0.10%    │  ││  0x00007fa3ad481ac1: lea    (%r12,%rsi,8),%r11
           0.01%    │  ││  0x00007fa3ad481ac5: shl    $0x3,%rax
                    │  ││  0x00007fa3ad481ac9: mov    %edi,%r10d
                    │  ││  0x00007fa3ad481acc: add    $0xfffffffffffffffd,%r10d
  0.07%             │  ││  0x00007fa3ad481ad0: cmp    %r10d,%edi
                    │  ││  0x00007fa3ad481ad3: cmovl  %ebx,%r10d
                    │  ││  0x00007fa3ad481ad7: cmp    $0x1,%r10d
                    │  ││  0x00007fa3ad481adb: jle    0x00007fa3ad481bb1
                    │  ││  0x00007fa3ad481ae1: mov    $0x1,%esi
  0.04%    0.01%    │  ││  0x00007fa3ad481ae6: nopw   0x0(%rax,%rax,1)   ;*aload_0
                    │  ││                                                ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
  0.46%    0.51%    │ ↗││  0x00007fa3ad481af0: mov    0x10(%rax,%rsi,4),%r8d  ;*iaload
                    │ │││                                                ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
 11.07%    7.65%    │ │││  0x00007fa3ad481af5: imul   %edx,%r8d
  0.18%    0.15%    │ │││  0x00007fa3ad481af9: add    %r8d,0x10(%r11,%rsi,4)  ;*iastore
                    │ │││                                                ; - mat_mul.MyBenchmark::loop_ikj@101 (line 57)
 13.46%   10.68%    │ │││  0x00007fa3ad481afe: movslq %esi,%rbp
                    │ │││  0x00007fa3ad481b01: mov    0x14(%rax,%rbp,4),%r8d  ;*iaload
                    │ │││                                                ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
  2.30%    1.67%    │ │││  0x00007fa3ad481b06: imul   %edx,%r8d
  0.67%    0.58%    │ │││  0x00007fa3ad481b0a: add    %r8d,0x14(%r11,%rbp,4)  ;*iastore
                    │ │││                                                ; - mat_mul.MyBenchmark::loop_ikj@101 (line 57)
 12.36%   17.39%    │ │││  0x00007fa3ad481b0f: mov    0x18(%rax,%rbp,4),%r8d  ;*iaload
                    │ │││                                                ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
  0.69%    0.66%    │ │││  0x00007fa3ad481b14: imul   %edx,%r8d
 10.35%   17.61%    │ │││  0x00007fa3ad481b18: add    %r8d,0x18(%r11,%rbp,4)  ;*iastore
                    │ │││                                                ; - mat_mul.MyBenchmark::loop_ikj@101 (line 57)
  2.91%    3.88%    │ │││  0x00007fa3ad481b1d: mov    0x1c(%rax,%rbp,4),%r8d  ;*iaload
                    │ │││                                                ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
 10.97%    7.36%    │ │││  0x00007fa3ad481b22: imul   %edx,%r8d
  0.03%    0.04%    │ │││  0x00007fa3ad481b26: add    %r8d,0x1c(%r11,%rbp,4)  ;*iastore
                    │ │││                                                ; - mat_mul.MyBenchmark::loop_ikj@101 (line 57)
 13.92%   16.58%    │ │││  0x00007fa3ad481b2b: mov    %esi,%ebp
                    │ │││  0x00007fa3ad481b2d: add    $0x2,%ebp
  1.81%    1.25%    │ │││  0x00007fa3ad481b30: vmovq  %xmm0,%r8
  0.67%    0.55%    │ │││  0x00007fa3ad481b35: mov    %ebp,0x14(%r8)     ;*putfield j
                    │ │││                                                ; - mat_mul.MyBenchmark::loop_ikj@109 (line 56)
 10.77%    7.90%    │ │││  0x00007fa3ad481b39: add    $0x4,%esi          ;*iadd
                    │ │││                                                ; - mat_mul.MyBenchmark::loop_ikj@108 (line 56)
                    │ │││  0x00007fa3ad481b3c: mov    %esi,0x14(%r8)     ;*putfield j
                    │ │││                                                ; - mat_mul.MyBenchmark::loop_ikj@109 (line 56)
  2.15%    2.05%    │ │││  0x00007fa3ad481b40: cmp    %r10d,%esi
                    │ ╰││  0x00007fa3ad481b43: jl     0x00007fa3ad481af0  ;*if_icmpge
                    │  ││                                                ; - mat_mul.MyBenchmark::loop_ikj@63 (line 56)
                    │  ││  0x00007fa3ad481b45: cmp    %edi,%esi
                    │  ╰│  0x00007fa3ad481b47: jl     0x00007fa3ad4819b8
                    │   ╰  0x00007fa3ad481b4d: jmpq   0x00007fa3ad4819d5
                    ↘      0x00007fa3ad481b52: mov    $0xffffffe4,%esi
                           0x00007fa3ad481b57: mov    %r13,(%rsp)
                           0x00007fa3ad481b5b: vmovsd %xmm0,0x8(%rsp)
                           0x00007fa3ad481b61: mov    %r10d,0x10(%rsp)
....................................................................................................
 96.59%   98.34%  <total for region 1>

....[Hottest Regions]...............................................................................
 96.59%   98.34%         C2, level 4  mat_mul.MyBenchmark::loop_ikj, version 580 (392 bytes) 
  1.00%                       kernel  [unknown] (0 bytes) 
  0.19%                       kernel  [unknown] (0 bytes) 
  0.12%    0.10%              kernel  [unknown] (0 bytes) 
  0.10%    0.01%              kernel  [unknown] (20 bytes) 
  0.06%                       kernel  [unknown] (0 bytes) 
  0.06%    0.03%              kernel  [unknown] (0 bytes) 
  0.04%                       kernel  [unknown] (0 bytes) 
  0.04%    0.01%              kernel  [unknown] (4 bytes) 
  0.04%                       kernel  [unknown] (16 bytes) 
  0.04%                       kernel  [unknown] (14 bytes) 
  0.04%                       kernel  [unknown] (0 bytes) 
  0.04%                    libjvm.so  Monitor::unlock (25 bytes) 
  0.03%                       kernel  [unknown] (0 bytes) 
  0.03%                       kernel  [unknown] (0 bytes) 
  0.03%                       kernel  [unknown] (21 bytes) 
  0.03%                       kernel  [unknown] (22 bytes) 
  0.03%    0.04%              kernel  [unknown] (0 bytes) 
  0.03%                       kernel  [unknown] (0 bytes) 
  0.03%    0.01%        libc-2.12.so  __strlen_sse42 (19 bytes) 
  1.39%    1.42%  <...other 156 warm regions...>
....................................................................................................
100.00%   99.99%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 96.59%   98.36%         C2, level 4  mat_mul.MyBenchmark::loop_ikj, version 580 
  2.70%    0.75%              kernel  [unknown] 
  0.06%    0.03%   libhsdis-amd64.so  print_insn 
  0.06%    0.01%        libc-2.12.so  __strlen_sse42 
  0.06%    0.06%           libjvm.so  RelocIterator::initialize 
  0.04%                    libjvm.so  Monitor::unlock 
  0.03%    0.03%           libjvm.so  fileStream::write 
  0.03%    0.01%  libpthread-2.12.so  __pthread_enable_asynccancel 
  0.03%    0.04%           libjvm.so  xmlTextStream::write 
  0.03%                    libjvm.so  stringStream::write 
  0.03%    0.10%        libc-2.12.so  vfprintf 
  0.01%                 libc-2.12.so  __strchr_sse42 
  0.01%                  C1, level 3  java.lang.StringBuilder::&lt;init&gt;, version 64 
  0.01%                    libjvm.so  GraphBuilder::try_inline_full 
  0.01%                    libjvm.so  Relocation::pd_call_destination 
  0.01%                    libjvm.so  InterpreterRuntime::frequency_counter_overflow_inner 
  0.01%    0.03%  libpthread-2.12.so  [unknown] 
  0.01%                    libjvm.so  nmethod::print_code_comment_on 
  0.01%    0.03%        libc-2.12.so  __strchrnul 
  0.01%                    libjvm.so  Thread::muxRelease 
  0.19%    0.13%  <...other 13 warm methods...>
....................................................................................................
100.00%   99.60%  <totals>

....[Distribution by Source]........................................................................
 96.59%   98.36%         C2, level 4
  2.70%    0.75%              kernel
  0.40%    0.36%           libjvm.so
  0.16%    0.39%        libc-2.12.so
  0.06%    0.07%  libpthread-2.12.so
  0.06%    0.04%   libhsdis-amd64.so
  0.01%                  C1, level 3
....................................................................................................
100.00%   99.99%  <totals>

PrintAssembly processed: 178648 total address lines.
Perf output processed (skipped 9.010 seconds):
 Column 1: cycles (6762 events)
 Column 2: instructions (6764 events)

Hottest code regions (>10.00% "cycles" events):

....[Hottest Region 1]..............................................................................
C2, level 4, mat_mul.MyBenchmark::loop_ikj, version 577 (392 bytes) 

                           0x00007face5487a1c: vmovq  %xmm0,%r10
                           0x00007face5487a21: movl   $0x0,0x18(%r10)    ;*putfield k
                                                                         ; - mat_mul.MyBenchmark::loop_ikj@18 (line 54)
                           0x00007face5487a29: test   %edi,%edi
                           0x00007face5487a2b: jle    0x00007face5487c38  ;*if_icmpge
                                                                         ; - mat_mul.MyBenchmark::loop_ikj@29 (line 54)
                           0x00007face5487a31: xor    %ecx,%ecx
                  ╭        0x00007face5487a33: jmp    0x00007face5487a77
                  │        0x00007face5487a35: xchg   %ax,%ax            ;*aload_0
                  │                                                      ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
  0.07%           │↗   ↗   0x00007face5487a38: mov    0x10(%rax,%rsi,4),%r10d  ;*iaload
                  ││   │                                                 ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
  0.03%    0.03%  ││   │   0x00007face5487a3d: imul   %edx,%r10d
  0.06%    0.04%  ││   │   0x00007face5487a41: add    %r10d,0x10(%r11,%rsi,4)  ;*iastore
                  ││   │                                                 ; - mat_mul.MyBenchmark::loop_ikj@101 (line 57)
  0.15%    0.21%  ││   │   0x00007face5487a46: inc    %esi               ;*iadd
                  ││   │                                                 ; - mat_mul.MyBenchmark::loop_ikj@108 (line 56)
  0.01%           ││   │   0x00007face5487a48: vmovq  %xmm0,%r10
  0.06%    0.01%  ││   │   0x00007face5487a4d: mov    %esi,0x14(%r10)    ;*putfield j
                  ││   │                                                 ; - mat_mul.MyBenchmark::loop_ikj@109 (line 56)
  0.12%    0.07%  ││   │   0x00007face5487a51: cmp    %edi,%esi
                  │╰   │   0x00007face5487a53: jl     0x00007face5487a38  ;*aload_0
                  │    │                                                 ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
  0.01%    0.01%  │    │↗  0x00007face5487a55: mov    %r14d,%edi
  0.01%    0.03%  │  ↗ ││  0x00007face5487a58: vmovq  %xmm0,%r10
  0.01%    0.01%  │  │ ││  0x00007face5487a5d: mov    0xc(%r10),%r11d    ;*getfield N
                  │  │ ││                                                ; - mat_mul.MyBenchmark::loop_ikj@26 (line 54)
           0.01%  │  │ ││  0x00007face5487a61: inc    %ecx               ;*iadd
                  │  │ ││                                                ; - mat_mul.MyBenchmark::loop_ikj@121 (line 54)
                  │  │ ││  0x00007face5487a63: mov    %ecx,0x18(%r10)    ; OopMap{r13=Oop xmm0=Oop off=231}
                  │  │ ││                                                ;*goto
                  │  │ ││                                                ; - mat_mul.MyBenchmark::loop_ikj@125 (line 54)
  0.03%    0.01%  │  │ ││  0x00007face5487a67: test   %eax,0x14cfb593(%rip)        # 0x00007facfa183000
                  │  │ ││                                                ;*goto
                  │  │ ││                                                ; - mat_mul.MyBenchmark::loop_ikj@125 (line 54)
                  │  │ ││                                                ;   {poll}
  0.09%    0.09%  │  │ ││  0x00007face5487a6d: cmp    %edi,%ecx
                  │  │ ││  0x00007face5487a6f: jge    0x00007face54879fc
                  │  │ ││  0x00007face5487a71: mov    %r14d,%edi
                  │  │ ││  0x00007face5487a74: mov    %r11d,%r14d        ;*getfield N
                  │  │ ││                                                ; - mat_mul.MyBenchmark::loop_ikj@60 (line 56)
           0.01%  ↘  │ ││  0x00007face5487a77: vmovq  %xmm0,%r10
  0.04%    0.01%     │ ││  0x00007face5487a7c: mov    0x28(%r10),%r10d   ;*getfield shm
                     │ ││                                                ; - mat_mul.MyBenchmark::loop_ikj@34 (line 55)
           0.01%     │ ││  0x00007face5487a80: mov    0xc(%r12,%r10,8),%ebp  ; implicit exception: dispatches to 0x00007face5487c51
  0.04%    0.01%     │ ││  0x00007face5487a85: cmp    %ebp,%r9d
                    ╭│ ││  0x00007face5487a88: jae    0x00007face5487bd2
  0.07%    0.01%    ││ ││  0x00007face5487a8e: lea    (%r12,%r10,8),%rax
                    ││ ││  0x00007face5487a92: mov    0x10(%rax,%r9,4),%r10d  ;*aaload
                    ││ ││                                                ; - mat_mul.MyBenchmark::loop_ikj@41 (line 55)
  0.01%             ││ ││  0x00007face5487a97: mov    0xc(%r12,%r10,8),%r8d  ; implicit exception: dispatches to 0x00007face5487c65
  0.25%    0.25%    ││ ││  0x00007face5487a9c: cmp    %r8d,%ecx
                    ││ ││  0x00007face5487a9f: jae    0x00007face5487bf5  ;*iaload
                    ││ ││                                                ; - mat_mul.MyBenchmark::loop_ikj@46 (line 55)
  0.03%    0.01%    ││ ││  0x00007face5487aa5: vmovq  %xmm0,%r11
                    ││ ││  0x00007face5487aaa: movl   $0x0,0x14(%r11)    ;*putfield j
                    ││ ││                                                ; - mat_mul.MyBenchmark::loop_ikj@52 (line 56)
                    ││ ││  0x00007face5487ab2: shl    $0x3,%r10
                    ││ ││  0x00007face5487ab6: mov    0x10(%r10,%rcx,4),%edx  ;*iaload
                    ││ ││                                                ; - mat_mul.MyBenchmark::loop_ikj@46 (line 55)
  0.04%    0.06%    ││ ││  0x00007face5487abb: mov    %edx,0x20(%r11)    ;*putfield aik
                    ││ ││                                                ; - mat_mul.MyBenchmark::loop_ikj@47 (line 55)
  0.01%    0.01%    ││ ││  0x00007face5487abf: test   %edi,%edi
                    │╰ ││  0x00007face5487ac1: jle    0x00007face5487a58  ;*if_icmpge
                    │  ││                                                ; - mat_mul.MyBenchmark::loop_ikj@63 (line 56)
                    │  ││  0x00007face5487ac3: mov    0x2c(%r11),%r11d   ;*getfield res
                    │  ││                                                ; - mat_mul.MyBenchmark::loop_ikj@67 (line 57)
                    │  ││  0x00007face5487ac7: mov    0xc(%r12,%r11,8),%r10d  ; implicit exception: dispatches to 0x00007face5487c19
  0.01%             │  ││  0x00007face5487acc: cmp    %r10d,%r9d
                    │  ││  0x00007face5487acf: jae    0x00007face5487c19  ;*aload_0
                    │  ││                                                ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
                    │  ││  0x00007face5487ad5: lea    (%r12,%r11,8),%r10
                    │  ││  0x00007face5487ad9: mov    0x10(%r10,%r9,4),%esi  ;*aaload
                    │  ││                                                ; - mat_mul.MyBenchmark::loop_ikj@74 (line 57)
                    │  ││  0x00007face5487ade: mov    0xc(%r12,%rsi,8),%r10d  ;*iaload
                    │  ││                                                ; - mat_mul.MyBenchmark::loop_ikj@80 (line 57)
                    │  ││                                                ; implicit exception: dispatches to 0x00007face5487c19
  0.06%    0.09%    │  ││  0x00007face5487ae3: test   %r10d,%r10d
                    │  ││  0x00007face5487ae6: jbe    0x00007face5487c19
  0.04%    0.01%    │  ││  0x00007face5487aec: mov    %edi,%r11d
                    │  ││  0x00007face5487aef: dec    %r11d
                    │  ││  0x00007face5487af2: cmp    %r10d,%r11d
                    │  ││  0x00007face5487af5: jae    0x00007face5487c19
  0.10%    0.07%    │  ││  0x00007face5487afb: cmp    %ebp,%ecx
                    │  ││  0x00007face5487afd: jae    0x00007face5487c19  ;*aload_0
                    │  ││                                                ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
                    │  ││  0x00007face5487b03: mov    0x10(%rax,%rcx,4),%eax  ;*aaload
                    │  ││                                                ; - mat_mul.MyBenchmark::loop_ikj@93 (line 57)
  0.01%             │  ││  0x00007face5487b07: mov    0xc(%r12,%rax,8),%r8d  ;*iaload
                    │  ││                                                ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
                    │  ││                                                ; implicit exception: dispatches to 0x00007face5487c19
  0.01%             │  ││  0x00007face5487b0c: test   %r8d,%r8d
                    │  ││  0x00007face5487b0f: jbe    0x00007face5487c19
  0.06%    0.09%    │  ││  0x00007face5487b15: cmp    %r8d,%r11d
                    │  ││  0x00007face5487b18: jae    0x00007face5487c19  ;*aload_0
                    │  ││                                                ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
                    │  ││  0x00007face5487b1e: mov    %edx,%r10d
                    │  ││  0x00007face5487b21: imul   0x10(%r12,%rax,8),%r10d
                    │  ││  0x00007face5487b27: vmovq  %xmm0,%r11
  0.03%    0.07%    │  ││  0x00007face5487b2c: movl   $0x1,0x14(%r11)    ;*putfield j
                    │  ││                                                ; - mat_mul.MyBenchmark::loop_ikj@109 (line 56)
                    │  ││  0x00007face5487b34: mov    0x10(%r12,%rsi,8),%r11d  ;*iaload
                    │  ││                                                ; - mat_mul.MyBenchmark::loop_ikj@80 (line 57)
                    │  ││  0x00007face5487b39: add    %r11d,%r10d
                    │  ││  0x00007face5487b3c: mov    %r10d,0x10(%r12,%rsi,8)  ;*iastore
                    │  ││                                                ; - mat_mul.MyBenchmark::loop_ikj@101 (line 57)
  0.07%    0.06%    │  ││  0x00007face5487b41: lea    (%r12,%rsi,8),%r11
                    │  ││  0x00007face5487b45: shl    $0x3,%rax
                    │  ││  0x00007face5487b49: mov    %edi,%r10d
                    │  ││  0x00007face5487b4c: add    $0xfffffffffffffffd,%r10d
  0.04%    0.04%    │  ││  0x00007face5487b50: cmp    %r10d,%edi
  0.01%             │  ││  0x00007face5487b53: cmovl  %ebx,%r10d
                    │  ││  0x00007face5487b57: cmp    $0x1,%r10d
                    │  ││  0x00007face5487b5b: jle    0x00007face5487c31
                    │  ││  0x00007face5487b61: mov    $0x1,%esi
           0.12%    │  ││  0x00007face5487b66: nopw   0x0(%rax,%rax,1)   ;*aload_0
                    │  ││                                                ; - mat_mul.MyBenchmark::loop_ikj@66 (line 57)
  0.49%    0.43%    │ ↗││  0x00007face5487b70: mov    0x10(%rax,%rsi,4),%r8d  ;*iaload
                    │ │││                                                ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
 11.43%    7.91%    │ │││  0x00007face5487b75: imul   %edx,%r8d
  0.16%    0.30%    │ │││  0x00007face5487b79: add    %r8d,0x10(%r11,%rsi,4)  ;*iastore
                    │ │││                                                ; - mat_mul.MyBenchmark::loop_ikj@101 (line 57)
 13.75%   10.79%    │ │││  0x00007face5487b7e: movslq %esi,%rbp
  0.01%             │ │││  0x00007face5487b81: mov    0x14(%rax,%rbp,4),%r8d  ;*iaload
                    │ │││                                                ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
  2.45%    1.58%    │ │││  0x00007face5487b86: imul   %edx,%r8d
  0.65%    0.58%    │ │││  0x00007face5487b8a: add    %r8d,0x14(%r11,%rbp,4)  ;*iastore
                    │ │││                                                ; - mat_mul.MyBenchmark::loop_ikj@101 (line 57)
 12.64%   17.31%    │ │││  0x00007face5487b8f: mov    0x18(%rax,%rbp,4),%r8d  ;*iaload
                    │ │││                                                ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
  0.35%    0.69%    │ │││  0x00007face5487b94: imul   %edx,%r8d
 10.47%   18.17%    │ │││  0x00007face5487b98: add    %r8d,0x18(%r11,%rbp,4)  ;*iastore
                    │ │││                                                ; - mat_mul.MyBenchmark::loop_ikj@101 (line 57)
  2.90%    4.15%    │ │││  0x00007face5487b9d: mov    0x1c(%rax,%rbp,4),%r8d  ;*iaload
                    │ │││                                                ; - mat_mul.MyBenchmark::loop_ikj@98 (line 57)
 11.03%    6.48%    │ │││  0x00007face5487ba2: imul   %edx,%r8d
           0.04%    │ │││  0x00007face5487ba6: add    %r8d,0x1c(%r11,%rbp,4)  ;*iastore
                    │ │││                                                ; - mat_mul.MyBenchmark::loop_ikj@101 (line 57)
 13.90%   16.06%    │ │││  0x00007face5487bab: mov    %esi,%ebp
                    │ │││  0x00007face5487bad: add    $0x2,%ebp
  2.40%    1.36%    │ │││  0x00007face5487bb0: vmovq  %xmm0,%r8
  0.44%    0.37%    │ │││  0x00007face5487bb5: mov    %ebp,0x14(%r8)     ;*putfield j
                    │ │││                                                ; - mat_mul.MyBenchmark::loop_ikj@109 (line 56)
 10.23%    7.32%    │ │││  0x00007face5487bb9: add    $0x4,%esi          ;*iadd
                    │ │││                                                ; - mat_mul.MyBenchmark::loop_ikj@108 (line 56)
                    │ │││  0x00007face5487bbc: mov    %esi,0x14(%r8)     ;*putfield j
                    │ │││                                                ; - mat_mul.MyBenchmark::loop_ikj@109 (line 56)
  2.34%    2.31%    │ │││  0x00007face5487bc0: cmp    %r10d,%esi
                    │ ╰││  0x00007face5487bc3: jl     0x00007face5487b70  ;*if_icmpge
                    │  ││                                                ; - mat_mul.MyBenchmark::loop_ikj@63 (line 56)
                    │  ││  0x00007face5487bc5: cmp    %edi,%esi
                    │  ╰│  0x00007face5487bc7: jl     0x00007face5487a38
                    │   ╰  0x00007face5487bcd: jmpq   0x00007face5487a55
                    ↘      0x00007face5487bd2: mov    $0xffffffe4,%esi
                           0x00007face5487bd7: mov    %r13,(%rsp)
                           0x00007face5487bdb: vmovsd %xmm0,0x8(%rsp)
                           0x00007face5487be1: mov    %r10d,0x10(%rsp)
....................................................................................................
 97.32%   97.37%  <total for region 1>

....[Hottest Regions]...............................................................................
 97.32%   97.37%         C2, level 4  mat_mul.MyBenchmark::loop_ikj, version 577 (392 bytes) 
  0.81%    0.80%              kernel  [unknown] (0 bytes) 
  0.07%    0.06%              kernel  [unknown] (24 bytes) 
  0.06%                       kernel  [unknown] (0 bytes) 
  0.06%                       kernel  [unknown] (0 bytes) 
  0.04%    0.01%              kernel  [unknown] (59 bytes) 
  0.04%    0.01%              kernel  [unknown] (18 bytes) 
  0.04%           libpthread-2.12.so  pthread_getspecific (22 bytes) 
  0.04%                    libjvm.so  fileStream::write (0 bytes) 
  0.04%                    libjvm.so  xmlTextStream::write (14 bytes) 
  0.03%                       kernel  [unknown] (0 bytes) 
  0.03%    0.01%              kernel  [unknown] (18 bytes) 
  0.03%                       kernel  [unknown] (0 bytes) 
  0.03%    0.03%              kernel  [unknown] (0 bytes) 
  0.03%                       kernel  [unknown] (28 bytes) 
  0.03%                       kernel  [unknown] (0 bytes) 
  0.03%    0.03%              kernel  [unknown] (4 bytes) 
  0.03%                 libc-2.12.so  _IO_default_xsputn (0 bytes) 
  0.03%           libpthread-2.12.so  [unknown] (0 bytes) 
  0.01%    0.01%              kernel  [unknown] (0 bytes) 
  1.15%    1.66%  <...other 167 warm regions...>
....................................................................................................
 99.99%  100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 97.32%   97.37%         C2, level 4  mat_mul.MyBenchmark::loop_ikj, version 577 
  1.89%    1.95%              kernel  [unknown] 
  0.06%    0.01%           libjvm.so  xmlTextStream::write 
  0.04%                    libjvm.so  fileStream::write 
  0.04%           libpthread-2.12.so  pthread_getspecific 
  0.04%                 libc-2.12.so  _IO_default_xsputn 
  0.03%    0.07%   libhsdis-amd64.so  print_insn 
  0.03%           libpthread-2.12.so  [unknown] 
  0.03%    0.01%        libc-2.12.so  _IO_fflush 
  0.01%                    libjvm.so  os::elapsed_counter 
  0.01%            libhsdis-amd64.so  hsdis_read_memory_func 
  0.01%            libhsdis-amd64.so  oappend 
  0.01%            libhsdis-amd64.so  OP_E 
  0.01%                    libjvm.so  Matcher::xform 
  0.01%                    libjvm.so  Thread::muxAcquire 
  0.01%                    libjvm.so  Monitor::wait 
  0.01%           libpthread-2.12.so  pthread_self 
  0.01%            libhsdis-amd64.so  bfd_default_scan 
  0.01%                    libjvm.so  Optimizer::eliminate_null_checks 
  0.01%    0.03%           libjvm.so  outputStream::update_position 
  0.33%    0.07%  <...other 22 warm methods...>
....................................................................................................
 99.99%   99.53%  <totals>

....[Distribution by Source]........................................................................
 97.32%   97.37%         C2, level 4
  1.89%    1.95%              kernel
  0.38%    0.30%           libjvm.so
  0.12%    0.27%        libc-2.12.so
  0.10%           libpthread-2.12.so
  0.10%    0.07%   libhsdis-amd64.so
  0.06%    0.04%         interpreter
....................................................................................................
 99.99%  100.00%  <totals>



# Run complete. Total time: 00:05:12

Benchmark                  (N_str)  Mode  Cnt   Score    Error  Units
MyBenchmark.loop                64  avgt   10  ≈ 10⁻⁴            s/op
MyBenchmark.loop:·asm           64  avgt          NaN             ---
MyBenchmark.loop               128  avgt   10   0.002 ±  0.001   s/op
MyBenchmark.loop:·asm          128  avgt          NaN             ---
MyBenchmark.loop               256  avgt   10   0.022 ±  0.001   s/op
MyBenchmark.loop:·asm          256  avgt          NaN             ---
MyBenchmark.loop               512  avgt   10   0.244 ±  0.001   s/op
MyBenchmark.loop:·asm          512  avgt          NaN             ---
MyBenchmark.loop              1024  avgt   10   2.060 ±  0.004   s/op
MyBenchmark.loop:·asm         1024  avgt          NaN             ---
MyBenchmark.loop_ikj            64  avgt   10  ≈ 10⁻⁴            s/op
MyBenchmark.loop_ikj:·asm       64  avgt          NaN             ---
MyBenchmark.loop_ikj           128  avgt   10   0.001 ±  0.001   s/op
MyBenchmark.loop_ikj:·asm      128  avgt          NaN             ---
MyBenchmark.loop_ikj           256  avgt   10   0.011 ±  0.001   s/op
MyBenchmark.loop_ikj:·asm      256  avgt          NaN             ---
MyBenchmark.loop_ikj           512  avgt   10   0.084 ±  0.001   s/op
MyBenchmark.loop_ikj:·asm      512  avgt          NaN             ---
MyBenchmark.loop_ikj          1024  avgt   10   0.660 ±  0.002   s/op
MyBenchmark.loop_ikj:·asm     1024  avgt          NaN             ---
